<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="stage11733927_Navigation" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="sec-ch-ua" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua</stringProp>
            <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;110&quot;, &quot;Not A(Brand&quot;;v=&quot;24&quot;, &quot;Google Chrome&quot;;v=&quot;110&quot;</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-mobile" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
            <stringProp name="Header.value">?0</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-platform" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
            <stringProp name="Header.value">&quot;macOS&quot;</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Cache-Control</stringProp>
            <stringProp name="Header.value">no-cache</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">app.s.sonraisecurity.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_2" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_2</stringProp>
            <stringProp name="Argument.value">login.s.sonraisecurity.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_3" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_3</stringProp>
            <stringProp name="Argument.value">stage11733927.s.sonraisecurity.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_4" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_4</stringProp>
            <stringProp name="Argument.value">front-end-collector-web.s.sonraisecurity.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_5" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_5</stringProp>
            <stringProp name="Argument.value">jaeger-collector-web.s.sonraisecurity.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Token" elementType="Argument">
            <stringProp name="Argument.name">Token</stringProp>
            <stringProp name="Argument.value">Bearer eyJraWQiOiI5MGNmYmNmNy1iNzA2LTQ3ZTktYjcwZi0wYzAyMWQ1YTdjN2UiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiJzdGFnZS1ncmFwaHFsLXNlcnZlci5zLnNvbnJhaXNlY3VyaXR5LmNvbSIsInN1YiI6InNybjpzdGFnZTExNzMzOTI3OjpTb25yYWlVc2VyVG9rZW4vNGU3N2I4OWEtNmZjNC00MDYzLTg4MmEtOWJmODI2MzFlMmFhIiwiaHR0cHM6Ly9zb25yYWlzZWN1cml0eS5jb20vb3JncyI6WyJzdGFnZTExNzMzOTI3Il0sInNjb3BlIjoicmVhZDpkYXRhIHJlYWQ6cGxhdGZvcm0gYXJyaXZhbDp1cGxvYWQiLCJpc3MiOiJTb25yYWkiLCJodHRwczovL3NvbnJhaXNlY3VyaXR5LmNvbS9vcmciOiJzdGFnZTExNzMzOTI3IiwiZXhwIjoxNjgzODIyNDI5LCJpYXQiOjE2ODEyMzA0MjksImh0dHBzOi8vc29ucmFpc2VjdXJpdHkuY29tL2VudiI6InN0YWdlIiwiaHR0cHM6Ly9zb25yYWlzZWN1cml0eS5jb20vYXBpLXRva2VuIjoidjEuMCJ9.cXQjqGYe0IP8eG4Gaty-fgNemYJmOFUSDcK4KlHMx0lJqgsodbNa1qyMgf1A_fl5ZF_30wFvavNJDmU4ICyUyIOXffjO8HwJYSgyj3DGWoIJc7sGrMyK18_kQz8yDXEevTDO8BXEuAu1G9MwKpwUGvZzkZnOEzmJZ5kBsxDoxtgBvqs8mulgXT92b5LmsEYE59L_RZJmnpq8HKoUkt9q1YUsbJDqewAcTtSEmyGRRzqo9ircMVF_vebAsU0-6-4I3DjsRoO-oXlGyfDHpUPkQ6hObKoYux803pbOsbMOjlWq4dFHUirXEjCG8PwgbfSb2LDCG_GIcftB0_Ub1VuZ9w</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">false</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">false</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
        <stringProp name="DurationAssertion.duration">1000</stringProp>
      </DurationAssertion>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>true</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="Simple Data Writer" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>true</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">sonraisecurity_error.xml</stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Stag_11733927_Navigation" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="stage11733927_01_Launch" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://app.s.sonraisecurity.com/App" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">App</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://app.s.sonraisecurity.com/config.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">config.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://login.s.sonraisecurity.com/authorize?client_id=7fQzdcMRARuhzmfP3xoR7JAjfSlttq95&amp;redirect_uri=https%3A%2F%2Fapp.s.sonraisecurity.com%2FLogin&amp;audience=stage-graphql-server.s.sonraisecurity.com&amp;scope=openid%20profile%20email%20read%3Adata%20read%3Aplatform%20read%3Atoken&amp;response_type=code&amp;response_mode=query&amp;state=bEMwdWE4ckI1MUUwZXN2VWk2R3JoOFVyZjNhdnJQWEhUUEloMlJfR0JJSg%3D%3D&amp;nonce=n1U5WNz8je8hc4nn9PW~M7~TAifiuTISlkmOWLbG8gj&amp;code_challenge=8YMrNtGxEIOvzP890aJ37jryx9pOeZRd0PT5KZwqTPM&amp;code_challenge_method=S256&amp;auth0Client=eyJuYW1lIjoiYXV0aDAtc3BhLWpzIiwidmVyc2lvbiI6IjEuNi4zIn0%3D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="audience" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">audience</stringProp>
                  <stringProp name="Argument.value">stage-graphql-server.s.sonraisecurity.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth0Client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">auth0Client</stringProp>
                  <stringProp name="Argument.value">eyJuYW1lIjoiYXV0aDAtc3BhLWpzIiwidmVyc2lvbiI6IjEuNi4zIn0=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="scope" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">scope</stringProp>
                  <stringProp name="Argument.value">openid profile email read:data read:platform read:token</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="response_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">response_type</stringProp>
                  <stringProp name="Argument.value">code</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="redirect_uri" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">redirect_uri</stringProp>
                  <stringProp name="Argument.value">https://app.s.sonraisecurity.com/Login</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="state" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">state</stringProp>
                  <stringProp name="Argument.value">bEMwdWE4ckI1MUUwZXN2VWk2R3JoOFVyZjNhdnJQWEhUUEloMlJfR0JJSg==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="code_challenge_method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">code_challenge_method</stringProp>
                  <stringProp name="Argument.value">S256</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="nonce" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">nonce</stringProp>
                  <stringProp name="Argument.value">n1U5WNz8je8hc4nn9PW~M7~TAifiuTISlkmOWLbG8gj</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">7fQzdcMRARuhzmfP3xoR7JAjfSlttq95</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="code_challenge" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">code_challenge</stringProp>
                  <stringProp name="Argument.value">8YMrNtGxEIOvzP890aJ37jryx9pOeZRd0PT5KZwqTPM</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="response_mode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">response_mode</stringProp>
                  <stringProp name="Argument.value">query</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">authorize</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">1629.0</stringProp>
              <stringProp name="ConstantTimer.delay">814.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 1629 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="stage11733927_02_Sonrai_login" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://login.s.sonraisecurity.com/u/login/identifier?state=hKFo2SBIbC16dUJXWVZtcUJBZHMtSUYwaTZwODFSN0sya01Ia6Fur3VuaXZlcnNhbC1sb2dpbqN0aWTZIFJtNUJGeFNidU5EY2U1bmhtcnk2bV9fQTlRdE1NeVdGo2NpZNkgN2ZRemRjTVJBUnVoem1mUDN4b1I3SkFqZlNsdHRxOTU" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="state" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">state</stringProp>
                  <stringProp name="Argument.value">hKFo2SBIbC16dUJXWVZtcUJBZHMtSUYwaTZwODFSN0sya01Ia6Fur3VuaXZlcnNhbC1sb2dpbqN0aWTZIFJtNUJGeFNidU5EY2U1bmhtcnk2bV9fQTlRdE1NeVdGo2NpZNkgN2ZRemRjTVJBUnVoem1mUDN4b1I3SkFqZlNsdHRxOTU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="js-available" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">js-available</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="is-brave" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">is-brave</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="action" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">action</stringProp>
                  <stringProp name="Argument.value">default</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="state" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">state</stringProp>
                  <stringProp name="Argument.value">hKFo2SBIbC16dUJXWVZtcUJBZHMtSUYwaTZwODFSN0sya01Ia6Fur3VuaXZlcnNhbC1sb2dpbqN0aWTZIFJtNUJGeFNidU5EY2U1bmhtcnk2bV9fQTlRdE1NeVdGo2NpZNkgN2ZRemRjTVJBUnVoem1mUDN4b1I3SkFqZlNsdHRxOTU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="webauthn-available" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">webauthn-available</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="webauthn-platform-available" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">webauthn-platform-available</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                  <stringProp name="Argument.value">manish.jamalia@sonraisecurity.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">u/login/identifier</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">13525.0</stringProp>
              <stringProp name="ConstantTimer.delay">6762.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 13525 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://login.s.sonraisecurity.com/u/login/password?state=hKFo2SBIbC16dUJXWVZtcUJBZHMtSUYwaTZwODFSN0sya01Ia6Fur3VuaXZlcnNhbC1sb2dpbqN0aWTZIFJtNUJGeFNidU5EY2U1bmhtcnk2bV9fQTlRdE1NeVdGo2NpZNkgN2ZRemRjTVJBUnVoem1mUDN4b1I3SkFqZlNsdHRxOTU" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="state" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">state</stringProp>
                  <stringProp name="Argument.value">hKFo2SBIbC16dUJXWVZtcUJBZHMtSUYwaTZwODFSN0sya01Ia6Fur3VuaXZlcnNhbC1sb2dpbqN0aWTZIFJtNUJGeFNidU5EY2U1bmhtcnk2bV9fQTlRdE1NeVdGo2NpZNkgN2ZRemRjTVJBUnVoem1mUDN4b1I3SkFqZlNsdHRxOTU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                  <stringProp name="Argument.value">08Bce158#Happiness@1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="action" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">action</stringProp>
                  <stringProp name="Argument.value">default</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="state" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">state</stringProp>
                  <stringProp name="Argument.value">hKFo2SBIbC16dUJXWVZtcUJBZHMtSUYwaTZwODFSN0sya01Ia6Fur3VuaXZlcnNhbC1sb2dpbqN0aWTZIFJtNUJGeFNidU5EY2U1bmhtcnk2bV9fQTlRdE1NeVdGo2NpZNkgN2ZRemRjTVJBUnVoem1mUDN4b1I3SkFqZlNsdHRxOTU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                  <stringProp name="Argument.value">manish.jamalia@sonraisecurity.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">u/login/password</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">7144.0</stringProp>
              <stringProp name="ConstantTimer.delay">3572</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 7144 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://app.s.sonraisecurity.com/config.json" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">config.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://login.s.sonraisecurity.com/oauth/token" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;grant_type&quot;:&quot;authorization_code&quot;,&quot;redirect_uri&quot;:&quot;https://app.s.sonraisecurity.com/Login&quot;,&quot;audience&quot;:&quot;stage-graphql-server.s.sonraisecurity.com&quot;,&quot;client_id&quot;:&quot;7fQzdcMRARuhzmfP3xoR7JAjfSlttq95&quot;,&quot;code_verifier&quot;:&quot;ESMHCE59U6fNtAvzy444nc8C25E3UOKy4WEkzBr-jMR&quot;,&quot;code&quot;:&quot;mIMgVq2Mck1ibNdxYfn5T2xUxIJIOj0L-3OwbvnEGyUI7&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">oauth/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T00_Graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;variables&quot;:{},&quot;query&quot;:&quot;\n        {\n          __schema {\n            types {\n              kind\n              name\n              possibleTypes {\n                name\n              }\n            }\n          }\n        }\n      &quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">9b341da3511995a0aec9b709672a568e</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">d4f58eb02b5045eb</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">9b341da3511995a0aec9b709672a568e-d4f58eb02b5045eb-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T01_currentUser" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;currentUser&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query currentUser {\n  SonraiCurrentUsers {\n    items {\n      profile\n      srn\n      roleAssignments {\n        items {\n          scope\n          role {\n            items {\n              expandedPermissions\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">9b9a836fb54f095e1d9bf1e8a83ac088</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:1ffa-4501-bb2a-165e9ee63c2e/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">586dd695c626c132</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">9b9a836fb54f095e1d9bf1e8a83ac088-586dd695c626c132-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">currentUser</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T02_currentUser" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;currentUser&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query currentUser {\n  SonraiCurrentUsers {\n    items {\n      profile\n      srn\n      eulaAcceptances {\n        items {\n          eulaUrl\n          acceptDate\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">c0eb0c80c08607c3cf4fb665c40d08ce</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:62ac-4c44-9b35-470339a0dbc1/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">7bd7a30dc253abfd</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">c0eb0c80c08607c3cf4fb665c40d08ce-7bd7a30dc253abfd-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">currentUser</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T03_getSonraiUsers" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getSonraiUsers&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getSonraiUsers {\n  SonraiUsers {\n    items {\n      srn\n      email\n      name\n      isActive\n      lastLogin\n      resourceId\n      roleAssignments {\n        items {\n          srn\n          scope\n          resourceId\n          role {\n            items {\n              srn\n              resourceId\n              name\n              description\n              permissions\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      orgs\n      avatarUrl\n      lastLogin\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">2ccc28776bf766a0c942df4e807b3c75</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:7a9c-46eb-9db1-8a9de8159086/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">3bb35f9911d4b5b0</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">2ccc28776bf766a0c942df4e807b3c75-3bb35f9911d4b5b0-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getSonraiUsers</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T04_getSonraiUIConfig" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getSonraiUIConfig&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getSonraiUIConfig {\n  SonraiUiConfigs {\n    items {\n      config\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">6ac8d0235dca83a9bee8d7df95386ba4</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:9684-49d2-aca2-1a1223e7040c/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">86985751a7df497c</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">6ac8d0235dca83a9bee8d7df95386ba4-86985751a7df497c-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getSonraiUIConfig</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T05_getAllEnvironments" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getAllEnvironments&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getAllEnvironments {\n  Environments {\n    count\n    items {\n      description\n      label\n      friendlyName\n      targetMaturityLevel\n      name\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">060d232122ea4b68e2f6a9efccd8b49f</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:68ef-434d-b03e-7cc6714b40e7/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">d4bda71c439793c0</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">060d232122ea4b68e2f6a9efccd8b49f-d4bda71c439793c0-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getAllEnvironments</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T06_getAllSecurityAreas" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getAllSecurityAreas&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getAllSecurityAreas {\n  SecurityAreas {\n    count\n    items {\n      description\n      label\n      name\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">75745b17aa58e2f78fdd9602195fc1a5</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:3048-41fc-b49c-ba95d373b711/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">c71aeb52fdcab443</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">75745b17aa58e2f78fdd9602195fc1a5-c71aeb52fdcab443-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getAllSecurityAreas</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T07_getAllMaturityLevels" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getAllMaturityLevels&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getAllMaturityLevels {\n  MaturityLevels {\n    count\n    items {\n      description\n      label\n      level\n      name\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">68f1aca811541e14e52247f53fdb2bed</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:7226-48d1-be10-47e699187023/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">40f3205835a7ce9c</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">68f1aca811541e14e52247f53fdb2bed-40f3205835a7ce9c-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getAllMaturityLevels</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T08_getCollectorConfigurations" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getCollectorConfigurations&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getCollectorConfigurations {\n  CollectorConfigurations {\n    items {\n      id\n      srn\n      targetSrn\n      platformAccountSrn\n      blob\n      enabled\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">08115f66ac791ade03a7ee40dd12436a</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:24d0-4a38-98a6-420311417901/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">8d8bc02c988a6ee6</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">08115f66ac791ade03a7ee40dd12436a-8d8bc02c988a6ee6-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getCollectorConfigurations</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T09_getSonraiOrgConfig" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getSonraiOrgConfig&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getSonraiOrgConfig {\n  SonraiOrgConfig {\n    orgName\n    features\n    configs\n    limits\n    subscriptionType\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">54e3fb7b51622f7e53b6e0ba5b4a2077</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:841f-4e78-a17e-ce8b5464d2b5/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">f8b80f403569f922</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">54e3fb7b51622f7e53b6e0ba5b4a2077-f8b80f403569f922-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getSonraiOrgConfig</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T10_IntrospectionQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;IntrospectionQuery&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query IntrospectionQuery {\n  Queries(source: DATA)\n  Relations {\n    type\n    label\n    relations {\n      name\n      reverse\n      to\n      from\n      __typename\n    }\n    interfaces {\n      type\n      relations {\n        name\n        reverse\n        to\n        from\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  PivotedIntrospection {\n    types\n    __typename\n  }\n  __type(name: \&quot;Query\&quot;) {\n    fields {\n      name\n      type {\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">e0535adc7e879ca137aff6d945ae0d07</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:7cba-4977-8400-009e551c5240/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">81e6d50a39263d3c</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">e0535adc7e879ca137aff6d945ae0d07-81e6d50a39263d3c-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">pivoted-inspection-query</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T11_get_all_roles" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;get_all_roles&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query get_all_roles {\n  SonraiRoles {\n    items {\n      name\n      srn\n      permissions\n      expandedPermissions\n      description\n      resourceId\n      roleAssignments {\n        items {\n          scope\n          srn\n          user {\n            items {\n              srn\n              name\n              email\n              resourceId\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">02a20e083e317a1fa4138673e57b6bb5</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:3d89-47a7-94f6-f75bb0643a37/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">8afdf60471f11c15</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">02a20e083e317a1fa4138673e57b6bb5-8afdf60471f11c15-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">get_all_roles</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T12_getSonraiSeaches" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getSonraiSeaches&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getSonraiSeaches {\n  SavedQueries {\n    items(limit: -1) {\n      name\n      query\n      variables {\n        items {\n          defaultValue\n          name\n          __typename\n        }\n        __typename\n      }\n      srn\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">e75c2a1f7e75f44f9be54f0617b0a335</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:c6f5-43af-b1e5-4080eb609582/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">e8bbdab82b220100</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">e75c2a1f7e75f44f9be54f0617b0a335-e8bbdab82b220100-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getSonraiSeaches</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T13_getSavedSearches" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getSavedSearches&quot;,&quot;variables&quot;:{&quot;includeDetails&quot;:false},&quot;query&quot;:&quot;query getSavedSearches($includeDetails: Boolean = true) {\n  Searches {\n    items(limit: -1) {\n      name\n      description\n      query\n      createdDate\n      createdBy\n      sid\n      srn\n      lastModified\n      rootQueryName\n      resourceId\n      containedByWidget @include(if: $includeDetails) {\n        count\n        items(limit: -1) {\n          title\n          type\n          srn\n          containedBy {\n            items {\n              name\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      containedByControlPolicy @include(if: $includeDetails) {\n        count\n        items(limit: -1) {\n          title\n          srn\n          __typename\n        }\n        __typename\n      }\n      ownedByOrganization @include(if: $includeDetails) {\n        items {\n          sid\n          name\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">7a2ff10f92c78065bf8b65bd5b30b4c6</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:535e-4eb6-9f21-e7f93e9a206a/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">2102f28dac683976</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">7a2ff10f92c78065bf8b65bd5b30b4c6-2102f28dac683976-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getSavedSearches</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T14_fetchSwimlanes" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;fetchSwimlanes&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query fetchSwimlanes {\n  Swimlanes {\n    items(limit: -1) {\n      description\n      label\n      title\n      srn\n      defaultImportance\n      createdBy\n      sid\n      preventionEnabled\n      lastModified\n      createdDate\n      name\n      accounts\n      names\n      resourceIds\n      tags\n      resourceId\n      environments\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">c8c651858775f519419d1388c432f03d</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:75a7-4bad-8a34-b66e2a3c2b39/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">676ce9977a22257a</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">c8c651858775f519419d1388c432f03d-676ce9977a22257a-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">fetchSwimlanes</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T15_getAccounts" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getAccounts&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getAccounts {\n  Accounts {\n    items(limit: -1) {\n      name\n      srn\n      friendlyName\n      account\n      cloudType\n      type\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">034be4eee2444b1f8b089d424e6ace48</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:5849-4f7f-a039-937a0823c7dc/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">a8e33aa8225da371</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">034be4eee2444b1f8b089d424e6ace48-a8e33aa8225da371-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getAccounts</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T16_getSubscriptions" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getSubscriptions&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getSubscriptions {\n  Subscriptions {\n    items(limit: -1) {\n      friendlyName\n      name\n      srn\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">164a61fbb6428a448dba9e81ca7ba809</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:55e2-47ec-8d2f-6ebc664f169c/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">1f9b1f7a0fa7539a</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">164a61fbb6428a448dba9e81ca7ba809-1f9b1f7a0fa7539a-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getSubscriptions</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T17_getControlFrameworks" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getControlFrameworks&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getControlFrameworks {\n  ControlFrameworks {\n    count\n    items(limit: -1) {\n      enabled\n      lastModified\n      title\n      createdDate\n      createdBy\n      description\n      name\n      srn\n      resourceId\n      shortDescription\n      createdBy\n      swimlaneSRNs\n      lastRunDate\n      lastRunSwimlanes\n      ownedByOrganization {\n        items {\n          sid\n          name\n          __typename\n        }\n        __typename\n      }\n      contains {\n        count\n        items {\n          srn\n          __typename\n        }\n        __typename\n      }\n      cloneOf {\n        count\n        items {\n          srn\n          __typename\n        }\n        __typename\n      }\n      clonedBy {\n        count\n        items {\n          srn\n          ... on Controlframework {\n            swimlaneSRNs\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">fe6d1473f8b2e17ed438f679c9e81e55</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:c647-4015-ab21-6cd02e61b2c3/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">4eace98ac32919ab</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">fe6d1473f8b2e17ed438f679c9e81e55-4eace98ac32919ab-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getControlFrameworks</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T18_getResourceLabels" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getResourceLabels&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getResourceLabels {\n  Relations(where: {type: {value: \&quot;Resource\&quot;}}) {\n    label\n    implementingTypes {\n      label\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">1c49959ed11c43465f02ce8593f2c996</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:2619-4ba4-9afc-29c6ee7d21cd/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">2860054303f7b503</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">1c49959ed11c43465f02ce8593f2c996-2860054303f7b503-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getResourceLabels</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T19_saveUserProfile" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;saveUserProfile&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;mutation saveUserProfile($profile: Blob) {\n  UpdateSonraiCurrentUsers(input: [{profile: $profile}]) {\n    items {\n      srn\n      profile\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">2963a9c07c54e3857401c9b49701376a</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:4dfe-42e3-a8bd-b726152bbf02/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">16934ec91e53b10b</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">2963a9c07c54e3857401c9b49701376a-16934ec91e53b10b-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">saveUserProfile</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T20_getSavedSearches" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getSavedSearches&quot;,&quot;variables&quot;:{&quot;includeDetails&quot;:true},&quot;query&quot;:&quot;query getSavedSearches($includeDetails: Boolean = true) {\n  Searches {\n    items(limit: -1) {\n      name\n      description\n      query\n      createdDate\n      createdBy\n      sid\n      srn\n      lastModified\n      rootQueryName\n      resourceId\n      containedByWidget @include(if: $includeDetails) {\n        count\n        items(limit: -1) {\n          title\n          type\n          srn\n          containedBy {\n            items {\n              name\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      containedByControlPolicy @include(if: $includeDetails) {\n        count\n        items(limit: -1) {\n          title\n          srn\n          __typename\n        }\n        __typename\n      }\n      ownedByOrganization @include(if: $includeDetails) {\n        items {\n          sid\n          name\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">4e37a74a9394a616a9ff71d63ecf3b95</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:ebcd-48b4-9f3e-d5b4b4321afe/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">8959b0bdf6e95787</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">4e37a74a9394a616a9ff71d63ecf3b95-8959b0bdf6e95787-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getSavedSearches</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T21_sonrai_user" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;sonrai_user&quot;,&quot;variables&quot;:{&quot;srn&quot;:&quot;srn:stage11733927::SonraiUser/40e2156d-22d7-4b0b-94ec-1d029f565cb8&quot;},&quot;query&quot;:&quot;query sonrai_user($srn: String) {\n  SonraiUsers(where: {srn: {value: $srn}}) {\n    items {\n      srn\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">187d651c9c3cfbd71e9b60c512708079</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:bac5-433b-87ae-f9eb1929af49/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">3b49d583d38aaa22</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">187d651c9c3cfbd71e9b60c512708079-3b49d583d38aaa22-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">sonrai_user</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T22_getReportPoll" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getReportPoll&quot;,&quot;variables&quot;:{&quot;ids&quot;:[],&quot;userSrn&quot;:null},&quot;query&quot;:&quot;query getReportPoll($userSrn: String!, $ids: [Long!]!) {\n  SonraiReports(\n    where: {id: {op: IN_LIST, values: $ids}, createdBy: {value: $userSrn}}\n  ) {\n    items {\n      name\n      id\n      status\n      createdDate\n      reportConfig {\n        config\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">ffd58d24f2e17e9a666763b8d1b21fad</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:4067-4fab-84a3-2d813b144771/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">663ba1850d5f7ddf</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">ffd58d24f2e17e9a666763b8d1b21fad-663ba1850d5f7ddf-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getReportPoll</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T23_getServiceTypes" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getServiceTypes&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getServiceTypes {\n  ServiceTypes {\n    items {\n      name\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">0a46189e4f5b3e9001f2fddaf27fbad6</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:faa1-480a-be54-39c3a7b97731/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">a5e2862c256eeca2</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">0a46189e4f5b3e9001f2fddaf27fbad6-a5e2862c256eeca2-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getServiceTypes</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T24_getReportPoll" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getReportPoll&quot;,&quot;variables&quot;:{&quot;ids&quot;:[],&quot;userSrn&quot;:&quot;srn:stage11733927::SonraiUser/40e2156d-22d7-4b0b-94ec-1d029f565cb8&quot;},&quot;query&quot;:&quot;query getReportPoll($userSrn: String!, $ids: [Long!]!) {\n  SonraiReports(\n    where: {id: {op: IN_LIST, values: $ids}, createdBy: {value: $userSrn}}\n  ) {\n    items {\n      name\n      id\n      status\n      createdDate\n      reportConfig {\n        config\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">b87a9f22a9c1781bfc67c47466b2b4b2</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:7527-4c78-bdd5-808201245d0c/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">6d11430c418d0676</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">b87a9f22a9c1781bfc67c47466b2b4b2-6d11430c418d0676-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getReportPoll</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T25_getReportsInit" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getReportsInit&quot;,&quot;variables&quot;:{&quot;userSrn&quot;:&quot;srn:stage11733927::SonraiUser/40e2156d-22d7-4b0b-94ec-1d029f565cb8&quot;},&quot;query&quot;:&quot;query getReportsInit($userSrn: String!) {\n  SonraiReports(where: {createdBy: {value: $userSrn}}) {\n    items {\n      name\n      id\n      status\n      createdDate\n      reportConfig {\n        config\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">b87a9f22a9c1781bfc67c47466b2b4b2</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:0aa9-4bfe-a31d-f7c65147e189/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">c18aadef4e318568</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">b87a9f22a9c1781bfc67c47466b2b4b2-c18aadef4e318568-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getReportsInit</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T26_licensing" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;licensing&quot;,&quot;variables&quot;:{&quot;ComputeFilters&quot;:{&quot;type&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;EC2&quot;,&quot;GCPVMInstance&quot;,&quot;VirtualMachine&quot;,&quot;OCIInstance&quot;]},&quot;active&quot;:{&quot;value&quot;:true}},&quot;AccountFilters&quot;:{&quot;type&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;AWSAccount&quot;,&quot;GCPProject&quot;,&quot;AzureTenant&quot;]},&quot;active&quot;:{&quot;value&quot;:true}},&quot;SubscriptionFilters&quot;:{&quot;active&quot;:{&quot;value&quot;:true}},&quot;OCI_dynamicgroups&quot;:{&quot;type&quot;:{&quot;value&quot;:&quot;OCIDynamicGroup&quot;},&quot;active&quot;:{&quot;value&quot;:true}},&quot;OCI_Users&quot;:{&quot;type&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;OCIUser&quot;},&quot;active&quot;:{&quot;value&quot;:true}},&quot;AWS_RolesFilters&quot;:{&quot;active&quot;:{&quot;value&quot;:true}},&quot;GCP_ServiceAccountsFilters&quot;:{&quot;type&quot;:{&quot;value&quot;:&quot;GCPServiceAccount&quot;},&quot;active&quot;:{&quot;value&quot;:true}},&quot;Azure_ServicePrincipalsFilters&quot;:{&quot;type&quot;:{&quot;value&quot;:&quot;ServicePrincipal&quot;},&quot;active&quot;:{&quot;value&quot;:true},&quot;metadata&quot;:{&quot;op&quot;:&quot;NOT_CONTAINS&quot;,&quot;value&quot;:&quot;servicePrincipal.appOwnerOrganizationId:f8cdef31-a31e-4b4a-93e4-5f571e91255a&quot;},&quot;or&quot;:[{&quot;hasAttached&quot;:{&quot;count&quot;:{&quot;op&quot;:&quot;GT&quot;,&quot;value&quot;:0}}},{&quot;isMemberOf&quot;:{&quot;items&quot;:{&quot;hasAttached&quot;:{&quot;count&quot;:{&quot;op&quot;:&quot;GT&quot;,&quot;value&quot;:0}}}}}]}},&quot;query&quot;:&quot;query licensing($Azure_ServicePrincipalsFilters: UserFilter, $GCP_ServiceAccountsFilters: UserFilter, $AWS_RolesFilters: RoleFilter, $OCI_Users: UserFilter, $OCI_dynamicgroups: IdentityreferenceFilter, $AccountFilters: AccountFilter, $ComputeFilters: ComputeFilter, $SubscriptionFilters: SubscriptionFilter) {\n  Azure_ServicePrincipals: Users(where: $Azure_ServicePrincipalsFilters) {\n    count\n    __typename\n  }\n  GCP_ServiceAccounts: Users(where: $GCP_ServiceAccountsFilters) {\n    count\n    __typename\n  }\n  AWS_Roles: Roles(where: $AWS_RolesFilters) {\n    count\n    __typename\n  }\n  OCI_Users: Users(where: $OCI_Users) {\n    count\n    __typename\n  }\n  OCI_dynamicgroups: IdentityReferences(where: $OCI_dynamicgroups) {\n    count\n    __typename\n  }\n  Accounts: Accounts(where: $AccountFilters) {\n    group {\n      key {\n        cloudType\n        __typename\n      }\n      count\n      __typename\n    }\n    total: count\n    __typename\n  }\n  Subscriptions(where: $SubscriptionFilters) {\n    total: count\n    __typename\n  }\n  Compute: Compute(where: $ComputeFilters) {\n    group {\n      key {\n        type\n        cloudType\n        __typename\n      }\n      count\n      __typename\n    }\n    total: count\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">b87a9f22a9c1781bfc67c47466b2b4b2</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:60e5-4313-a17f-17ea68805f19/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">28b48c085965319d</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">b87a9f22a9c1781bfc67c47466b2b4b2-28b48c085965319d-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">licensing</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T27_getStandardRisk" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getStandardRisk&quot;,&quot;variables&quot;:{&quot;rollupFilters&quot;:{&quot;standardSrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::Standard/ba35a1d1-c211-473e-894a-ad16fd8b7b09&quot;,&quot;srn:supersonrai::Standard/g67udki0-kd98-3444-kk43-lp01shj38dj7&quot;,&quot;srn:supersonrai::Standard/df23cbab-df37-4676-af99-49ed3a9eee29&quot;,&quot;srn:supersonrai::Standard/273387a5-53c1-4a38-8f97-7b200235069f&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;}},&quot;trendFilters&quot;:{&quot;standardSrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::Standard/ba35a1d1-c211-473e-894a-ad16fd8b7b09&quot;,&quot;srn:supersonrai::Standard/g67udki0-kd98-3444-kk43-lp01shj38dj7&quot;,&quot;srn:supersonrai::Standard/df23cbab-df37-4676-af99-49ed3a9eee29&quot;,&quot;srn:supersonrai::Standard/273387a5-53c1-4a38-8f97-7b200235069f&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}}},&quot;query&quot;:&quot;query getStandardRisk($rollupFilters: TicketRollupFilter!, $trendFilters: TicketTrendsFilter!) {\n  overall: TicketRollups(\n    where: $rollupFilters\n    includeRollup: {standardSrn: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      riskScoreNumeric\n      riskScoreDescription\n      __typename\n    }\n    __typename\n  }\n  trend: TicketTrendsV2(\n    where: $trendFilters\n    granularity: {granularity: DAY}\n    type: {type: RISK_LEVELS}\n  ) {\n    items(includeRisk: true) {\n      riskLevel\n      dateTime\n      __typename\n    }\n    __typename\n  }\n  trendChange: TicketPercentageIncrease(where: $trendFilters) {\n    isValid\n    riskChange\n    percentageChange(includeRisk: true)\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">b87a9f22a9c1781bfc67c47466b2b4b2</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:9e85-4984-86d5-71bb165a5f3b/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">5923420cbed5e243</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">b87a9f22a9c1781bfc67c47466b2b4b2-5923420cbed5e243-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getStandardRisk</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T28_topInsights" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;topInsights&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::StandardFamily/4847a7fe-5568-443d-bd24-90194d137372&quot;,&quot;srn:supersonrai::StandardFamily/17f7243f-63eb-4b92-afa9-6decbfe93111&quot;,&quot;srn:supersonrai::StandardFamily/867c56dd-1ce8-441f-b4cb-6c5298439726&quot;]},&quot;standardSrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::Standard/ba35a1d1-c211-473e-894a-ad16fd8b7b09&quot;,&quot;srn:supersonrai::Standard/g67udki0-kd98-3444-kk43-lp01shj38dj7&quot;,&quot;srn:supersonrai::Standard/df23cbab-df37-4676-af99-49ed3a9eee29&quot;,&quot;srn:supersonrai::Standard/273387a5-53c1-4a38-8f97-7b200235069f&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]}}},&quot;query&quot;:&quot;query topInsights($filters: TopInsightsFilter) {\n  TopInsights(where: $filters) {\n    items {\n      insightType\n      topControlsByFamily {\n        family\n        standardFamily {\n          name\n          containedBy {\n            items {\n              name\n              srn\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        issues_perc\n        family_risk\n        controls {\n          control\n          score_improvement\n          standardControl {\n            name\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">b87a9f22a9c1781bfc67c47466b2b4b2</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:d1cd-4c21-bb24-d7920aa808f9/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">b271a3473048aefc</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">b87a9f22a9c1781bfc67c47466b2b4b2-b271a3473048aefc-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">topInsights</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T29_TopFiveIssues" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;TopFiveIssues&quot;,&quot;variables&quot;:{&quot;filter&quot;:{&quot;standardSrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::Standard/ba35a1d1-c211-473e-894a-ad16fd8b7b09&quot;,&quot;srn:supersonrai::Standard/g67udki0-kd98-3444-kk43-lp01shj38dj7&quot;,&quot;srn:supersonrai::Standard/df23cbab-df37-4676-af99-49ed3a9eee29&quot;,&quot;srn:supersonrai::Standard/273387a5-53c1-4a38-8f97-7b200235069f&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/4be9e1cf-99da-4fda-91cd-1256cefadf38&quot;}}},&quot;query&quot;:&quot;query TopFiveIssues($filter: TicketsFilter!) {\n  Tickets(where: $filter) {\n    items(\n      limit: 5\n      orderBy: [{severityNumeric: {order: DESC, precedence: 2}}, {srn: {order: DESC, precedence: 1}}]\n      includeRisk: true\n    ) {\n      srn\n      title\n      templatedTitle\n      severityCategory\n      account\n      resourceName\n      resourceType\n      description\n      ticketKey\n      resourceSRN\n      isOperationalized\n      status\n      swimlaneSRNs\n      createdBy\n      policy {\n        srn\n        description\n        mappedBy {\n          items {\n            containedBy {\n              items {\n                srn\n                name\n                containedBy {\n                  items {\n                    srn\n                    name\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">b87a9f22a9c1781bfc67c47466b2b4b2</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:2f49-4395-8dc1-adb633493937/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">e3d0f7e3ac00e04b</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">b87a9f22a9c1781bfc67c47466b2b4b2-e3d0f7e3ac00e04b-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">TopFiveIssues</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T30_InsightsFindingsTrends" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;InsightsFindingsTrends&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T18:41:06.521Z&quot;,&quot;2023-03-30T17:41:06.520Z&quot;]}},&quot;granularityRates&quot;:&quot;DAY&quot;,&quot;granularityTotals&quot;:&quot;DAY&quot;},&quot;query&quot;:&quot;query InsightsFindingsTrends($filters: TicketTrendsFilter, $granularityRates: TicketTrendGranularity!, $granularityTotals: TicketTrendGranularity!) {\n  Rates: TicketTrends(\n    where: $filters\n    type: {type: DAILY_RATES}\n    granularity: {granularity: $granularityRates}\n  ) {\n    items(includeRisk: true) {\n      count\n      dateTime\n      severityCategory\n      status\n      __typename\n    }\n    __typename\n  }\n  Totals: TicketTrendsV2(\n    granularity: {granularity: $granularityTotals}\n    where: $filters\n    type: {type: DAILY_TOTALS}\n  ) {\n    items(includeRisk: true) {\n      count\n      dateTime\n      severityCategory\n      status\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">b87a9f22a9c1781bfc67c47466b2b4b2</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:229b-4660-b6ad-e023f9aeb704/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">8aae440b3d39f5bd</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">b87a9f22a9c1781bfc67c47466b2b4b2-8aae440b3d39f5bd-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">InsightsFindingsTrends</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T31_fetchClouds" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;fetchClouds&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query fetchClouds {\n  Clouds {\n    items {\n      srn\n      name\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">b87a9f22a9c1781bfc67c47466b2b4b2</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:df44-4aa7-8f71-48740cd9710e/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">e18debad0b9aaf39</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">b87a9f22a9c1781bfc67c47466b2b4b2-e18debad0b9aaf39-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">fetchClouds</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T32_InsightsFindingsTrends" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;InsightsFindingsTrends&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T18:41:06.528Z&quot;,&quot;2023-03-30T17:41:06.520Z&quot;]}},&quot;granularityRates&quot;:&quot;DAY&quot;,&quot;granularityTotals&quot;:&quot;DAY&quot;},&quot;query&quot;:&quot;query InsightsFindingsTrends($filters: TicketTrendsFilter, $granularityRates: TicketTrendGranularity!, $granularityTotals: TicketTrendGranularity!) {\n  Rates: TicketTrends(\n    where: $filters\n    type: {type: DAILY_RATES}\n    granularity: {granularity: $granularityRates}\n  ) {\n    items(includeRisk: true) {\n      count\n      dateTime\n      severityCategory\n      status\n      __typename\n    }\n    __typename\n  }\n  Totals: TicketTrendsV2(\n    granularity: {granularity: $granularityTotals}\n    where: $filters\n    type: {type: DAILY_TOTALS}\n  ) {\n    items(includeRisk: true) {\n      count\n      dateTime\n      severityCategory\n      status\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">b87a9f22a9c1781bfc67c47466b2b4b2</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:cb80-4b56-a7c5-6997c87119c5/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">fb808beae22b5204</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">b87a9f22a9c1781bfc67c47466b2b4b2-fb808beae22b5204-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">InsightsFindingsTrends</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T33_getIdentityInsights" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getIdentityInsights&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;standardSrn&quot;:{&quot;value&quot;:&quot;srn:supersonrai::Standard/df23cbab-df37-4676-af99-49ed3a9eee29&quot;},&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/4be9e1cf-99da-4fda-91cd-1256cefadf38&quot;},&quot;standardControlSrn&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;resourceTypeFriendlyName&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;cloudType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;severityCategory&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;ticketKey&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;resourceType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]}}},&quot;query&quot;:&quot;query getIdentityInsights($filters: TicketRollupFilter!) {\n  TicketRollups(\n    where: $filters\n    includeRollup: {swimlaneSrn: true, environment: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      cloudType\n      standardControlSrn\n      standardSrn\n      standardFamilySrn\n      severityCategory\n      standardFamily {\n        name\n        __typename\n      }\n      resourceType\n      ticketKey\n      resourceTypeFriendlyName\n      controlPolicyTitle\n      standardControl {\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">9e927b995ef76e82c1bb6c4f2e56be4c</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:bf8d-419d-b35a-216792074fe2/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">13bd1cc28d93d051</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">9e927b995ef76e82c1bb6c4f2e56be4c-13bd1cc28d93d051-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getIdentityInsights</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T34_getFamilyRollupQuery" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFamilyRollupQuery&quot;,&quot;variables&quot;:{&quot;rollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::StandardFamily/4181cdc2-0e7d-4e37-837b-2ed1c1cc7331&quot;,&quot;srn:supersonrai::StandardFamily/0278394d-50ce-4fa3-9784-7ec96dd54345&quot;,&quot;srn:supersonrai::StandardFamily/53be9664-e709-477b-b0be-4f9d5266c372&quot;,&quot;srn:supersonrai::StandardFamily/03e22038-c363-47b2-ae50-723bc79d9f19&quot;,&quot;srn:supersonrai::StandardFamily/0372db85-bda8-40bf-8047-14974283c718&quot;,&quot;srn:supersonrai::StandardFamily/17f7243f-63eb-4b92-afa9-6decbfe93111&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;}},&quot;policyCountRollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::StandardFamily/4181cdc2-0e7d-4e37-837b-2ed1c1cc7331&quot;,&quot;srn:supersonrai::StandardFamily/0278394d-50ce-4fa3-9784-7ec96dd54345&quot;,&quot;srn:supersonrai::StandardFamily/53be9664-e709-477b-b0be-4f9d5266c372&quot;,&quot;srn:supersonrai::StandardFamily/03e22038-c363-47b2-ae50-723bc79d9f19&quot;,&quot;srn:supersonrai::StandardFamily/0372db85-bda8-40bf-8047-14974283c718&quot;,&quot;srn:supersonrai::StandardFamily/17f7243f-63eb-4b92-afa9-6decbfe93111&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;firstSeen&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}},&quot;trendFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::StandardFamily/4181cdc2-0e7d-4e37-837b-2ed1c1cc7331&quot;,&quot;srn:supersonrai::StandardFamily/0278394d-50ce-4fa3-9784-7ec96dd54345&quot;,&quot;srn:supersonrai::StandardFamily/53be9664-e709-477b-b0be-4f9d5266c372&quot;,&quot;srn:supersonrai::StandardFamily/03e22038-c363-47b2-ae50-723bc79d9f19&quot;,&quot;srn:supersonrai::StandardFamily/0372db85-bda8-40bf-8047-14974283c718&quot;,&quot;srn:supersonrai::StandardFamily/17f7243f-63eb-4b92-afa9-6decbfe93111&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}}},&quot;query&quot;:&quot;query getFamilyRollupQuery($rollupFilters: TicketRollupFilter!, $trendFilters: TicketTrendsFilter!, $policyCountRollupFilters: TicketRollupFilter!) {\n  policyCount: TicketRollups(\n    where: $policyCountRollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, standardFamilySrn: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      controlPolicyTitle\n      __typename\n    }\n    __typename\n  }\n  overall: TicketRollups(\n    where: $rollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, standardFamilySrn: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      riskScoreDescription\n      __typename\n    }\n    __typename\n  }\n  trend: TicketPercentageIncrease(where: $trendFilters) {\n    isValid\n    countChange\n    percentageChange(includeRisk: true)\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">ec89f19da3e6d94f8a98cbaf910acfbb</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:25f6-477e-b9b8-2ffd97276c8a/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">6ecc5fcb65f24fda</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">ec89f19da3e6d94f8a98cbaf910acfbb-6ecc5fcb65f24fda-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getFamilyRollupQuery</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T35_getDataProtectionInsights" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getDataProtectionInsights&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;standardSrn&quot;:{&quot;value&quot;:&quot;srn:supersonrai::Standard/g67udki0-kd98-3444-kk43-lp01shj38dj7&quot;},&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::StandardFamily/70dcb666-a968-4bc5-ba75-43f02480054e&quot;,&quot;srn:supersonrai::StandardFamily/d97fae03-7c68-4a85-b84a-5296984006fd&quot;,&quot;srn:supersonrai::StandardFamily/49cc212c-8110-49fa-bfb3-35d3bfd48a5d&quot;,&quot;srn:supersonrai::StandardFamily/439670ce-e131-4318-a438-e5e28d2af5cc&quot;,&quot;srn:supersonrai::StandardFamily/4847a7fe-5568-443d-bd24-90194d137372&quot;]},&quot;standardControlSrn&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;severityCategory&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;cloudType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;resourceType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;ticketKey&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;resourceTypeFriendlyName&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]}}},&quot;query&quot;:&quot;query getDataProtectionInsights($filters: TicketRollupFilter!) {\n  TicketRollups(\n    where: $filters\n    includeRollup: {swimlaneSrn: true, environment: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      cloudType\n      standardControlSrn\n      standardSrn\n      standardFamilySrn\n      standardFamily {\n        name\n        __typename\n      }\n      resourceType\n      resourceTypeFriendlyName\n      controlPolicyTitle\n      ticketKey\n      severityCategory\n      standardControl {\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">bc821781fe96c83facbefb742cb1c40f</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:e564-4fec-9bbb-0bc11dd8b07e/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">fd014845696dd268</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">bc821781fe96c83facbefb742cb1c40f-fd014845696dd268-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getDataProtectionInsights</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T36_getFamilyRollupQuery" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFamilyRollupQuery&quot;,&quot;variables&quot;:{&quot;rollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::StandardFamily/70dcb666-a968-4bc5-ba75-43f02480054e&quot;,&quot;srn:supersonrai::StandardFamily/d97fae03-7c68-4a85-b84a-5296984006fd&quot;,&quot;srn:supersonrai::StandardFamily/49cc212c-8110-49fa-bfb3-35d3bfd48a5d&quot;,&quot;srn:supersonrai::StandardFamily/439670ce-e131-4318-a438-e5e28d2af5cc&quot;,&quot;srn:supersonrai::StandardFamily/4847a7fe-5568-443d-bd24-90194d137372&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;}},&quot;policyCountRollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::StandardFamily/70dcb666-a968-4bc5-ba75-43f02480054e&quot;,&quot;srn:supersonrai::StandardFamily/d97fae03-7c68-4a85-b84a-5296984006fd&quot;,&quot;srn:supersonrai::StandardFamily/49cc212c-8110-49fa-bfb3-35d3bfd48a5d&quot;,&quot;srn:supersonrai::StandardFamily/439670ce-e131-4318-a438-e5e28d2af5cc&quot;,&quot;srn:supersonrai::StandardFamily/4847a7fe-5568-443d-bd24-90194d137372&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;firstSeen&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}},&quot;trendFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::StandardFamily/70dcb666-a968-4bc5-ba75-43f02480054e&quot;,&quot;srn:supersonrai::StandardFamily/d97fae03-7c68-4a85-b84a-5296984006fd&quot;,&quot;srn:supersonrai::StandardFamily/49cc212c-8110-49fa-bfb3-35d3bfd48a5d&quot;,&quot;srn:supersonrai::StandardFamily/439670ce-e131-4318-a438-e5e28d2af5cc&quot;,&quot;srn:supersonrai::StandardFamily/4847a7fe-5568-443d-bd24-90194d137372&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}}},&quot;query&quot;:&quot;query getFamilyRollupQuery($rollupFilters: TicketRollupFilter!, $trendFilters: TicketTrendsFilter!, $policyCountRollupFilters: TicketRollupFilter!) {\n  policyCount: TicketRollups(\n    where: $policyCountRollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, standardFamilySrn: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      controlPolicyTitle\n      __typename\n    }\n    __typename\n  }\n  overall: TicketRollups(\n    where: $rollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, standardFamilySrn: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      riskScoreDescription\n      __typename\n    }\n    __typename\n  }\n  trend: TicketPercentageIncrease(where: $trendFilters) {\n    isValid\n    countChange\n    percentageChange(includeRisk: true)\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">a5ffc2dad169e0573061ff34543161d9</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:6d17-44ec-9aa8-c6b7f1da334e/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">07b311b78db71da3</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">a5ffc2dad169e0573061ff34543161d9-07b311b78db71da3-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getFamilyRollupQuery</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T37_getNetworkInsights" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getNetworkInsights&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;standardSrn&quot;:{&quot;value&quot;:&quot;srn:supersonrai::Standard/ba35a1d1-c211-473e-894a-ad16fd8b7b09&quot;},&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;standardControlSrn&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;cloudType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;resourceType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;severityCategory&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;resourceTypeFriendlyName&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;ticketKey&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]}}},&quot;query&quot;:&quot;query getNetworkInsights($filters: TicketRollupFilter!) {\n  TicketRollups(\n    where: $filters\n    includeRollup: {swimlaneSrn: true, environment: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      cloudType\n      standardControlSrn\n      standardSrn\n      standardFamilySrn\n      severityCategory\n      standardFamily {\n        name\n        __typename\n      }\n      resourceType\n      resourceTypeFriendlyName\n      controlPolicyTitle\n      ticketKey\n      standardControl {\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">001ce7134b70a7f7eebdf67bd57269c1</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:ebac-4791-af04-7820a78f0a18/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">66079b9e8ff986c0</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">001ce7134b70a7f7eebdf67bd57269c1-66079b9e8ff986c0-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getNetworkInsights</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T38_getFamilyRollupQuery" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFamilyRollupQuery&quot;,&quot;variables&quot;:{&quot;rollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::StandardFamily/d97fae03-7c68-4a85-b84a-5296984006fd&quot;,&quot;srn:supersonrai::StandardFamily/4cf26294-c33f-4cc9-9477-ec8e120dcec6&quot;,&quot;srn:supersonrai::StandardFamily/aa84e56c-0ed0-40f9-9ef2-633d413fdc73&quot;,&quot;srn:supersonrai::StandardFamily/b93ea777-2b97-443f-955d-8887ac5e427e&quot;,&quot;srn:supersonrai::StandardFamily/867c56dd-1ce8-441f-b4cb-6c5298439726&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;}},&quot;policyCountRollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::StandardFamily/d97fae03-7c68-4a85-b84a-5296984006fd&quot;,&quot;srn:supersonrai::StandardFamily/4cf26294-c33f-4cc9-9477-ec8e120dcec6&quot;,&quot;srn:supersonrai::StandardFamily/aa84e56c-0ed0-40f9-9ef2-633d413fdc73&quot;,&quot;srn:supersonrai::StandardFamily/b93ea777-2b97-443f-955d-8887ac5e427e&quot;,&quot;srn:supersonrai::StandardFamily/867c56dd-1ce8-441f-b4cb-6c5298439726&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;firstSeen&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}},&quot;trendFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::StandardFamily/d97fae03-7c68-4a85-b84a-5296984006fd&quot;,&quot;srn:supersonrai::StandardFamily/4cf26294-c33f-4cc9-9477-ec8e120dcec6&quot;,&quot;srn:supersonrai::StandardFamily/aa84e56c-0ed0-40f9-9ef2-633d413fdc73&quot;,&quot;srn:supersonrai::StandardFamily/b93ea777-2b97-443f-955d-8887ac5e427e&quot;,&quot;srn:supersonrai::StandardFamily/867c56dd-1ce8-441f-b4cb-6c5298439726&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}}},&quot;query&quot;:&quot;query getFamilyRollupQuery($rollupFilters: TicketRollupFilter!, $trendFilters: TicketTrendsFilter!, $policyCountRollupFilters: TicketRollupFilter!) {\n  policyCount: TicketRollups(\n    where: $policyCountRollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, standardFamilySrn: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      controlPolicyTitle\n      __typename\n    }\n    __typename\n  }\n  overall: TicketRollups(\n    where: $rollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, standardFamilySrn: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      riskScoreDescription\n      __typename\n    }\n    __typename\n  }\n  trend: TicketPercentageIncrease(where: $trendFilters) {\n    isValid\n    countChange\n    percentageChange(includeRisk: true)\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">079acd398d13fb05b3721ea6da640519</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:5a5a-4d77-9578-ce69eb2a2a7c/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">5d5e42b44267f9f9</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">079acd398d13fb05b3721ea6da640519-5d5e42b44267f9f9-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getFamilyRollupQuery</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T39_getFundamentalInsights" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFundamentalInsights&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;standardSrn&quot;:{&quot;value&quot;:&quot;srn:supersonrai::Standard/273387a5-53c1-4a38-8f97-7b200235069f&quot;},&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;standardControlSrn&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;ticketKey&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;cloudType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;severityCategory&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;resourceType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;resourceTypeFriendlyName&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]}}},&quot;query&quot;:&quot;query getFundamentalInsights($filters: TicketRollupFilter!) {\n  TicketRollups(\n    where: $filters\n    includeRollup: {swimlaneSrn: true, environment: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      cloudType\n      standardControlSrn\n      standardSrn\n      standardFamilySrn\n      standardFamily {\n        name\n        __typename\n      }\n      resourceType\n      resourceTypeFriendlyName\n      controlPolicyTitle\n      ticketKey\n      severityCategory\n      standardControl {\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">e2f9270ebbce00c5e80f0c809edfdccd</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:64c1-4d86-b8f8-03ed109eb18e/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">ece5264b37f305d0</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">e2f9270ebbce00c5e80f0c809edfdccd-ece5264b37f305d0-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getFundamentalInsights</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T40_getFamilyRollupQuery" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFamilyRollupQuery&quot;,&quot;variables&quot;:{&quot;rollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::StandardFamily/3283cb79-f4ce-46f3-a211-17d8da592c58&quot;,&quot;srn:supersonrai::StandardFamily/e93a6872-b584-4cb1-9f47-9bf2048a328a&quot;,&quot;srn:supersonrai::StandardFamily/92bc6294-7877-4509-acd0-006a3db9a605&quot;,&quot;srn:supersonrai::StandardFamily/3fbeee56-97c5-4faf-8665-7b792f474f53&quot;,&quot;srn:supersonrai::StandardFamily/e58fd5ec-feec-4dae-ad11-1b9414baf3df&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;}},&quot;policyCountRollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::StandardFamily/3283cb79-f4ce-46f3-a211-17d8da592c58&quot;,&quot;srn:supersonrai::StandardFamily/e93a6872-b584-4cb1-9f47-9bf2048a328a&quot;,&quot;srn:supersonrai::StandardFamily/92bc6294-7877-4509-acd0-006a3db9a605&quot;,&quot;srn:supersonrai::StandardFamily/3fbeee56-97c5-4faf-8665-7b792f474f53&quot;,&quot;srn:supersonrai::StandardFamily/e58fd5ec-feec-4dae-ad11-1b9414baf3df&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;firstSeen&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}},&quot;trendFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::StandardFamily/3283cb79-f4ce-46f3-a211-17d8da592c58&quot;,&quot;srn:supersonrai::StandardFamily/e93a6872-b584-4cb1-9f47-9bf2048a328a&quot;,&quot;srn:supersonrai::StandardFamily/92bc6294-7877-4509-acd0-006a3db9a605&quot;,&quot;srn:supersonrai::StandardFamily/3fbeee56-97c5-4faf-8665-7b792f474f53&quot;,&quot;srn:supersonrai::StandardFamily/e58fd5ec-feec-4dae-ad11-1b9414baf3df&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}}},&quot;query&quot;:&quot;query getFamilyRollupQuery($rollupFilters: TicketRollupFilter!, $trendFilters: TicketTrendsFilter!, $policyCountRollupFilters: TicketRollupFilter!) {\n  policyCount: TicketRollups(\n    where: $policyCountRollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, standardFamilySrn: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      controlPolicyTitle\n      __typename\n    }\n    __typename\n  }\n  overall: TicketRollups(\n    where: $rollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, standardFamilySrn: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      riskScoreDescription\n      __typename\n    }\n    __typename\n  }\n  trend: TicketPercentageIncrease(where: $trendFilters) {\n    isValid\n    countChange\n    percentageChange(includeRisk: true)\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">fa73ccb4391158311336992df261efd1</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:93ba-430f-ad5d-006d74ec9705/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">62143075747eecfa</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">fa73ccb4391158311336992df261efd1-62143075747eecfa-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getFamilyRollupQuery</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T41_vulnerabilitiesByPublishedDate" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;vulnerabilitiesByPublishedDate&quot;,&quot;variables&quot;:{&quot;filters&quot;:null},&quot;query&quot;:&quot;query vulnerabilitiesByPublishedDate($filters: SecurityFindingFilter) {\n  SecurityFindingsPublished(\n    where: $filters\n    groupBy: [findingPublishedDate]\n    granularity: DAY\n  ) {\n    items(limit: -1, orderBy: [{findingPublishedDate: DESC}]) {\n      count\n      findingRiskSeverity\n      findingPublishedDate\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">3cdcfcdba4a22aadce03ff7366294080</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:68d6-4279-b1be-e649deb75614/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">4b0c9b70e9366feb</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">3cdcfcdba4a22aadce03ff7366294080-4b0c9b70e9366feb-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">vulnerabilitiesByPublishedDate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T42_vulnerabilities_by_time" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;vulnerabilities_by_time&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;observedAt&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-03-01T00:00:00.000Z&quot;,&quot;2023-03-31T00:00:00.000Z&quot;]}}},&quot;query&quot;:&quot;query vulnerabilities_by_time($filters: SecurityFindingFilter) {\n  SecurityFindings(\n    view: raw\n    groupBy: [observedAt, findingRiskSeverity]\n    where: $filters\n    granularity: DAY\n  ) {\n    items(limit: -1, orderBy: [{observedAt: DESC}, {findingRiskSeverity: DESC}]) {\n      count @uniq(field: \&quot;findingId\&quot;)\n      findingRiskSeverity\n      observedAt\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">631f00f8314e7187377441280ec60338</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:36ec-42bf-8a9f-78ef3880d9c4/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">9f3aeb9c178c0e7a</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">631f00f8314e7187377441280ec60338-9f3aeb9c178c0e7a-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">vulnerabilities_by_time</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T43_top5Vulnerabilities" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;top5Vulnerabilities&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;observedAt&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-03-01T00:00:00.000Z&quot;,&quot;2023-03-31T00:00:00.000Z&quot;]}}},&quot;query&quot;:&quot;query top5Vulnerabilities($filters: SecurityFindingFilter) {\n  SecurityFindings(where: $filters, groupBy: [findingId]) {\n    items(limit: 5, orderBy: [{findingRiskIndex: DESC}, {findingId: DESC}]) {\n      count\n      findingId\n      resourceSrn\n      riskIndex\n      riskSeverity\n      findingScore\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">53af614e0e59cd3dd59559802a6489b2</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:5c7d-4c24-b02d-6806ac340370/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">3f472c4792e055f2</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">53af614e0e59cd3dd59559802a6489b2-3f472c4792e055f2-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">top5Vulnerabilities</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T44_top5ResourcesAtRisk" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;top5ResourcesAtRisk&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;observedAt&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-03-01T00:00:00.000Z&quot;,&quot;2023-03-31T00:00:00.000Z&quot;]},&quot;findingCategory&quot;:{&quot;value&quot;:&quot;Vulnerability&quot;}}},&quot;query&quot;:&quot;query top5ResourcesAtRisk($filters: SecurityFindingFilter) {\n  SecurityFindings(where: $filters, groupBy: resourceSrn) {\n    items(limit: 5, orderBy: [{riskIndex: DESC}, {resourceSrn: DESC}]) {\n      resourceAccount\n      resourceAccountName\n      resourceName\n      resourceSrn\n      resourceCloud\n      riskSeverity\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">7b17dea258d93ab0a1fe313df102f4fa</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:4549-47d9-9d64-5092398e7a2c/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">3dc1c1b03e8554d2</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">7b17dea258d93ab0a1fe313df102f4fa-3dc1c1b03e8554d2-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">top5ResourcesAtRisk</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T45_getFamilyRollupQuery" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFamilyRollupQuery&quot;,&quot;variables&quot;:{&quot;rollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::StandardFamily/9576a064-65ef-45d6-858e-b0b766ba7099&quot;,&quot;srn:supersonrai::StandardFamily/6da88d66-6fda-44a4-a2ca-e29dbc10ee1b&quot;,&quot;srn:supersonrai::StandardFamily/342ee2b0-6a5f-4aba-9a33-d3d18a16d3cf&quot;,&quot;srn:supersonrai::StandardFamily/76642506-7c0c-4a36-81a2-ffd1697fbd0b&quot;,&quot;srn:supersonrai::StandardFamily/839bad50-b61e-4edc-a903-10db46121553&quot;,&quot;srn:supersonrai::StandardFamily/582927d9-ac98-4477-b1f0-c88e766712fd&quot;,&quot;srn:supersonrai::StandardFamily/784d4859-5373-4e35-a5fa-d54489310417&quot;,&quot;srn:supersonrai::StandardFamily/889cdfd6-c56e-473a-b209-ff51ded92451&quot;,&quot;srn:supersonrai::StandardFamily/2f4b38c8-7411-48f9-8eb1-1a806401bbad&quot;,&quot;srn:supersonrai::StandardFamily/c4440b74-8c34-4e3d-8398-02a091092e59&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;}},&quot;policyCountRollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::StandardFamily/9576a064-65ef-45d6-858e-b0b766ba7099&quot;,&quot;srn:supersonrai::StandardFamily/6da88d66-6fda-44a4-a2ca-e29dbc10ee1b&quot;,&quot;srn:supersonrai::StandardFamily/342ee2b0-6a5f-4aba-9a33-d3d18a16d3cf&quot;,&quot;srn:supersonrai::StandardFamily/76642506-7c0c-4a36-81a2-ffd1697fbd0b&quot;,&quot;srn:supersonrai::StandardFamily/839bad50-b61e-4edc-a903-10db46121553&quot;,&quot;srn:supersonrai::StandardFamily/582927d9-ac98-4477-b1f0-c88e766712fd&quot;,&quot;srn:supersonrai::StandardFamily/784d4859-5373-4e35-a5fa-d54489310417&quot;,&quot;srn:supersonrai::StandardFamily/889cdfd6-c56e-473a-b209-ff51ded92451&quot;,&quot;srn:supersonrai::StandardFamily/2f4b38c8-7411-48f9-8eb1-1a806401bbad&quot;,&quot;srn:supersonrai::StandardFamily/c4440b74-8c34-4e3d-8398-02a091092e59&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;firstSeen&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}},&quot;trendFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::StandardFamily/9576a064-65ef-45d6-858e-b0b766ba7099&quot;,&quot;srn:supersonrai::StandardFamily/6da88d66-6fda-44a4-a2ca-e29dbc10ee1b&quot;,&quot;srn:supersonrai::StandardFamily/342ee2b0-6a5f-4aba-9a33-d3d18a16d3cf&quot;,&quot;srn:supersonrai::StandardFamily/76642506-7c0c-4a36-81a2-ffd1697fbd0b&quot;,&quot;srn:supersonrai::StandardFamily/839bad50-b61e-4edc-a903-10db46121553&quot;,&quot;srn:supersonrai::StandardFamily/582927d9-ac98-4477-b1f0-c88e766712fd&quot;,&quot;srn:supersonrai::StandardFamily/784d4859-5373-4e35-a5fa-d54489310417&quot;,&quot;srn:supersonrai::StandardFamily/889cdfd6-c56e-473a-b209-ff51ded92451&quot;,&quot;srn:supersonrai::StandardFamily/2f4b38c8-7411-48f9-8eb1-1a806401bbad&quot;,&quot;srn:supersonrai::StandardFamily/c4440b74-8c34-4e3d-8398-02a091092e59&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}}},&quot;query&quot;:&quot;query getFamilyRollupQuery($rollupFilters: TicketRollupFilter!, $trendFilters: TicketTrendsFilter!, $policyCountRollupFilters: TicketRollupFilter!) {\n  policyCount: TicketRollups(\n    where: $policyCountRollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, standardFamilySrn: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      controlPolicyTitle\n      __typename\n    }\n    __typename\n  }\n  overall: TicketRollups(\n    where: $rollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, standardFamilySrn: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      riskScoreDescription\n      __typename\n    }\n    __typename\n  }\n  trend: TicketPercentageIncrease(where: $trendFilters) {\n    isValid\n    countChange\n    percentageChange(includeRisk: true)\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">90027634cba85f2ef93f4df05a5c4a3f</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:0a9d-4fe7-8abe-032315bd7881/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">42b6898d5c28b9be</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">90027634cba85f2ef93f4df05a5c4a3f-42b6898d5c28b9be-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getFamilyRollupQuery</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Homepage_T46_getActiveThreat" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getActiveThreat&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;standardSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::Standard/40a087c8-319c-4756-bcda-4f9d11d046d3&quot;},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]}}},&quot;query&quot;:&quot;query getActiveThreat($filters: TicketRollupFilter!) {\n  TicketRollups(where: $filters, includeRollup: {standardSrn: true, status: true}) {\n    count\n    items(includeRisk: true) {\n      count\n      riskScoreNumeric\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">1a5b5c4039b0623b4123e887b4686541</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:d59e-4153-b95f-885cea26e63e/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">675e50ecdb70c546</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">1a5b5c4039b0623b4123e887b4686541-675e50ecdb70c546-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getActiveThreat</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://front-end-collector-web.s.sonraisecurity.com/v1/metrics" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;resourceMetrics&quot;:[{&quot;resource&quot;:{&quot;attributes&quot;:[],&quot;droppedAttributesCount&quot;:0},&quot;scopeMetrics&quot;:[{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-document-load&quot;,&quot;version&quot;:&quot;0.27.1&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-fetch&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-long-task&quot;,&quot;version&quot;:&quot;0.30.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-xml-http-request&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;app_layout_error_boundary_errors_count&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;sum&quot;:{&quot;aggregationTemporality&quot;:2,&quot;isMonotonic&quot;:true,&quot;dataPoints&quot;:[]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.graphql&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;graphql_request_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiUsers&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:509,&quot;min&quot;:509,&quot;max&quot;:509,&quot;startTimeUnixNano&quot;:1680198065344100000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAllMaturityLevels&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:510,&quot;min&quot;:510,&quot;max&quot;:510,&quot;startTimeUnixNano&quot;:1680198065346600000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;currentUser&quot;}}],&quot;bucketCounts&quot;:[0,0,2,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:2,&quot;sum&quot;:1048,&quot;min&quot;:516,&quot;max&quot;:532,&quot;startTimeUnixNano&quot;:1680198065349300000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAllEnvironments&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:522,&quot;min&quot;:522,&quot;max&quot;:522,&quot;startTimeUnixNano&quot;:1680198065358000000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAllSecurityAreas&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:523,&quot;min&quot;:523,&quot;max&quot;:523,&quot;startTimeUnixNano&quot;:1680198065359700000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiOrgConfig&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:523,&quot;min&quot;:523,&quot;max&quot;:523,&quot;startTimeUnixNano&quot;:1680198065360500000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiUIConfig&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:531,&quot;min&quot;:531,&quot;max&quot;:531,&quot;startTimeUnixNano&quot;:1680198065366700000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getCollectorConfigurations&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:572,&quot;min&quot;:572,&quot;max&quot;:572,&quot;startTimeUnixNano&quot;:1680198065409600000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;get_all_roles&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:130,&quot;min&quot;:130,&quot;max&quot;:130,&quot;startTimeUnixNano&quot;:1680198065485800000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getControlFrameworks&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:319,&quot;min&quot;:319,&quot;max&quot;:319,&quot;startTimeUnixNano&quot;:1680198065676900000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;IntrospectionQuery&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:853,&quot;min&quot;:853,&quot;max&quot;:853,&quot;startTimeUnixNano&quot;:1680198066047400000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSavedSearches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:812,&quot;min&quot;:812,&quot;max&quot;:812,&quot;startTimeUnixNano&quot;:1680198066167600000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;saveUserProfile&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:876,&quot;min&quot;:876,&quot;max&quot;:876,&quot;startTimeUnixNano&quot;:1680198066241900000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getResourceLabels&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:903,&quot;min&quot;:903,&quot;max&quot;:903,&quot;startTimeUnixNano&quot;:1680198066262700000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAccounts&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1009,&quot;min&quot;:1009,&quot;max&quot;:1009,&quot;startTimeUnixNano&quot;:1680198066366100000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSubscriptions&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1011,&quot;min&quot;:1011,&quot;max&quot;:1011,&quot;startTimeUnixNano&quot;:1680198066368000000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchSwimlanes&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1110,&quot;min&quot;:1110,&quot;max&quot;:1110,&quot;startTimeUnixNano&quot;:1680198066467200000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;sonrai_user&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:228,&quot;min&quot;:228,&quot;max&quot;:228,&quot;startTimeUnixNano&quot;:1680198066487000000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiSeaches&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1221,&quot;min&quot;:1221,&quot;max&quot;:1221,&quot;startTimeUnixNano&quot;:1680198066576600000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getReportPoll&quot;}}],&quot;bucketCounts&quot;:[0,2,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:2,&quot;sum&quot;:609,&quot;min&quot;:228,&quot;max&quot;:381,&quot;startTimeUnixNano&quot;:1680198066642900000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getReportsInit&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:147,&quot;min&quot;:147,&quot;max&quot;:147,&quot;startTimeUnixNano&quot;:1680198066650600000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TopFiveIssues&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:101,&quot;min&quot;:101,&quot;max&quot;:101,&quot;startTimeUnixNano&quot;:1680198066656900000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getServiceTypes&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:405,&quot;min&quot;:405,&quot;max&quot;:405,&quot;startTimeUnixNano&quot;:1680198066668400000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;licensing&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:168,&quot;min&quot;:168,&quot;max&quot;:168,&quot;startTimeUnixNano&quot;:1680198066722500000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getDataProtectionInsights&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:269,&quot;min&quot;:269,&quot;max&quot;:269,&quot;startTimeUnixNano&quot;:1680198066893400000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getNetworkInsights&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:285,&quot;min&quot;:285,&quot;max&quot;:285,&quot;startTimeUnixNano&quot;:1680198066911200000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getFundamentalInsights&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:325,&quot;min&quot;:325,&quot;max&quot;:325,&quot;startTimeUnixNano&quot;:1680198066950500000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getIdentityInsights&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:358,&quot;min&quot;:358,&quot;max&quot;:358,&quot;startTimeUnixNano&quot;:1680198066982000000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getFamilyRollupQuery&quot;}}],&quot;bucketCounts&quot;:[0,1,1,3,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:5,&quot;sum&quot;:5355,&quot;min&quot;:379,&quot;max&quot;:1374,&quot;startTimeUnixNano&quot;:1680198067005900000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;vulnerabilities_by_time&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:383,&quot;min&quot;:383,&quot;max&quot;:383,&quot;startTimeUnixNano&quot;:1680198067011700000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchClouds&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:478,&quot;min&quot;:478,&quot;max&quot;:478,&quot;startTimeUnixNano&quot;:1680198067035200000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSavedSearches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:899,&quot;min&quot;:899,&quot;max&quot;:899,&quot;startTimeUnixNano&quot;:1680198067139900000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getActiveThreat&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:599,&quot;min&quot;:599,&quot;max&quot;:599,&quot;startTimeUnixNano&quot;:1680198067227900000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;top5ResourcesAtRisk&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:785,&quot;min&quot;:785,&quot;max&quot;:785,&quot;startTimeUnixNano&quot;:1680198067412600000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;top5Vulnerabilities&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:789,&quot;min&quot;:789,&quot;max&quot;:789,&quot;startTimeUnixNano&quot;:1680198067416700000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;vulnerabilitiesByPublishedDate&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:792,&quot;min&quot;:792,&quot;max&quot;:792,&quot;startTimeUnixNano&quot;:1680198067419100000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;InsightsFindingsTrends&quot;}}],&quot;bucketCounts&quot;:[0,0,0,2,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:2,&quot;sum&quot;:2852,&quot;min&quot;:1416,&quot;max&quot;:1436,&quot;startTimeUnixNano&quot;:1680198067972600000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStandardRisk&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1472,&quot;min&quot;:1472,&quot;max&quot;:1472,&quot;startTimeUnixNano&quot;:1680198068027400000,&quot;timeUnixNano&quot;:1680198094847700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;topInsights&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1607,&quot;min&quot;:1607,&quot;max&quot;:1607,&quot;startTimeUnixNano&quot;:1680198068162700000,&quot;timeUnixNano&quot;:1680198094847700000}]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.newroute&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;newtab_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:56,&quot;min&quot;:56,&quot;max&quot;:56,&quot;startTimeUnixNano&quot;:1680198066558000000,&quot;timeUnixNano&quot;:1680198094847700000}]}}]}]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v1/metrics</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="stage11733927_03_Identity" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Identity_T01_getIdentityCounts" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getIdentityCounts&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;active&quot;:{&quot;value&quot;:true}},&quot;awsFilters&quot;:{&quot;active&quot;:{&quot;value&quot;:true},&quot;cloudType&quot;:{&quot;value&quot;:&quot;aws&quot;}},&quot;gcpFilters&quot;:{&quot;active&quot;:{&quot;value&quot;:true},&quot;cloudType&quot;:{&quot;value&quot;:&quot;gcp&quot;}},&quot;serviceaccountFilters&quot;:{&quot;active&quot;:{&quot;value&quot;:true},&quot;type&quot;:{&quot;value&quot;:&quot;GCPServiceAccount&quot;}},&quot;serviceaccountkeysFilters&quot;:{&quot;active&quot;:{&quot;value&quot;:true},&quot;type&quot;:{&quot;value&quot;:&quot;GCPServiceAccountKey&quot;}},&quot;azureFilters&quot;:{&quot;active&quot;:{&quot;value&quot;:true},&quot;cloudType&quot;:{&quot;value&quot;:&quot;azure&quot;}},&quot;ociFilters&quot;:{&quot;active&quot;:{&quot;value&quot;:true},&quot;cloudType&quot;:{&quot;value&quot;:&quot;oci&quot;}},&quot;includeAws&quot;:true,&quot;includeGcp&quot;:true,&quot;includeAzure&quot;:true,&quot;includeOci&quot;:true},&quot;query&quot;:&quot;query getIdentityCounts($filters: IdentityFilter!, $awsFilters: IdentityFilter!, $gcpFilters: IdentityFilter!, $azureFilters: IdentityFilter!, $ociFilters: IdentityFilter!, $serviceaccountFilters: UserFilter!, $serviceaccountkeysFilters: AccesskeyFilter!, $includeAws: Boolean!, $includeGcp: Boolean!, $includeOci: Boolean!, $includeAzure: Boolean!) {\n  total: Identities(where: $filters) {\n    count\n    __typename\n  }\n  aws: Identities(where: $awsFilters) @include(if: $includeAws) {\n    count\n    __typename\n  }\n  gcp: Identities(where: $gcpFilters) @include(if: $includeGcp) {\n    count\n    __typename\n  }\n  serviceaccount: Users(where: $serviceaccountFilters) @include(if: $includeGcp) {\n    count\n    __typename\n  }\n  serviceaccountkeys: AccessKeys(where: $serviceaccountkeysFilters) @include(if: $includeGcp) {\n    count\n    __typename\n  }\n  azure: Identities(where: $azureFilters) @include(if: $includeAzure) {\n    count\n    __typename\n  }\n  oci: Identities(where: $ociFilters) @include(if: $includeOci) {\n    count\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:bd46-4828-afab-11a9f87bbf34/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">ebbb5c142e14566a</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2-ebbb5c142e14566a-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getIdentityCounts</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Identity_T02_getStandardRisk" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getStandardRisk&quot;,&quot;variables&quot;:{&quot;rollupFilters&quot;:{&quot;standardSrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::Standard/df23cbab-df37-4676-af99-49ed3a9eee29&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;}},&quot;trendFilters&quot;:{&quot;standardSrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::Standard/df23cbab-df37-4676-af99-49ed3a9eee29&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}}},&quot;query&quot;:&quot;query getStandardRisk($rollupFilters: TicketRollupFilter!, $trendFilters: TicketTrendsFilter!) {\n  overall: TicketRollups(\n    where: $rollupFilters\n    includeRollup: {standardSrn: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      riskScoreNumeric\n      riskScoreDescription\n      __typename\n    }\n    __typename\n  }\n  trend: TicketTrendsV2(\n    where: $trendFilters\n    granularity: {granularity: DAY}\n    type: {type: RISK_LEVELS}\n  ) {\n    items(includeRisk: true) {\n      riskLevel\n      dateTime\n      __typename\n    }\n    __typename\n  }\n  trendChange: TicketPercentageIncrease(where: $trendFilters) {\n    isValid\n    riskChange\n    percentageChange(includeRisk: true)\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:a1f8-4cfb-aa15-6c4ae85e0b2a/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">1c5cea0e4d675f76</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2-1c5cea0e4d675f76-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getStandardRisk</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Identity_T03_topInsights" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;topInsights&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/17f7243f-63eb-4b92-afa9-6decbfe93111&quot;},&quot;standardSrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::Standard/df23cbab-df37-4676-af99-49ed3a9eee29&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]}}},&quot;query&quot;:&quot;query topInsights($filters: TopInsightsFilter) {\n  TopInsights(where: $filters) {\n    items {\n      insightType\n      topControlsByFamily {\n        family\n        standardFamily {\n          name\n          containedBy {\n            items {\n              name\n              srn\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        issues_perc\n        family_risk\n        controls {\n          control\n          score_improvement\n          standardControl {\n            name\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:5789-442c-8357-640ba8a84a16/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">59d0d49e4dbb58b0</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2-59d0d49e4dbb58b0-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">topInsights</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Identity_T04_TopFiveIssues" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;TopFiveIssues&quot;,&quot;variables&quot;:{&quot;filter&quot;:{&quot;standardSrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::Standard/df23cbab-df37-4676-af99-49ed3a9eee29&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/4be9e1cf-99da-4fda-91cd-1256cefadf38&quot;}}},&quot;query&quot;:&quot;query TopFiveIssues($filter: TicketsFilter!) {\n  Tickets(where: $filter) {\n    items(\n      limit: 5\n      orderBy: [{severityNumeric: {order: DESC, precedence: 2}}, {srn: {order: DESC, precedence: 1}}]\n      includeRisk: true\n    ) {\n      srn\n      title\n      templatedTitle\n      severityCategory\n      account\n      resourceName\n      resourceType\n      description\n      ticketKey\n      resourceSRN\n      isOperationalized\n      status\n      swimlaneSRNs\n      createdBy\n      policy {\n        srn\n        description\n        mappedBy {\n          items {\n            containedBy {\n              items {\n                srn\n                name\n                containedBy {\n                  items {\n                    srn\n                    name\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:62d8-41e1-a977-b8a737a5a801/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">99b7b7202256b957</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2-99b7b7202256b957-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">TopFiveIssues</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Identity_T05_getLateralMovementRollup" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getLateralMovementRollup&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;standardFamilySrn&quot;:{&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/4181cdc2-0e7d-4e37-837b-2ed1c1cc7331&quot;},&quot;standardControlSrn&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;ticketKey&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;cloudType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]}}},&quot;query&quot;:&quot;query getLateralMovementRollup($filters: TicketRollupFilter!) {\n  TicketRollups(\n    where: $filters\n    includeRollup: {swimlaneSrn: true, environment: true, status: true}\n  ) {\n    items(\n      orderBy: {standardControlSrn: {order: ASC, precedence: 1}}\n      includeRisk: true\n    ) {\n      count\n      cloudType\n      standardControlSrn\n      standardControl {\n        name\n        __typename\n      }\n      controlPolicyTitle\n      ticketKey\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:40d7-4989-83eb-cc40593fcc39/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">9f13ec6b2a3fc21c</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2-9f13ec6b2a3fc21c-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getLateralMovementRollup</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Identity_T06_getFamilyRollupQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFamilyRollupQuery&quot;,&quot;variables&quot;:{&quot;rollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/4181cdc2-0e7d-4e37-837b-2ed1c1cc7331&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;}},&quot;policyCountRollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/4181cdc2-0e7d-4e37-837b-2ed1c1cc7331&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;firstSeen&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}},&quot;trendFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/4181cdc2-0e7d-4e37-837b-2ed1c1cc7331&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}}},&quot;query&quot;:&quot;query getFamilyRollupQuery($rollupFilters: TicketRollupFilter!, $trendFilters: TicketTrendsFilter!, $policyCountRollupFilters: TicketRollupFilter!) {\n  policyCount: TicketRollups(\n    where: $policyCountRollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      controlPolicyTitle\n      __typename\n    }\n    __typename\n  }\n  overall: TicketRollups(\n    where: $rollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      riskScoreDescription\n      __typename\n    }\n    __typename\n  }\n  trend: TicketPercentageIncrease(where: $trendFilters) {\n    isValid\n    countChange\n    percentageChange(includeRisk: true)\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:49b1-44e5-adba-13f8cc3e5557/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">0473cc26b0445170</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2-0473cc26b0445170-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getFamilyRollupQuery</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Identity_T07_getUnusedIdentity" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getUnusedIdentity&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;standardFamilySrn&quot;:{&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/0278394d-50ce-4fa3-9784-7ec96dd54345&quot;},&quot;resourceType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;resourceTypeFriendlyName&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;cloudType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]}}},&quot;query&quot;:&quot;query getUnusedIdentity($filters: TicketRollupFilter!) {\n  TicketRollups(\n    where: $filters\n    includeRollup: {swimlaneSrn: true, environment: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      cloudType\n      resourceType\n      resourceTypeFriendlyName\n      controlPolicyTitle\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:94bb-44a4-9561-e74b3c52855f/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">c6721db6561ead30</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2-c6721db6561ead30-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getUnusedIdentity</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Identity_T08_getFamilyRollupQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFamilyRollupQuery&quot;,&quot;variables&quot;:{&quot;rollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/0278394d-50ce-4fa3-9784-7ec96dd54345&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;}},&quot;policyCountRollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/0278394d-50ce-4fa3-9784-7ec96dd54345&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;firstSeen&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}},&quot;trendFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/0278394d-50ce-4fa3-9784-7ec96dd54345&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}}},&quot;query&quot;:&quot;query getFamilyRollupQuery($rollupFilters: TicketRollupFilter!, $trendFilters: TicketTrendsFilter!, $policyCountRollupFilters: TicketRollupFilter!) {\n  policyCount: TicketRollups(\n    where: $policyCountRollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      controlPolicyTitle\n      __typename\n    }\n    __typename\n  }\n  overall: TicketRollups(\n    where: $rollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      riskScoreDescription\n      __typename\n    }\n    __typename\n  }\n  trend: TicketPercentageIncrease(where: $trendFilters) {\n    isValid\n    countChange\n    percentageChange(includeRisk: true)\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:2231-4dec-aaed-c890443a56b7/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">87e6c8eeaea0e88c</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2-87e6c8eeaea0e88c-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getFamilyRollupQuery</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Identity_T09_getCrossAccountTrustExposure" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getCrossAccountTrustExposure&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;standardFamilySrn&quot;:{&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/03e22038-c363-47b2-ae50-723bc79d9f19&quot;},&quot;standardControlSrn&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;resourceType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;resourceTypeFriendlyName&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;cloudType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]}}},&quot;query&quot;:&quot;query getCrossAccountTrustExposure($filters: TicketRollupFilter!) {\n  TicketRollups(\n    where: $filters\n    includeRollup: {swimlaneSrn: true, environment: true, status: true}\n  ) {\n    items(\n      orderBy: {standardControlSrn: {order: ASC, precedence: 1}}\n      includeRisk: true\n    ) {\n      count\n      cloudType\n      resourceType\n      resourceTypeFriendlyName\n      standardControlSrn\n      controlPolicyTitle\n      standardControl {\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:54d6-456c-b708-5aa6b000221e/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">59e985216be26049</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2-59e985216be26049-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getCrossAccountTrustExposure</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Identity_T10_getFamilyRollupQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFamilyRollupQuery&quot;,&quot;variables&quot;:{&quot;rollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/03e22038-c363-47b2-ae50-723bc79d9f19&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;}},&quot;policyCountRollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/03e22038-c363-47b2-ae50-723bc79d9f19&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;firstSeen&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}},&quot;trendFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/03e22038-c363-47b2-ae50-723bc79d9f19&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}}},&quot;query&quot;:&quot;query getFamilyRollupQuery($rollupFilters: TicketRollupFilter!, $trendFilters: TicketTrendsFilter!, $policyCountRollupFilters: TicketRollupFilter!) {\n  policyCount: TicketRollups(\n    where: $policyCountRollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      controlPolicyTitle\n      __typename\n    }\n    __typename\n  }\n  overall: TicketRollups(\n    where: $rollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      riskScoreDescription\n      __typename\n    }\n    __typename\n  }\n  trend: TicketPercentageIncrease(where: $trendFilters) {\n    isValid\n    countChange\n    percentageChange(includeRisk: true)\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:b04f-4a92-9bf9-f62a4bef1c9b/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">41322c2b5a7752c6</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2-41322c2b5a7752c6-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getFamilyRollupQuery</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Identity_T11_getOverpriviledgedIdentity" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getOverpriviledgedIdentity&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;standardFamilySrn&quot;:{&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/53be9664-e709-477b-b0be-4f9d5266c372&quot;},&quot;standardControlSrn&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;resourceType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;resourceTypeFriendlyName&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;cloudType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]}}},&quot;query&quot;:&quot;query getOverpriviledgedIdentity($filters: TicketRollupFilter!) {\n  TicketRollups(\n    where: $filters\n    includeRollup: {swimlaneSrn: true, environment: true, status: true}\n  ) {\n    items(\n      orderBy: {resourceType: {order: ASC, precedence: 1}, standardControlSrn: {order: ASC, precedence: 2}}\n      includeRisk: true\n    ) {\n      count\n      cloudType\n      resourceType\n      resourceTypeFriendlyName\n      standardControlSrn\n      controlPolicyTitle\n      standardControl {\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:da84-42e5-b018-c0186921e3c9/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">41113e8536aed7bf</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2-41113e8536aed7bf-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getOverpriviledgedIdentity</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Identity_T12_getFamilyRollupQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFamilyRollupQuery&quot;,&quot;variables&quot;:{&quot;rollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/53be9664-e709-477b-b0be-4f9d5266c372&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;}},&quot;policyCountRollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/53be9664-e709-477b-b0be-4f9d5266c372&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;firstSeen&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}},&quot;trendFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/53be9664-e709-477b-b0be-4f9d5266c372&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}}},&quot;query&quot;:&quot;query getFamilyRollupQuery($rollupFilters: TicketRollupFilter!, $trendFilters: TicketTrendsFilter!, $policyCountRollupFilters: TicketRollupFilter!) {\n  policyCount: TicketRollups(\n    where: $policyCountRollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      controlPolicyTitle\n      __typename\n    }\n    __typename\n  }\n  overall: TicketRollups(\n    where: $rollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      riskScoreDescription\n      __typename\n    }\n    __typename\n  }\n  trend: TicketPercentageIncrease(where: $trendFilters) {\n    isValid\n    countChange\n    percentageChange(includeRisk: true)\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:4921-4eb8-978a-74846eea451d/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">f953e2f3d54fbc19</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2-f953e2f3d54fbc19-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getFamilyRollupQuery</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Identity_T13_getAccessKeys" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getAccessKeys&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;standardFamilySrn&quot;:{&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/0372db85-bda8-40bf-8047-14974283c718&quot;},&quot;standardControlSrn&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;cloudType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]}}},&quot;query&quot;:&quot;query getAccessKeys($filters: TicketRollupFilter!) {\n  TicketRollups(\n    where: $filters\n    includeRollup: {swimlaneSrn: true, environment: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      cloudType\n      standardControlSrn\n      standardControl {\n        name\n        __typename\n      }\n      controlPolicyTitle\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:49a1-4988-b1c2-90c98ab2c4ad/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">5b96ac0cbc0084b3</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2-5b96ac0cbc0084b3-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getAccessKeys</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Identity_T14_getFamilyRollupQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFamilyRollupQuery&quot;,&quot;variables&quot;:{&quot;rollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/0372db85-bda8-40bf-8047-14974283c718&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;}},&quot;policyCountRollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/0372db85-bda8-40bf-8047-14974283c718&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;firstSeen&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}},&quot;trendFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/0372db85-bda8-40bf-8047-14974283c718&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}}},&quot;query&quot;:&quot;query getFamilyRollupQuery($rollupFilters: TicketRollupFilter!, $trendFilters: TicketTrendsFilter!, $policyCountRollupFilters: TicketRollupFilter!) {\n  policyCount: TicketRollups(\n    where: $policyCountRollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      controlPolicyTitle\n      __typename\n    }\n    __typename\n  }\n  overall: TicketRollups(\n    where: $rollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      riskScoreDescription\n      __typename\n    }\n    __typename\n  }\n  trend: TicketPercentageIncrease(where: $trendFilters) {\n    isValid\n    countChange\n    percentageChange(includeRisk: true)\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:9cc3-4439-bebb-2ee537d85796/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">c4cefa62c62289e1</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2-c4cefa62c62289e1-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getFamilyRollupQuery</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Identity_T15_TopFiveRiskyIdentities" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;TopFiveRiskyIdentities&quot;,&quot;variables&quot;:{&quot;filter&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/4be9e1cf-99da-4fda-91cd-1256cefadf38&quot;},&quot;severityCategory&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]}}},&quot;query&quot;:&quot;query TopFiveRiskyIdentities($filter: TicketsFilter!) {\n  Tickets(where: $filter) {\n    items(limit: 5, orderBy: [{severityNumeric: {order: DESC}}], includeRisk: true) {\n      srn\n      title\n      severityCategory\n      account\n      resourceName\n      ticketKey\n      resourceSRN\n      status\n      cloudType\n      swimlaneSRNs\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:9e94-4088-894a-5bbcd28f53fe/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">19643f5488f03ee7</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2-19643f5488f03ee7-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">TopFiveRiskyIdentities</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Identity_T16_getFamilyRollupQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFamilyRollupQuery&quot;,&quot;variables&quot;:{&quot;rollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/4be9e1cf-99da-4fda-91cd-1256cefadf38&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;}},&quot;policyCountRollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/4be9e1cf-99da-4fda-91cd-1256cefadf38&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;firstSeen&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}},&quot;trendFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/4be9e1cf-99da-4fda-91cd-1256cefadf38&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}}},&quot;query&quot;:&quot;query getFamilyRollupQuery($rollupFilters: TicketRollupFilter!, $trendFilters: TicketTrendsFilter!, $policyCountRollupFilters: TicketRollupFilter!) {\n  policyCount: TicketRollups(\n    where: $policyCountRollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      controlPolicyTitle\n      __typename\n    }\n    __typename\n  }\n  overall: TicketRollups(\n    where: $rollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      riskScoreDescription\n      __typename\n    }\n    __typename\n  }\n  trend: TicketPercentageIncrease(where: $trendFilters) {\n    isValid\n    countChange\n    percentageChange(includeRisk: true)\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:a7f8-44d5-ad01-f1c1ed63a58f/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">e95330bdb5340770</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2-e95330bdb5340770-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getFamilyRollupQuery</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Identity_T17_getOtherIssues" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getOtherIssues&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;standardFamilySrn&quot;:{&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/17f7243f-63eb-4b92-afa9-6decbfe93111&quot;},&quot;severityCategory&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;cloudType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]}}},&quot;query&quot;:&quot;query getOtherIssues($filters: TicketRollupFilter!) {\n  TicketRollups(\n    where: $filters\n    includeRollup: {swimlaneSrn: true, environment: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      cloudType\n      severityCategory\n      controlPolicyTitle\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:5607-4ddd-841b-a790a3bb487f/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">73ac7932d24f1d51</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2-73ac7932d24f1d51-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getOtherIssues</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Identity_T18_getFamilyRollupQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFamilyRollupQuery&quot;,&quot;variables&quot;:{&quot;rollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/17f7243f-63eb-4b92-afa9-6decbfe93111&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;}},&quot;policyCountRollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/17f7243f-63eb-4b92-afa9-6decbfe93111&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;firstSeen&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}},&quot;trendFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/17f7243f-63eb-4b92-afa9-6decbfe93111&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}}},&quot;query&quot;:&quot;query getFamilyRollupQuery($rollupFilters: TicketRollupFilter!, $trendFilters: TicketTrendsFilter!, $policyCountRollupFilters: TicketRollupFilter!) {\n  policyCount: TicketRollups(\n    where: $policyCountRollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      controlPolicyTitle\n      __typename\n    }\n    __typename\n  }\n  overall: TicketRollups(\n    where: $rollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      riskScoreDescription\n      __typename\n    }\n    __typename\n  }\n  trend: TicketPercentageIncrease(where: $trendFilters) {\n    isValid\n    countChange\n    percentageChange(includeRisk: true)\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:4809-448f-a9de-311fde396567/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">7186d0ba34baebd0</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">d27f012da021c4fa3fe8397b87be46c2-7186d0ba34baebd0-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getFamilyRollupQuery</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="stage11733927_04_Network" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Network_T01_networkCounts" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;networkCounts&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;keys&quot;:[&quot;Cloud&quot;,&quot;Type&quot;],&quot;labels&quot;:[&quot;Network&quot;,&quot;NetworkGroup&quot;,&quot;NetworkListener&quot;,&quot;NetworkInterface&quot;,&quot;NetworkComponent&quot;]}},&quot;query&quot;:&quot;query networkCounts($filters: GroupedQueryFilter!) {\n  GroupedQuery(where: $filters) {\n    items {\n      value\n      count\n      hasGroupedResult {\n        key\n        items {\n          value\n          count\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">df1ce9b9ba10835b027e54b2e23590d3</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:4b1a-4b58-a607-0c49a4e0662b/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">4610f0c6dd193cbb</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">df1ce9b9ba10835b027e54b2e23590d3-4610f0c6dd193cbb-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">networkCounts</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Network_T02_getStandardRisk" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getStandardRisk&quot;,&quot;variables&quot;:{&quot;rollupFilters&quot;:{&quot;standardSrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::Standard/ba35a1d1-c211-473e-894a-ad16fd8b7b09&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;}},&quot;trendFilters&quot;:{&quot;standardSrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::Standard/ba35a1d1-c211-473e-894a-ad16fd8b7b09&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}}},&quot;query&quot;:&quot;query getStandardRisk($rollupFilters: TicketRollupFilter!, $trendFilters: TicketTrendsFilter!) {\n  overall: TicketRollups(\n    where: $rollupFilters\n    includeRollup: {standardSrn: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      riskScoreNumeric\n      riskScoreDescription\n      __typename\n    }\n    __typename\n  }\n  trend: TicketTrendsV2(\n    where: $trendFilters\n    granularity: {granularity: DAY}\n    type: {type: RISK_LEVELS}\n  ) {\n    items(includeRisk: true) {\n      riskLevel\n      dateTime\n      __typename\n    }\n    __typename\n  }\n  trendChange: TicketPercentageIncrease(where: $trendFilters) {\n    isValid\n    riskChange\n    percentageChange(includeRisk: true)\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">df1ce9b9ba10835b027e54b2e23590d3</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:1807-444c-afd6-78923c70b2c1/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">ac3a68bc32078bdf</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">df1ce9b9ba10835b027e54b2e23590d3-ac3a68bc32078bdf-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getStandardRisk</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Network_T03_topInsights" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;topInsights&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/867c56dd-1ce8-441f-b4cb-6c5298439726&quot;},&quot;standardSrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::Standard/ba35a1d1-c211-473e-894a-ad16fd8b7b09&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]}}},&quot;query&quot;:&quot;query topInsights($filters: TopInsightsFilter) {\n  TopInsights(where: $filters) {\n    items {\n      insightType\n      topControlsByFamily {\n        family\n        standardFamily {\n          name\n          containedBy {\n            items {\n              name\n              srn\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        issues_perc\n        family_risk\n        controls {\n          control\n          score_improvement\n          standardControl {\n            name\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">df1ce9b9ba10835b027e54b2e23590d3</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:9b93-4b02-af1f-84c2e472c44a/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">2e1bd7b32a8f5976</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">df1ce9b9ba10835b027e54b2e23590d3-2e1bd7b32a8f5976-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">topInsights</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Network_T04_TopFiveIssues" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;TopFiveIssues&quot;,&quot;variables&quot;:{&quot;filter&quot;:{&quot;standardSrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::Standard/ba35a1d1-c211-473e-894a-ad16fd8b7b09&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]}}},&quot;query&quot;:&quot;query TopFiveIssues($filter: TicketsFilter!) {\n  Tickets(where: $filter) {\n    items(\n      limit: 5\n      orderBy: [{severityNumeric: {order: DESC, precedence: 2}}, {srn: {order: DESC, precedence: 1}}]\n      includeRisk: true\n    ) {\n      srn\n      title\n      templatedTitle\n      severityCategory\n      account\n      resourceName\n      resourceType\n      description\n      ticketKey\n      resourceSRN\n      isOperationalized\n      status\n      swimlaneSRNs\n      createdBy\n      policy {\n        srn\n        description\n        mappedBy {\n          items {\n            containedBy {\n              items {\n                srn\n                name\n                containedBy {\n                  items {\n                    srn\n                    name\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">df1ce9b9ba10835b027e54b2e23590d3</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:7cbb-43e5-9830-fab0be2dedd5/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">1f0b5b3a1e0be75c</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">df1ce9b9ba10835b027e54b2e23590d3-1f0b5b3a1e0be75c-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">TopFiveIssues</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Network_T05_TopFiveIssues" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getEncryption&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;standardFamilySrn&quot;:{&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/c55fe0c4-c888-47b2-b5d0-e949021b1c2a&quot;},&quot;standardControlSrn&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;ticketKey&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;cloudType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;resourceType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;resourceTypeFriendlyName&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]}}},&quot;query&quot;:&quot;query getEncryption($filters: TicketRollupFilter!) {\n  TicketRollups(\n    where: $filters\n    includeRollup: {swimlaneSrn: true, environment: true, status: true}\n  ) {\n    items(\n      orderBy: {standardControlSrn: {order: ASC, precedence: 1}}\n      includeRisk: true\n    ) {\n      count\n      cloudType\n      standardControlSrn\n      standardControl {\n        name\n        __typename\n      }\n      resourceType\n      resourceTypeFriendlyName\n      ticketKey\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">df1ce9b9ba10835b027e54b2e23590d3</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:4a7f-4095-a947-f7093154f64c/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">7b89bebf10514635</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">df1ce9b9ba10835b027e54b2e23590d3-7b89bebf10514635-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getEncryption</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Network_T06_getFamilyRollupQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFamilyRollupQuery&quot;,&quot;variables&quot;:{&quot;rollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/c55fe0c4-c888-47b2-b5d0-e949021b1c2a&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;}},&quot;policyCountRollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/c55fe0c4-c888-47b2-b5d0-e949021b1c2a&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;firstSeen&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}},&quot;trendFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/c55fe0c4-c888-47b2-b5d0-e949021b1c2a&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}}},&quot;query&quot;:&quot;query getFamilyRollupQuery($rollupFilters: TicketRollupFilter!, $trendFilters: TicketTrendsFilter!, $policyCountRollupFilters: TicketRollupFilter!) {\n  policyCount: TicketRollups(\n    where: $policyCountRollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      controlPolicyTitle\n      __typename\n    }\n    __typename\n  }\n  overall: TicketRollups(\n    where: $rollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      riskScoreDescription\n      __typename\n    }\n    __typename\n  }\n  trend: TicketPercentageIncrease(where: $trendFilters) {\n    isValid\n    countChange\n    percentageChange(includeRisk: true)\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">df1ce9b9ba10835b027e54b2e23590d3</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:66dc-4fab-a90c-b6eb219dbf0e/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">50042d2c76e260c8</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">df1ce9b9ba10835b027e54b2e23590d3-50042d2c76e260c8-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getFamilyRollupQuery</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Network_T07_getExposedResources" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getExposedResources&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;standardFamilySrn&quot;:{&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/4cf26294-c33f-4cc9-9477-ec8e120dcec6&quot;},&quot;standardControlSrn&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;cloudType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]}}},&quot;query&quot;:&quot;query getExposedResources($filters: TicketRollupFilter!) {\n  TicketRollups(\n    where: $filters\n    includeRollup: {swimlaneSrn: true, environment: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      cloudType\n      standardControlSrn\n      controlPolicyTitle\n      standardControl {\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">df1ce9b9ba10835b027e54b2e23590d3</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:7839-4fa1-8f89-d023f4db0485/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">2974bed9f64d6fe1</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">df1ce9b9ba10835b027e54b2e23590d3-2974bed9f64d6fe1-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getExposedResources</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Network_T08_getFamilyRollupQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFamilyRollupQuery&quot;,&quot;variables&quot;:{&quot;rollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/4cf26294-c33f-4cc9-9477-ec8e120dcec6&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;}},&quot;policyCountRollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/4cf26294-c33f-4cc9-9477-ec8e120dcec6&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;firstSeen&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}},&quot;trendFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/4cf26294-c33f-4cc9-9477-ec8e120dcec6&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}}},&quot;query&quot;:&quot;query getFamilyRollupQuery($rollupFilters: TicketRollupFilter!, $trendFilters: TicketTrendsFilter!, $policyCountRollupFilters: TicketRollupFilter!) {\n  policyCount: TicketRollups(\n    where: $policyCountRollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      controlPolicyTitle\n      __typename\n    }\n    __typename\n  }\n  overall: TicketRollups(\n    where: $rollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      riskScoreDescription\n      __typename\n    }\n    __typename\n  }\n  trend: TicketPercentageIncrease(where: $trendFilters) {\n    isValid\n    countChange\n    percentageChange(includeRisk: true)\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">df1ce9b9ba10835b027e54b2e23590d3</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:82f7-457b-baa6-4f7dec658032/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">8a2b980b06a0d046</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">df1ce9b9ba10835b027e54b2e23590d3-8a2b980b06a0d046-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getFamilyRollupQuery</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Network_T09_getRecentChanges" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getRecentChanges&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;standardFamilySrn&quot;:{&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/b93ea777-2b97-443f-955d-8887ac5e427e&quot;},&quot;standardControlSrn&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;resourceType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;resourceName&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;severityCategory&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;account&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;ticketKey&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;cloudType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]}}},&quot;query&quot;:&quot;query getRecentChanges($filters: TicketRollupFilter!) {\n  TicketRollups(\n    where: $filters\n    includeRollup: {swimlaneSrn: true, environment: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      cloudType\n      resourceType\n      standardControlSrn\n      controlPolicyTitle\n      severityCategory\n      account\n      resourceName\n      ticketKey\n      resourceSRN\n      status\n      cloudType\n      swimlaneSrn\n      standardControl {\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">df1ce9b9ba10835b027e54b2e23590d3</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:4b87-4032-8f2c-a3111727f56e/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">fc0b8046c5b8999a</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">df1ce9b9ba10835b027e54b2e23590d3-fc0b8046c5b8999a-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getRecentChanges</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Network_T10_getFamilyRollupQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFamilyRollupQuery&quot;,&quot;variables&quot;:{&quot;rollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/b93ea777-2b97-443f-955d-8887ac5e427e&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;}},&quot;policyCountRollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/b93ea777-2b97-443f-955d-8887ac5e427e&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;firstSeen&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}},&quot;trendFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/b93ea777-2b97-443f-955d-8887ac5e427e&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}}},&quot;query&quot;:&quot;query getFamilyRollupQuery($rollupFilters: TicketRollupFilter!, $trendFilters: TicketTrendsFilter!, $policyCountRollupFilters: TicketRollupFilter!) {\n  policyCount: TicketRollups(\n    where: $policyCountRollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      controlPolicyTitle\n      __typename\n    }\n    __typename\n  }\n  overall: TicketRollups(\n    where: $rollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      riskScoreDescription\n      __typename\n    }\n    __typename\n  }\n  trend: TicketPercentageIncrease(where: $trendFilters) {\n    isValid\n    countChange\n    percentageChange(includeRisk: true)\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">df1ce9b9ba10835b027e54b2e23590d3</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:5032-4fd8-91cf-ee5f0ff8ba60/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">688eaf3d6f264939</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">df1ce9b9ba10835b027e54b2e23590d3-688eaf3d6f264939-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getFamilyRollupQuery</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Network_T11_getUnused" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getUnused&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;standardFamilySrn&quot;:{&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/aa84e56c-0ed0-40f9-9ef2-633d413fdc73&quot;},&quot;standardControlSrn&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;resourceType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;resourceTypeFriendlyName&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;cloudType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]}}},&quot;query&quot;:&quot;query getUnused($filters: TicketRollupFilter!) {\n  TicketRollups(\n    where: $filters\n    includeRollup: {swimlaneSrn: true, environment: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      cloudType\n      resourceType\n      resourceTypeFriendlyName\n      standardControlSrn\n      controlPolicyTitle\n      standardControl {\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">df1ce9b9ba10835b027e54b2e23590d3</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:c7a0-4f64-8bf4-0826916e074a/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">cda19b3f79693dfc</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">df1ce9b9ba10835b027e54b2e23590d3-cda19b3f79693dfc-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getUnused</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Network_T12_getFamilyRollupQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFamilyRollupQuery&quot;,&quot;variables&quot;:{&quot;rollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/aa84e56c-0ed0-40f9-9ef2-633d413fdc73&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;}},&quot;policyCountRollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/aa84e56c-0ed0-40f9-9ef2-633d413fdc73&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;firstSeen&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}},&quot;trendFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/aa84e56c-0ed0-40f9-9ef2-633d413fdc73&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}}},&quot;query&quot;:&quot;query getFamilyRollupQuery($rollupFilters: TicketRollupFilter!, $trendFilters: TicketTrendsFilter!, $policyCountRollupFilters: TicketRollupFilter!) {\n  policyCount: TicketRollups(\n    where: $policyCountRollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      controlPolicyTitle\n      __typename\n    }\n    __typename\n  }\n  overall: TicketRollups(\n    where: $rollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      riskScoreDescription\n      __typename\n    }\n    __typename\n  }\n  trend: TicketPercentageIncrease(where: $trendFilters) {\n    isValid\n    countChange\n    percentageChange(includeRisk: true)\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">df1ce9b9ba10835b027e54b2e23590d3</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:971f-471a-b638-e7da5fabb351/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">810ab6b34fd4a8e9</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">df1ce9b9ba10835b027e54b2e23590d3-810ab6b34fd4a8e9-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getFamilyRollupQuery</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Network_T13_getOtherIssues" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getOtherIssues&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;standardFamilySrn&quot;:{&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/867c56dd-1ce8-441f-b4cb-6c5298439726&quot;},&quot;severityCategory&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;cloudType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]}}},&quot;query&quot;:&quot;query getOtherIssues($filters: TicketRollupFilter!) {\n  TicketRollups(\n    where: $filters\n    includeRollup: {swimlaneSrn: true, environment: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      cloudType\n      severityCategory\n      controlPolicyTitle\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">df1ce9b9ba10835b027e54b2e23590d3</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:b9fd-4f36-92a5-db7ab265bb00/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">f52be4d129ba0ebc</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">df1ce9b9ba10835b027e54b2e23590d3-f52be4d129ba0ebc-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getOtherIssues</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Network_T14_getFamilyRollupQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFamilyRollupQuery&quot;,&quot;variables&quot;:{&quot;rollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/867c56dd-1ce8-441f-b4cb-6c5298439726&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;}},&quot;policyCountRollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/867c56dd-1ce8-441f-b4cb-6c5298439726&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;firstSeen&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}},&quot;trendFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/867c56dd-1ce8-441f-b4cb-6c5298439726&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}}},&quot;query&quot;:&quot;query getFamilyRollupQuery($rollupFilters: TicketRollupFilter!, $trendFilters: TicketTrendsFilter!, $policyCountRollupFilters: TicketRollupFilter!) {\n  policyCount: TicketRollups(\n    where: $policyCountRollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      controlPolicyTitle\n      __typename\n    }\n    __typename\n  }\n  overall: TicketRollups(\n    where: $rollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      riskScoreDescription\n      __typename\n    }\n    __typename\n  }\n  trend: TicketPercentageIncrease(where: $trendFilters) {\n    isValid\n    countChange\n    percentageChange(includeRisk: true)\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">df1ce9b9ba10835b027e54b2e23590d3</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:0474-44e8-b846-97ce0112985d/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">b651aedd8cda3f7b</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">df1ce9b9ba10835b027e54b2e23590d3-b651aedd8cda3f7b-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getFamilyRollupQuery</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://front-end-collector-web.s.sonraisecurity.com/v1/metrics" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;resourceMetrics&quot;:[{&quot;resource&quot;:{&quot;attributes&quot;:[],&quot;droppedAttributesCount&quot;:0},&quot;scopeMetrics&quot;:[{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-document-load&quot;,&quot;version&quot;:&quot;0.27.1&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-fetch&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-long-task&quot;,&quot;version&quot;:&quot;0.30.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-xml-http-request&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;app_layout_error_boundary_errors_count&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;sum&quot;:{&quot;aggregationTemporality&quot;:2,&quot;isMonotonic&quot;:true,&quot;dataPoints&quot;:[]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.graphql&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;graphql_request_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiUsers&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:509,&quot;min&quot;:509,&quot;max&quot;:509,&quot;startTimeUnixNano&quot;:1680198065344100000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAllMaturityLevels&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:510,&quot;min&quot;:510,&quot;max&quot;:510,&quot;startTimeUnixNano&quot;:1680198065346600000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;currentUser&quot;}}],&quot;bucketCounts&quot;:[0,0,2,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:2,&quot;sum&quot;:1048,&quot;min&quot;:516,&quot;max&quot;:532,&quot;startTimeUnixNano&quot;:1680198065349300000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAllEnvironments&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:522,&quot;min&quot;:522,&quot;max&quot;:522,&quot;startTimeUnixNano&quot;:1680198065358000000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAllSecurityAreas&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:523,&quot;min&quot;:523,&quot;max&quot;:523,&quot;startTimeUnixNano&quot;:1680198065359700000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiOrgConfig&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:523,&quot;min&quot;:523,&quot;max&quot;:523,&quot;startTimeUnixNano&quot;:1680198065360500000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiUIConfig&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:531,&quot;min&quot;:531,&quot;max&quot;:531,&quot;startTimeUnixNano&quot;:1680198065366700000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getCollectorConfigurations&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:572,&quot;min&quot;:572,&quot;max&quot;:572,&quot;startTimeUnixNano&quot;:1680198065409600000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;get_all_roles&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:130,&quot;min&quot;:130,&quot;max&quot;:130,&quot;startTimeUnixNano&quot;:1680198065485800000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getControlFrameworks&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:319,&quot;min&quot;:319,&quot;max&quot;:319,&quot;startTimeUnixNano&quot;:1680198065676900000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;IntrospectionQuery&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:853,&quot;min&quot;:853,&quot;max&quot;:853,&quot;startTimeUnixNano&quot;:1680198066047400000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSavedSearches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:812,&quot;min&quot;:812,&quot;max&quot;:812,&quot;startTimeUnixNano&quot;:1680198066167600000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;saveUserProfile&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:876,&quot;min&quot;:876,&quot;max&quot;:876,&quot;startTimeUnixNano&quot;:1680198066241900000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getResourceLabels&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:903,&quot;min&quot;:903,&quot;max&quot;:903,&quot;startTimeUnixNano&quot;:1680198066262700000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAccounts&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1009,&quot;min&quot;:1009,&quot;max&quot;:1009,&quot;startTimeUnixNano&quot;:1680198066366100000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSubscriptions&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1011,&quot;min&quot;:1011,&quot;max&quot;:1011,&quot;startTimeUnixNano&quot;:1680198066368000000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchSwimlanes&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1110,&quot;min&quot;:1110,&quot;max&quot;:1110,&quot;startTimeUnixNano&quot;:1680198066467200000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;sonrai_user&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:228,&quot;min&quot;:228,&quot;max&quot;:228,&quot;startTimeUnixNano&quot;:1680198066487000000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiSeaches&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1221,&quot;min&quot;:1221,&quot;max&quot;:1221,&quot;startTimeUnixNano&quot;:1680198066576600000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getReportPoll&quot;}}],&quot;bucketCounts&quot;:[0,2,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:2,&quot;sum&quot;:609,&quot;min&quot;:228,&quot;max&quot;:381,&quot;startTimeUnixNano&quot;:1680198066642900000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getReportsInit&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:147,&quot;min&quot;:147,&quot;max&quot;:147,&quot;startTimeUnixNano&quot;:1680198066650600000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TopFiveIssues&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:101,&quot;min&quot;:101,&quot;max&quot;:101,&quot;startTimeUnixNano&quot;:1680198066656900000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getServiceTypes&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:405,&quot;min&quot;:405,&quot;max&quot;:405,&quot;startTimeUnixNano&quot;:1680198066668400000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;licensing&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:168,&quot;min&quot;:168,&quot;max&quot;:168,&quot;startTimeUnixNano&quot;:1680198066722500000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getDataProtectionInsights&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:269,&quot;min&quot;:269,&quot;max&quot;:269,&quot;startTimeUnixNano&quot;:1680198066893400000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getNetworkInsights&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:285,&quot;min&quot;:285,&quot;max&quot;:285,&quot;startTimeUnixNano&quot;:1680198066911200000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getFundamentalInsights&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:325,&quot;min&quot;:325,&quot;max&quot;:325,&quot;startTimeUnixNano&quot;:1680198066950500000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getIdentityInsights&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:358,&quot;min&quot;:358,&quot;max&quot;:358,&quot;startTimeUnixNano&quot;:1680198066982000000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getFamilyRollupQuery&quot;}}],&quot;bucketCounts&quot;:[0,1,1,3,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:5,&quot;sum&quot;:5355,&quot;min&quot;:379,&quot;max&quot;:1374,&quot;startTimeUnixNano&quot;:1680198067005900000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;vulnerabilities_by_time&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:383,&quot;min&quot;:383,&quot;max&quot;:383,&quot;startTimeUnixNano&quot;:1680198067011700000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchClouds&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:478,&quot;min&quot;:478,&quot;max&quot;:478,&quot;startTimeUnixNano&quot;:1680198067035200000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSavedSearches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:899,&quot;min&quot;:899,&quot;max&quot;:899,&quot;startTimeUnixNano&quot;:1680198067139900000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getActiveThreat&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:599,&quot;min&quot;:599,&quot;max&quot;:599,&quot;startTimeUnixNano&quot;:1680198067227900000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;top5ResourcesAtRisk&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:785,&quot;min&quot;:785,&quot;max&quot;:785,&quot;startTimeUnixNano&quot;:1680198067412600000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;top5Vulnerabilities&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:789,&quot;min&quot;:789,&quot;max&quot;:789,&quot;startTimeUnixNano&quot;:1680198067416700000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;vulnerabilitiesByPublishedDate&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:792,&quot;min&quot;:792,&quot;max&quot;:792,&quot;startTimeUnixNano&quot;:1680198067419100000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;InsightsFindingsTrends&quot;}}],&quot;bucketCounts&quot;:[0,0,0,2,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:2,&quot;sum&quot;:2852,&quot;min&quot;:1416,&quot;max&quot;:1436,&quot;startTimeUnixNano&quot;:1680198067972600000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStandardRisk&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1472,&quot;min&quot;:1472,&quot;max&quot;:1472,&quot;startTimeUnixNano&quot;:1680198068027400000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;topInsights&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1607,&quot;min&quot;:1607,&quot;max&quot;:1607,&quot;startTimeUnixNano&quot;:1680198068162700000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getIdentityCounts&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:435,&quot;min&quot;:435,&quot;max&quot;:435,&quot;startTimeUnixNano&quot;:1680198105286500000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAccessKeys&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:512,&quot;min&quot;:512,&quot;max&quot;:512,&quot;startTimeUnixNano&quot;:1680198105442300000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getCrossAccountTrustExposure&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:518,&quot;min&quot;:518,&quot;max&quot;:518,&quot;startTimeUnixNano&quot;:1680198105446700000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getFamilyRollupQuery&quot;}}],&quot;bucketCounts&quot;:[0,0,2,5,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:7,&quot;sum&quot;:8184,&quot;min&quot;:526,&quot;max&quot;:1479,&quot;startTimeUnixNano&quot;:1680198105455900000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TopFiveRiskyIdentities&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:575,&quot;min&quot;:575,&quot;max&quot;:575,&quot;startTimeUnixNano&quot;:1680198105506600000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TopFiveIssues&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:838,&quot;min&quot;:838,&quot;max&quot;:838,&quot;startTimeUnixNano&quot;:1680198105690400000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;topInsights&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:913,&quot;min&quot;:913,&quot;max&quot;:913,&quot;startTimeUnixNano&quot;:1680198105765100000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getOtherIssues&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:844,&quot;min&quot;:844,&quot;max&quot;:844,&quot;startTimeUnixNano&quot;:1680198105776100000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getUnusedIdentity&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:889,&quot;min&quot;:889,&quot;max&quot;:889,&quot;startTimeUnixNano&quot;:1680198105817400000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStandardRisk&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1437,&quot;min&quot;:1437,&quot;max&quot;:1437,&quot;startTimeUnixNano&quot;:1680198106290000100,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getOverpriviledgedIdentity&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1401,&quot;min&quot;:1401,&quot;max&quot;:1401,&quot;startTimeUnixNano&quot;:1680198106331600100,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getLateralMovementRollup&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1485,&quot;min&quot;:1485,&quot;max&quot;:1485,&quot;startTimeUnixNano&quot;:1680198106413000000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;topInsights&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:446,&quot;min&quot;:446,&quot;max&quot;:446,&quot;startTimeUnixNano&quot;:1680198119847300000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;networkCounts&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:450,&quot;min&quot;:450,&quot;max&quot;:450,&quot;startTimeUnixNano&quot;:1680198119849400000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TopFiveIssues&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:458,&quot;min&quot;:458,&quot;max&quot;:458,&quot;startTimeUnixNano&quot;:1680198119859300000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getFamilyRollupQuery&quot;}}],&quot;bucketCounts&quot;:[0,1,4,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:5,&quot;sum&quot;:3621,&quot;min&quot;:476,&quot;max&quot;:934,&quot;startTimeUnixNano&quot;:1680198119929800000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getOtherIssues&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:496,&quot;min&quot;:496,&quot;max&quot;:496,&quot;startTimeUnixNano&quot;:1680198119950800100,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getEncryption&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:599,&quot;min&quot;:599,&quot;max&quot;:599,&quot;startTimeUnixNano&quot;:1680198120051600100,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStandardRisk&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:975,&quot;min&quot;:975,&quot;max&quot;:975,&quot;startTimeUnixNano&quot;:1680198120375400000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getExposedResources&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:925,&quot;min&quot;:925,&quot;max&quot;:925,&quot;startTimeUnixNano&quot;:1680198120379000000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getRecentChanges&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:929,&quot;min&quot;:929,&quot;max&quot;:929,&quot;startTimeUnixNano&quot;:1680198120383200000,&quot;timeUnixNano&quot;:1680198124840500000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getUnused&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:932,&quot;min&quot;:932,&quot;max&quot;:932,&quot;startTimeUnixNano&quot;:1680198120386800000,&quot;timeUnixNano&quot;:1680198124840500000}]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.newroute&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;newtab_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:56,&quot;min&quot;:56,&quot;max&quot;:56,&quot;startTimeUnixNano&quot;:1680198066558000000,&quot;timeUnixNano&quot;:1680198124840500000}]}},{&quot;name&quot;:&quot;newroute_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[]}}]}]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v1/metrics</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="stage11733927_05_DataProtection" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DataProtection_T01_getDataCounts" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getDataCounts&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;active&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:true}}},&quot;query&quot;:&quot;query getDataCounts($filters: DataFilter!) {\n  Data(where: $filters) {\n    count\n    group {\n      key {\n        cloudType\n        __typename\n      }\n      count\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">23471d28374f8d19a3f3a571a169074c</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:7c08-4d29-a177-1679c7840b41/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">f31a0ff65b542128</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">23471d28374f8d19a3f3a571a169074c-f31a0ff65b542128-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getDataCounts</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DataProtection_T02_getStandardRisk" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getStandardRisk&quot;,&quot;variables&quot;:{&quot;rollupFilters&quot;:{&quot;standardSrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::Standard/g67udki0-kd98-3444-kk43-lp01shj38dj7&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;}},&quot;trendFilters&quot;:{&quot;standardSrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::Standard/g67udki0-kd98-3444-kk43-lp01shj38dj7&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}}},&quot;query&quot;:&quot;query getStandardRisk($rollupFilters: TicketRollupFilter!, $trendFilters: TicketTrendsFilter!) {\n  overall: TicketRollups(\n    where: $rollupFilters\n    includeRollup: {standardSrn: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      riskScoreNumeric\n      riskScoreDescription\n      __typename\n    }\n    __typename\n  }\n  trend: TicketTrendsV2(\n    where: $trendFilters\n    granularity: {granularity: DAY}\n    type: {type: RISK_LEVELS}\n  ) {\n    items(includeRisk: true) {\n      riskLevel\n      dateTime\n      __typename\n    }\n    __typename\n  }\n  trendChange: TicketPercentageIncrease(where: $trendFilters) {\n    isValid\n    riskChange\n    percentageChange(includeRisk: true)\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">23471d28374f8d19a3f3a571a169074c</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:7e49-4491-9feb-4eb3c0a0c87f/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">f7c2bf6dec20c392</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">23471d28374f8d19a3f3a571a169074c-f7c2bf6dec20c392-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getStandardRisk</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DataProtection_T03_topInsights" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;topInsights&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/4847a7fe-5568-443d-bd24-90194d137372&quot;},&quot;standardSrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::Standard/g67udki0-kd98-3444-kk43-lp01shj38dj7&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]}}},&quot;query&quot;:&quot;query topInsights($filters: TopInsightsFilter) {\n  TopInsights(where: $filters) {\n    items {\n      insightType\n      topControlsByFamily {\n        family\n        standardFamily {\n          name\n          containedBy {\n            items {\n              name\n              srn\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        issues_perc\n        family_risk\n        controls {\n          control\n          score_improvement\n          standardControl {\n            name\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">23471d28374f8d19a3f3a571a169074c</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:990f-49f8-92f7-906ecaff89d3/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">56f98a061850d554</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">23471d28374f8d19a3f3a571a169074c-56f98a061850d554-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">topInsights</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DataProtection_T04_TopFiveIssues" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;TopFiveIssues&quot;,&quot;variables&quot;:{&quot;filter&quot;:{&quot;standardSrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::Standard/g67udki0-kd98-3444-kk43-lp01shj38dj7&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]}}},&quot;query&quot;:&quot;query TopFiveIssues($filter: TicketsFilter!) {\n  Tickets(where: $filter) {\n    items(\n      limit: 5\n      orderBy: [{severityNumeric: {order: DESC, precedence: 2}}, {srn: {order: DESC, precedence: 1}}]\n      includeRisk: true\n    ) {\n      srn\n      title\n      templatedTitle\n      severityCategory\n      account\n      resourceName\n      resourceType\n      description\n      ticketKey\n      resourceSRN\n      isOperationalized\n      status\n      swimlaneSRNs\n      createdBy\n      policy {\n        srn\n        description\n        mappedBy {\n          items {\n            containedBy {\n              items {\n                srn\n                name\n                containedBy {\n                  items {\n                    srn\n                    name\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">23471d28374f8d19a3f3a571a169074c</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:3b5f-4fcf-8571-08ceb8bedf89/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">85e4da429644f5a7</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">23471d28374f8d19a3f3a571a169074c-85e4da429644f5a7-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">TopFiveIssues</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DataProtection_T05_getDataCountsForCloud" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getDataCountsForCloud&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;active&quot;:{&quot;value&quot;:true},&quot;cloudType&quot;:{&quot;value&quot;:null}}},&quot;query&quot;:&quot;query getDataCountsForCloud($filters: DataFilter!) {\n  Data(where: $filters) {\n    group {\n      key {\n        serviceType\n        __typename\n      }\n      count\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">23471d28374f8d19a3f3a571a169074c</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:f3e4-4eb8-8f26-ebc2f88a2b87/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">f1b316deb75e6944</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">23471d28374f8d19a3f3a571a169074c-f1b316deb75e6944-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getDataCountsForCloud</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DataProtection_T06_getEncryptionKeys" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getEncryptionKeys&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;standardFamilySrn&quot;:{&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/d97fae03-7c68-4a85-b84a-5296984006fd&quot;},&quot;standardControlSrn&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;cloudType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]}}},&quot;query&quot;:&quot;query getEncryptionKeys($filters: TicketRollupFilter!) {\n  TicketRollups(\n    where: $filters\n    includeRollup: {swimlaneSrn: true, environment: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      cloudType\n      standardControlSrn\n      controlPolicyTitle\n      standardControl {\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">23471d28374f8d19a3f3a571a169074c</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:4afb-4665-a432-28bcee4b8cb2/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">e49666182a21239f</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">23471d28374f8d19a3f3a571a169074c-e49666182a21239f-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getEncryptionKeys</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DataProtection_T07_getFamilyRollupQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFamilyRollupQuery&quot;,&quot;variables&quot;:{&quot;rollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/d97fae03-7c68-4a85-b84a-5296984006fd&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;}},&quot;policyCountRollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/d97fae03-7c68-4a85-b84a-5296984006fd&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;firstSeen&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}},&quot;trendFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/d97fae03-7c68-4a85-b84a-5296984006fd&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}}},&quot;query&quot;:&quot;query getFamilyRollupQuery($rollupFilters: TicketRollupFilter!, $trendFilters: TicketTrendsFilter!, $policyCountRollupFilters: TicketRollupFilter!) {\n  policyCount: TicketRollups(\n    where: $policyCountRollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      controlPolicyTitle\n      __typename\n    }\n    __typename\n  }\n  overall: TicketRollups(\n    where: $rollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      riskScoreDescription\n      __typename\n    }\n    __typename\n  }\n  trend: TicketPercentageIncrease(where: $trendFilters) {\n    isValid\n    countChange\n    percentageChange(includeRisk: true)\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">23471d28374f8d19a3f3a571a169074c</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:7070-4b55-a4c6-035fd2534607/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">f7e9f0e640dba4a9</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">23471d28374f8d19a3f3a571a169074c-f7e9f0e640dba4a9-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getFamilyRollupQuery</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DataProtection_T08_getClassification" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getClassification&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;standardFamilySrn&quot;:{&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/70dcb666-a968-4bc5-ba75-43f02480054e&quot;},&quot;resourceType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;serviceType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;resourceTypeFriendlyName&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;serviceTypeFriendlyName&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;standardControlSrn&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;cloudType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]}}},&quot;query&quot;:&quot;query getClassification($filters: TicketRollupFilter!) {\n  TicketRollups(\n    where: $filters\n    includeRollup: {swimlaneSrn: true, environment: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      cloudType\n      resourceType\n      serviceType\n      resourceTypeFriendlyName\n      serviceTypeFriendlyName\n      standardControlSrn\n      controlPolicyTitle\n      standardControl {\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">23471d28374f8d19a3f3a571a169074c</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:0fa8-4d55-9fef-c687e14d6234/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">7c46430b6794c36b</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">23471d28374f8d19a3f3a571a169074c-7c46430b6794c36b-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getClassification</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DataProtection_T09_getFamilyRollupQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFamilyRollupQuery&quot;,&quot;variables&quot;:{&quot;rollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/70dcb666-a968-4bc5-ba75-43f02480054e&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;}},&quot;policyCountRollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/70dcb666-a968-4bc5-ba75-43f02480054e&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;firstSeen&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}},&quot;trendFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/70dcb666-a968-4bc5-ba75-43f02480054e&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}}},&quot;query&quot;:&quot;query getFamilyRollupQuery($rollupFilters: TicketRollupFilter!, $trendFilters: TicketTrendsFilter!, $policyCountRollupFilters: TicketRollupFilter!) {\n  policyCount: TicketRollups(\n    where: $policyCountRollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      controlPolicyTitle\n      __typename\n    }\n    __typename\n  }\n  overall: TicketRollups(\n    where: $rollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      riskScoreDescription\n      __typename\n    }\n    __typename\n  }\n  trend: TicketPercentageIncrease(where: $trendFilters) {\n    isValid\n    countChange\n    percentageChange(includeRisk: true)\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">23471d28374f8d19a3f3a571a169074c</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:a544-41f2-8b98-48dc5eb2902f/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">702836a635a83fcb</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">23471d28374f8d19a3f3a571a169074c-702836a635a83fcb-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getFamilyRollupQuery</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DataProtection_T10_getAccess" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getAccess&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;standardFamilySrn&quot;:{&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/49cc212c-8110-49fa-bfb3-35d3bfd48a5d&quot;},&quot;standardControlSrn&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;resourceType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;serviceTypeFriendlyName&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;serviceType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;cloudType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]}}},&quot;query&quot;:&quot;query getAccess($filters: TicketRollupFilter!) {\n  TicketRollups(\n    where: $filters\n    includeRollup: {swimlaneSrn: true, environment: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      cloudType\n      serviceType\n      serviceTypeFriendlyName\n      standardControlSrn\n      controlPolicyTitle\n      standardControl {\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">23471d28374f8d19a3f3a571a169074c</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:9d70-4248-8765-b6f2001959e8/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">311ccb17492bd457</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">23471d28374f8d19a3f3a571a169074c-311ccb17492bd457-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getAccess</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DataProtection_T11_getFamilyRollupQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFamilyRollupQuery&quot;,&quot;variables&quot;:{&quot;rollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/49cc212c-8110-49fa-bfb3-35d3bfd48a5d&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;}},&quot;policyCountRollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/49cc212c-8110-49fa-bfb3-35d3bfd48a5d&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;firstSeen&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}},&quot;trendFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/49cc212c-8110-49fa-bfb3-35d3bfd48a5d&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}}},&quot;query&quot;:&quot;query getFamilyRollupQuery($rollupFilters: TicketRollupFilter!, $trendFilters: TicketTrendsFilter!, $policyCountRollupFilters: TicketRollupFilter!) {\n  policyCount: TicketRollups(\n    where: $policyCountRollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      controlPolicyTitle\n      __typename\n    }\n    __typename\n  }\n  overall: TicketRollups(\n    where: $rollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      riskScoreDescription\n      __typename\n    }\n    __typename\n  }\n  trend: TicketPercentageIncrease(where: $trendFilters) {\n    isValid\n    countChange\n    percentageChange(includeRisk: true)\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">23471d28374f8d19a3f3a571a169074c</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:c045-4ac7-9e23-99f374fff2d0/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">2ac8151596af71c5</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">23471d28374f8d19a3f3a571a169074c-2ac8151596af71c5-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getFamilyRollupQuery</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DataProtection_T12_getKeyAndCert" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getKeyAndCert&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;standardFamilySrn&quot;:{&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/439670ce-e131-4318-a438-e5e28d2af5cc&quot;},&quot;standardControlSrn&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;cloudType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]}}},&quot;query&quot;:&quot;query getKeyAndCert($filters: TicketRollupFilter!) {\n  TicketRollups(\n    where: $filters\n    includeRollup: {swimlaneSrn: true, environment: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      cloudType\n      standardControlSrn\n      controlPolicyTitle\n      standardControl {\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">23471d28374f8d19a3f3a571a169074c</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:d2bd-46f9-8986-cce85a40d3c3/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">63e0ba11599f6027</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">23471d28374f8d19a3f3a571a169074c-63e0ba11599f6027-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getKeyAndCert</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DataProtection_T13_getFamilyRollupQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFamilyRollupQuery&quot;,&quot;variables&quot;:{&quot;rollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/439670ce-e131-4318-a438-e5e28d2af5cc&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;}},&quot;policyCountRollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/439670ce-e131-4318-a438-e5e28d2af5cc&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;firstSeen&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}},&quot;trendFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/439670ce-e131-4318-a438-e5e28d2af5cc&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}}},&quot;query&quot;:&quot;query getFamilyRollupQuery($rollupFilters: TicketRollupFilter!, $trendFilters: TicketTrendsFilter!, $policyCountRollupFilters: TicketRollupFilter!) {\n  policyCount: TicketRollups(\n    where: $policyCountRollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      controlPolicyTitle\n      __typename\n    }\n    __typename\n  }\n  overall: TicketRollups(\n    where: $rollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      riskScoreDescription\n      __typename\n    }\n    __typename\n  }\n  trend: TicketPercentageIncrease(where: $trendFilters) {\n    isValid\n    countChange\n    percentageChange(includeRisk: true)\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">23471d28374f8d19a3f3a571a169074c</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:1420-4a04-8e30-97281c1429f9/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">c4111818f089a6c0</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">23471d28374f8d19a3f3a571a169074c-c4111818f089a6c0-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getFamilyRollupQuery</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DataProtection_T14_getOtherIssues" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getOtherIssues&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;standardFamilySrn&quot;:{&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/4847a7fe-5568-443d-bd24-90194d137372&quot;},&quot;severityCategory&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;cloudType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]}}},&quot;query&quot;:&quot;query getOtherIssues($filters: TicketRollupFilter!) {\n  TicketRollups(\n    where: $filters\n    includeRollup: {swimlaneSrn: true, environment: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      cloudType\n      severityCategory\n      controlPolicyTitle\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">23471d28374f8d19a3f3a571a169074c</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:eee0-418b-9e00-5dc180449ffb/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">0fa85975109015a7</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">23471d28374f8d19a3f3a571a169074c-0fa85975109015a7-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getOtherIssues</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DataProtection_T15_getFamilyRollupQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFamilyRollupQuery&quot;,&quot;variables&quot;:{&quot;rollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/4847a7fe-5568-443d-bd24-90194d137372&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;}},&quot;policyCountRollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/4847a7fe-5568-443d-bd24-90194d137372&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;firstSeen&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}},&quot;trendFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/4847a7fe-5568-443d-bd24-90194d137372&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}}},&quot;query&quot;:&quot;query getFamilyRollupQuery($rollupFilters: TicketRollupFilter!, $trendFilters: TicketTrendsFilter!, $policyCountRollupFilters: TicketRollupFilter!) {\n  policyCount: TicketRollups(\n    where: $policyCountRollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      controlPolicyTitle\n      __typename\n    }\n    __typename\n  }\n  overall: TicketRollups(\n    where: $rollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      riskScoreDescription\n      __typename\n    }\n    __typename\n  }\n  trend: TicketPercentageIncrease(where: $trendFilters) {\n    isValid\n    countChange\n    percentageChange(includeRisk: true)\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">23471d28374f8d19a3f3a571a169074c</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:1524-4a6d-8b08-9084b53171ad/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">6c912d6ac10724ea</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">23471d28374f8d19a3f3a571a169074c-6c912d6ac10724ea-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getFamilyRollupQuery</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://front-end-collector-web.s.sonraisecurity.com/v1/metrics" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;resourceMetrics&quot;:[{&quot;resource&quot;:{&quot;attributes&quot;:[],&quot;droppedAttributesCount&quot;:0},&quot;scopeMetrics&quot;:[{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-document-load&quot;,&quot;version&quot;:&quot;0.27.1&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-fetch&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-long-task&quot;,&quot;version&quot;:&quot;0.30.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-xml-http-request&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;app_layout_error_boundary_errors_count&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;sum&quot;:{&quot;aggregationTemporality&quot;:2,&quot;isMonotonic&quot;:true,&quot;dataPoints&quot;:[]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.graphql&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;graphql_request_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiUsers&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:509,&quot;min&quot;:509,&quot;max&quot;:509,&quot;startTimeUnixNano&quot;:1680198065344100000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAllMaturityLevels&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:510,&quot;min&quot;:510,&quot;max&quot;:510,&quot;startTimeUnixNano&quot;:1680198065346600000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;currentUser&quot;}}],&quot;bucketCounts&quot;:[0,0,2,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:2,&quot;sum&quot;:1048,&quot;min&quot;:516,&quot;max&quot;:532,&quot;startTimeUnixNano&quot;:1680198065349300000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAllEnvironments&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:522,&quot;min&quot;:522,&quot;max&quot;:522,&quot;startTimeUnixNano&quot;:1680198065358000000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAllSecurityAreas&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:523,&quot;min&quot;:523,&quot;max&quot;:523,&quot;startTimeUnixNano&quot;:1680198065359700000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiOrgConfig&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:523,&quot;min&quot;:523,&quot;max&quot;:523,&quot;startTimeUnixNano&quot;:1680198065360500000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiUIConfig&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:531,&quot;min&quot;:531,&quot;max&quot;:531,&quot;startTimeUnixNano&quot;:1680198065366700000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getCollectorConfigurations&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:572,&quot;min&quot;:572,&quot;max&quot;:572,&quot;startTimeUnixNano&quot;:1680198065409600000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;get_all_roles&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:130,&quot;min&quot;:130,&quot;max&quot;:130,&quot;startTimeUnixNano&quot;:1680198065485800000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getControlFrameworks&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:319,&quot;min&quot;:319,&quot;max&quot;:319,&quot;startTimeUnixNano&quot;:1680198065676900000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;IntrospectionQuery&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:853,&quot;min&quot;:853,&quot;max&quot;:853,&quot;startTimeUnixNano&quot;:1680198066047400000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSavedSearches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:812,&quot;min&quot;:812,&quot;max&quot;:812,&quot;startTimeUnixNano&quot;:1680198066167600000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;saveUserProfile&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:876,&quot;min&quot;:876,&quot;max&quot;:876,&quot;startTimeUnixNano&quot;:1680198066241900000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getResourceLabels&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:903,&quot;min&quot;:903,&quot;max&quot;:903,&quot;startTimeUnixNano&quot;:1680198066262700000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAccounts&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1009,&quot;min&quot;:1009,&quot;max&quot;:1009,&quot;startTimeUnixNano&quot;:1680198066366100000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSubscriptions&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1011,&quot;min&quot;:1011,&quot;max&quot;:1011,&quot;startTimeUnixNano&quot;:1680198066368000000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchSwimlanes&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1110,&quot;min&quot;:1110,&quot;max&quot;:1110,&quot;startTimeUnixNano&quot;:1680198066467200000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;sonrai_user&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:228,&quot;min&quot;:228,&quot;max&quot;:228,&quot;startTimeUnixNano&quot;:1680198066487000000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiSeaches&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1221,&quot;min&quot;:1221,&quot;max&quot;:1221,&quot;startTimeUnixNano&quot;:1680198066576600000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getReportPoll&quot;}}],&quot;bucketCounts&quot;:[0,2,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:2,&quot;sum&quot;:609,&quot;min&quot;:228,&quot;max&quot;:381,&quot;startTimeUnixNano&quot;:1680198066642900000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getReportsInit&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:147,&quot;min&quot;:147,&quot;max&quot;:147,&quot;startTimeUnixNano&quot;:1680198066650600000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TopFiveIssues&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:101,&quot;min&quot;:101,&quot;max&quot;:101,&quot;startTimeUnixNano&quot;:1680198066656900000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getServiceTypes&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:405,&quot;min&quot;:405,&quot;max&quot;:405,&quot;startTimeUnixNano&quot;:1680198066668400000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;licensing&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:168,&quot;min&quot;:168,&quot;max&quot;:168,&quot;startTimeUnixNano&quot;:1680198066722500000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getDataProtectionInsights&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:269,&quot;min&quot;:269,&quot;max&quot;:269,&quot;startTimeUnixNano&quot;:1680198066893400000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getNetworkInsights&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:285,&quot;min&quot;:285,&quot;max&quot;:285,&quot;startTimeUnixNano&quot;:1680198066911200000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getFundamentalInsights&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:325,&quot;min&quot;:325,&quot;max&quot;:325,&quot;startTimeUnixNano&quot;:1680198066950500000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getIdentityInsights&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:358,&quot;min&quot;:358,&quot;max&quot;:358,&quot;startTimeUnixNano&quot;:1680198066982000000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getFamilyRollupQuery&quot;}}],&quot;bucketCounts&quot;:[0,1,1,3,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:5,&quot;sum&quot;:5355,&quot;min&quot;:379,&quot;max&quot;:1374,&quot;startTimeUnixNano&quot;:1680198067005900000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;vulnerabilities_by_time&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:383,&quot;min&quot;:383,&quot;max&quot;:383,&quot;startTimeUnixNano&quot;:1680198067011700000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchClouds&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:478,&quot;min&quot;:478,&quot;max&quot;:478,&quot;startTimeUnixNano&quot;:1680198067035200000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSavedSearches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:899,&quot;min&quot;:899,&quot;max&quot;:899,&quot;startTimeUnixNano&quot;:1680198067139900000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getActiveThreat&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:599,&quot;min&quot;:599,&quot;max&quot;:599,&quot;startTimeUnixNano&quot;:1680198067227900000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;top5ResourcesAtRisk&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:785,&quot;min&quot;:785,&quot;max&quot;:785,&quot;startTimeUnixNano&quot;:1680198067412600000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;top5Vulnerabilities&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:789,&quot;min&quot;:789,&quot;max&quot;:789,&quot;startTimeUnixNano&quot;:1680198067416700000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;vulnerabilitiesByPublishedDate&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:792,&quot;min&quot;:792,&quot;max&quot;:792,&quot;startTimeUnixNano&quot;:1680198067419100000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;InsightsFindingsTrends&quot;}}],&quot;bucketCounts&quot;:[0,0,0,2,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:2,&quot;sum&quot;:2852,&quot;min&quot;:1416,&quot;max&quot;:1436,&quot;startTimeUnixNano&quot;:1680198067972600000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStandardRisk&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1472,&quot;min&quot;:1472,&quot;max&quot;:1472,&quot;startTimeUnixNano&quot;:1680198068027400000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;topInsights&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1607,&quot;min&quot;:1607,&quot;max&quot;:1607,&quot;startTimeUnixNano&quot;:1680198068162700000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getIdentityCounts&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:435,&quot;min&quot;:435,&quot;max&quot;:435,&quot;startTimeUnixNano&quot;:1680198105286500000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAccessKeys&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:512,&quot;min&quot;:512,&quot;max&quot;:512,&quot;startTimeUnixNano&quot;:1680198105442300000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getCrossAccountTrustExposure&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:518,&quot;min&quot;:518,&quot;max&quot;:518,&quot;startTimeUnixNano&quot;:1680198105446700000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getFamilyRollupQuery&quot;}}],&quot;bucketCounts&quot;:[0,0,2,5,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:7,&quot;sum&quot;:8184,&quot;min&quot;:526,&quot;max&quot;:1479,&quot;startTimeUnixNano&quot;:1680198105455900000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TopFiveRiskyIdentities&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:575,&quot;min&quot;:575,&quot;max&quot;:575,&quot;startTimeUnixNano&quot;:1680198105506600000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TopFiveIssues&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:838,&quot;min&quot;:838,&quot;max&quot;:838,&quot;startTimeUnixNano&quot;:1680198105690400000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;topInsights&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:913,&quot;min&quot;:913,&quot;max&quot;:913,&quot;startTimeUnixNano&quot;:1680198105765100000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getOtherIssues&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:844,&quot;min&quot;:844,&quot;max&quot;:844,&quot;startTimeUnixNano&quot;:1680198105776100000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getUnusedIdentity&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:889,&quot;min&quot;:889,&quot;max&quot;:889,&quot;startTimeUnixNano&quot;:1680198105817400000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStandardRisk&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1437,&quot;min&quot;:1437,&quot;max&quot;:1437,&quot;startTimeUnixNano&quot;:1680198106290000100,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getOverpriviledgedIdentity&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1401,&quot;min&quot;:1401,&quot;max&quot;:1401,&quot;startTimeUnixNano&quot;:1680198106331600100,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getLateralMovementRollup&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1485,&quot;min&quot;:1485,&quot;max&quot;:1485,&quot;startTimeUnixNano&quot;:1680198106413000000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;topInsights&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:446,&quot;min&quot;:446,&quot;max&quot;:446,&quot;startTimeUnixNano&quot;:1680198119847300000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;networkCounts&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:450,&quot;min&quot;:450,&quot;max&quot;:450,&quot;startTimeUnixNano&quot;:1680198119849400000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TopFiveIssues&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:458,&quot;min&quot;:458,&quot;max&quot;:458,&quot;startTimeUnixNano&quot;:1680198119859300000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getFamilyRollupQuery&quot;}}],&quot;bucketCounts&quot;:[0,1,4,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:5,&quot;sum&quot;:3621,&quot;min&quot;:476,&quot;max&quot;:934,&quot;startTimeUnixNano&quot;:1680198119929800000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getOtherIssues&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:496,&quot;min&quot;:496,&quot;max&quot;:496,&quot;startTimeUnixNano&quot;:1680198119950800100,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getEncryption&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:599,&quot;min&quot;:599,&quot;max&quot;:599,&quot;startTimeUnixNano&quot;:1680198120051600100,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStandardRisk&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:975,&quot;min&quot;:975,&quot;max&quot;:975,&quot;startTimeUnixNano&quot;:1680198120375400000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getExposedResources&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:925,&quot;min&quot;:925,&quot;max&quot;:925,&quot;startTimeUnixNano&quot;:1680198120379000000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getRecentChanges&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:929,&quot;min&quot;:929,&quot;max&quot;:929,&quot;startTimeUnixNano&quot;:1680198120383200000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getUnused&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:932,&quot;min&quot;:932,&quot;max&quot;:932,&quot;startTimeUnixNano&quot;:1680198120386800000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getDataCountsForCloud&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:188,&quot;min&quot;:188,&quot;max&quot;:188,&quot;startTimeUnixNano&quot;:1680198135200300000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getDataCounts&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:224,&quot;min&quot;:224,&quot;max&quot;:224,&quot;startTimeUnixNano&quot;:1680198135234300000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;topInsights&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:564,&quot;min&quot;:564,&quot;max&quot;:564,&quot;startTimeUnixNano&quot;:1680198135575100000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getOtherIssues&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:513,&quot;min&quot;:513,&quot;max&quot;:513,&quot;startTimeUnixNano&quot;:1680198135579100000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStandardRisk&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:576,&quot;min&quot;:576,&quot;max&quot;:576,&quot;startTimeUnixNano&quot;:1680198135586900000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getFamilyRollupQuery&quot;}}],&quot;bucketCounts&quot;:[0,0,3,2,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:5,&quot;sum&quot;:4264,&quot;min&quot;:542,&quot;max&quot;:1041,&quot;startTimeUnixNano&quot;:1680198135606800100,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getKeyAndCert&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:574,&quot;min&quot;:574,&quot;max&quot;:574,&quot;startTimeUnixNano&quot;:1680198135639300000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getClassification&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:578,&quot;min&quot;:578,&quot;max&quot;:578,&quot;startTimeUnixNano&quot;:1680198135642500000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TopFiveIssues&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:688,&quot;min&quot;:688,&quot;max&quot;:688,&quot;startTimeUnixNano&quot;:1680198135699000000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAccess&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:688,&quot;min&quot;:688,&quot;max&quot;:688,&quot;startTimeUnixNano&quot;:1680198135753000000,&quot;timeUnixNano&quot;:1680198154839300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getEncryptionKeys&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1035,&quot;min&quot;:1035,&quot;max&quot;:1035,&quot;startTimeUnixNano&quot;:1680198136099700000,&quot;timeUnixNano&quot;:1680198154839300000}]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.newroute&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;newtab_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:56,&quot;min&quot;:56,&quot;max&quot;:56,&quot;startTimeUnixNano&quot;:1680198066558000000,&quot;timeUnixNano&quot;:1680198154839300000}]}},{&quot;name&quot;:&quot;newroute_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[]}}]}]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v1/metrics</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="stage11733927_06_Fundamental" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Fundamental_T01_fundamentalCounts" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;fundamentalCounts&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;keys&quot;:[&quot;Cloud&quot;,&quot;Label&quot;,&quot;Type&quot;],&quot;labels&quot;:[&quot;Account&quot;,&quot;Audit&quot;,&quot;EventStream&quot;,&quot;Compute&quot;]}},&quot;query&quot;:&quot;query fundamentalCounts($filters: GroupedQueryFilter!) {\n  GroupedQuery(where: $filters) {\n    items {\n      value\n      count\n      hasGroupedResult {\n        key\n        items {\n          value\n          count\n          hasGroupedResult {\n            key\n            items {\n              value\n              count\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">f0d75444d1eee3cc467cb1caddb6a286</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:1e37-4f76-82f7-b33b58ff17a8/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">46cce04f4fd90532</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">f0d75444d1eee3cc467cb1caddb6a286-46cce04f4fd90532-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">fundamentalCounts</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Fundamental_T02_getStandardRisk" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getStandardRisk&quot;,&quot;variables&quot;:{&quot;rollupFilters&quot;:{&quot;standardSrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::Standard/273387a5-53c1-4a38-8f97-7b200235069f&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;}},&quot;trendFilters&quot;:{&quot;standardSrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::Standard/273387a5-53c1-4a38-8f97-7b200235069f&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}}},&quot;query&quot;:&quot;query getStandardRisk($rollupFilters: TicketRollupFilter!, $trendFilters: TicketTrendsFilter!) {\n  overall: TicketRollups(\n    where: $rollupFilters\n    includeRollup: {standardSrn: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      riskScoreNumeric\n      riskScoreDescription\n      __typename\n    }\n    __typename\n  }\n  trend: TicketTrendsV2(\n    where: $trendFilters\n    granularity: {granularity: DAY}\n    type: {type: RISK_LEVELS}\n  ) {\n    items(includeRisk: true) {\n      riskLevel\n      dateTime\n      __typename\n    }\n    __typename\n  }\n  trendChange: TicketPercentageIncrease(where: $trendFilters) {\n    isValid\n    riskChange\n    percentageChange(includeRisk: true)\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">f0d75444d1eee3cc467cb1caddb6a286</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:45f5-41aa-9a68-36b7c213885e/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">2f26acf07bc21c61</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">f0d75444d1eee3cc467cb1caddb6a286-2f26acf07bc21c61-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getStandardRisk</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Fundamental_T03_topInsights" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;topInsights&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;standardSrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::Standard/273387a5-53c1-4a38-8f97-7b200235069f&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]}}},&quot;query&quot;:&quot;query topInsights($filters: TopInsightsFilter) {\n  TopInsights(where: $filters) {\n    items {\n      insightType\n      topControlsByFamily {\n        family\n        standardFamily {\n          name\n          containedBy {\n            items {\n              name\n              srn\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        issues_perc\n        family_risk\n        controls {\n          control\n          score_improvement\n          standardControl {\n            name\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">f0d75444d1eee3cc467cb1caddb6a286</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:d3f1-4330-a382-2cf9cb8ef793/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">639392e006d00391</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">f0d75444d1eee3cc467cb1caddb6a286-639392e006d00391-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">topInsights</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Fundamental_T04_TopFiveIssues" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;TopFiveIssues&quot;,&quot;variables&quot;:{&quot;filter&quot;:{&quot;standardSrn&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:supersonrai::Standard/273387a5-53c1-4a38-8f97-7b200235069f&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]}}},&quot;query&quot;:&quot;query TopFiveIssues($filter: TicketsFilter!) {\n  Tickets(where: $filter) {\n    items(\n      limit: 5\n      orderBy: [{severityNumeric: {order: DESC, precedence: 2}}, {srn: {order: DESC, precedence: 1}}]\n      includeRisk: true\n    ) {\n      srn\n      title\n      templatedTitle\n      severityCategory\n      account\n      resourceName\n      resourceType\n      description\n      ticketKey\n      resourceSRN\n      isOperationalized\n      status\n      swimlaneSRNs\n      createdBy\n      policy {\n        srn\n        description\n        mappedBy {\n          items {\n            containedBy {\n              items {\n                srn\n                name\n                containedBy {\n                  items {\n                    srn\n                    name\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">f0d75444d1eee3cc467cb1caddb6a286</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:067e-44cb-8425-c28e08e29f43/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">b7d3fce905afade0</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">f0d75444d1eee3cc467cb1caddb6a286-b7d3fce905afade0-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">TopFiveIssues</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Fundamental_T05_getAuditLoggingQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getAuditLoggingQuery&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;standardFamilySrn&quot;:{&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/3283cb79-f4ce-46f3-a211-17d8da592c58&quot;},&quot;standardControlSrn&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;resourceType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;resourceTypeFriendlyName&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;cloudType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]}}},&quot;query&quot;:&quot;query getAuditLoggingQuery($filters: TicketRollupFilter!) {\n  TicketRollups(\n    where: $filters\n    includeRollup: {swimlaneSrn: true, environment: true, status: true}\n  ) {\n    items(\n      orderBy: {resourceType: {order: ASC, precedence: 1}, standardControlSrn: {order: ASC, precedence: 2}}\n      includeRisk: true\n    ) {\n      count\n      cloudType\n      resourceType\n      resourceTypeFriendlyName\n      standardControlSrn\n      controlPolicyTitle\n      standardControl {\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">f0d75444d1eee3cc467cb1caddb6a286</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:3af7-4ba6-9bb5-55402944ef07/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">67e6bdf2c65e1c4a</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">f0d75444d1eee3cc467cb1caddb6a286-67e6bdf2c65e1c4a-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getAuditLoggingQuery</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Fundamental_T06_getFamilyRollupQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFamilyRollupQuery&quot;,&quot;variables&quot;:{&quot;rollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/3283cb79-f4ce-46f3-a211-17d8da592c58&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;}},&quot;policyCountRollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/3283cb79-f4ce-46f3-a211-17d8da592c58&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;firstSeen&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}},&quot;trendFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/3283cb79-f4ce-46f3-a211-17d8da592c58&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}}},&quot;query&quot;:&quot;query getFamilyRollupQuery($rollupFilters: TicketRollupFilter!, $trendFilters: TicketTrendsFilter!, $policyCountRollupFilters: TicketRollupFilter!) {\n  policyCount: TicketRollups(\n    where: $policyCountRollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      controlPolicyTitle\n      __typename\n    }\n    __typename\n  }\n  overall: TicketRollups(\n    where: $rollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      riskScoreDescription\n      __typename\n    }\n    __typename\n  }\n  trend: TicketPercentageIncrease(where: $trendFilters) {\n    isValid\n    countChange\n    percentageChange(includeRisk: true)\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">f0d75444d1eee3cc467cb1caddb6a286</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:ca88-4661-830a-8fd5a42170ef/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">3edb6743c8b7bad8</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">f0d75444d1eee3cc467cb1caddb6a286-3edb6743c8b7bad8-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getFamilyRollupQuery</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Fundamental_T07_getRecentChanges" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getRecentChanges&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;standardFamilySrn&quot;:{&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/e93a6872-b584-4cb1-9f47-9bf2048a328a&quot;},&quot;standardControlSrn&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;resourceType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;resourceName&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;severityCategory&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;account&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;ticketKey&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;cloudType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]}}},&quot;query&quot;:&quot;query getRecentChanges($filters: TicketRollupFilter!) {\n  TicketRollups(\n    where: $filters\n    includeRollup: {swimlaneSrn: true, environment: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      cloudType\n      resourceType\n      standardControlSrn\n      controlPolicyTitle\n      severityCategory\n      account\n      resourceName\n      ticketKey\n      resourceSRN\n      status\n      cloudType\n      swimlaneSrn\n      standardControl {\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">f0d75444d1eee3cc467cb1caddb6a286</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:1290-417d-afe1-35fa9d0fa458/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">a8014cd01e4d9826</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">f0d75444d1eee3cc467cb1caddb6a286-a8014cd01e4d9826-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getRecentChanges</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Fundamental_T08_getFamilyRollupQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFamilyRollupQuery&quot;,&quot;variables&quot;:{&quot;rollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/e93a6872-b584-4cb1-9f47-9bf2048a328a&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;}},&quot;policyCountRollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/e93a6872-b584-4cb1-9f47-9bf2048a328a&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;firstSeen&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}},&quot;trendFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/e93a6872-b584-4cb1-9f47-9bf2048a328a&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}}},&quot;query&quot;:&quot;query getFamilyRollupQuery($rollupFilters: TicketRollupFilter!, $trendFilters: TicketTrendsFilter!, $policyCountRollupFilters: TicketRollupFilter!) {\n  policyCount: TicketRollups(\n    where: $policyCountRollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      controlPolicyTitle\n      __typename\n    }\n    __typename\n  }\n  overall: TicketRollups(\n    where: $rollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      riskScoreDescription\n      __typename\n    }\n    __typename\n  }\n  trend: TicketPercentageIncrease(where: $trendFilters) {\n    isValid\n    countChange\n    percentageChange(includeRisk: true)\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">f0d75444d1eee3cc467cb1caddb6a286</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:6647-4cdd-8550-e2c7a30cf63b/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">fa945a53af6a9785</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">f0d75444d1eee3cc467cb1caddb6a286-fa945a53af6a9785-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getFamilyRollupQuery</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Fundamental_T09_getPlatform" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getPlatform&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;standardFamilySrn&quot;:{&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/92bc6294-7877-4509-acd0-006a3db9a605&quot;},&quot;standardControlSrn&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;resourceType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;resourceTypeFriendlyName&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;cloudType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]}}},&quot;query&quot;:&quot;query getPlatform($filters: TicketRollupFilter!) {\n  TicketRollups(\n    where: $filters\n    includeRollup: {swimlaneSrn: true, environment: true, status: true}\n  ) {\n    items(\n      orderBy: {resourceType: {order: ASC, precedence: 1}, standardControlSrn: {order: ASC, precedence: 2}}\n      includeRisk: true\n    ) {\n      count\n      cloudType\n      resourceType\n      resourceTypeFriendlyName\n      standardControlSrn\n      controlPolicyTitle\n      standardControl {\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">f0d75444d1eee3cc467cb1caddb6a286</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:666b-4742-bbbc-57a6b8bd33da/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">5a135a323bcfdacf</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">f0d75444d1eee3cc467cb1caddb6a286-5a135a323bcfdacf-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getPlatform</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Fundamental_T10_getFamilyRollupQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFamilyRollupQuery&quot;,&quot;variables&quot;:{&quot;rollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/92bc6294-7877-4509-acd0-006a3db9a605&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;}},&quot;policyCountRollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/92bc6294-7877-4509-acd0-006a3db9a605&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;firstSeen&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}},&quot;trendFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/92bc6294-7877-4509-acd0-006a3db9a605&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}}},&quot;query&quot;:&quot;query getFamilyRollupQuery($rollupFilters: TicketRollupFilter!, $trendFilters: TicketTrendsFilter!, $policyCountRollupFilters: TicketRollupFilter!) {\n  policyCount: TicketRollups(\n    where: $policyCountRollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      controlPolicyTitle\n      __typename\n    }\n    __typename\n  }\n  overall: TicketRollups(\n    where: $rollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      riskScoreDescription\n      __typename\n    }\n    __typename\n  }\n  trend: TicketPercentageIncrease(where: $trendFilters) {\n    isValid\n    countChange\n    percentageChange(includeRisk: true)\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">f0d75444d1eee3cc467cb1caddb6a286</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:a0a8-4869-91dd-da7362910063/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">c957fdb8be12f7cb</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">f0d75444d1eee3cc467cb1caddb6a286-c957fdb8be12f7cb-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getFamilyRollupQuery</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Fundamental_T11_getDatabasePosture" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getDatabasePosture&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;standardFamilySrn&quot;:{&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/3fbeee56-97c5-4faf-8665-7b792f474f53&quot;},&quot;standardControlSrn&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;resourceType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;resourceTypeFriendlyName&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;cloudType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]}}},&quot;query&quot;:&quot;query getDatabasePosture($filters: TicketRollupFilter!) {\n  TicketRollups(\n    where: $filters\n    includeRollup: {swimlaneSrn: true, environment: true, status: true}\n  ) {\n    items(\n      orderBy: {resourceType: {order: ASC, precedence: 1}, standardControlSrn: {order: ASC, precedence: 2}}\n      includeRisk: true\n    ) {\n      count\n      cloudType\n      resourceType\n      resourceTypeFriendlyName\n      standardControlSrn\n      controlPolicyTitle\n      standardControl {\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">f0d75444d1eee3cc467cb1caddb6a286</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:0bab-4113-a1c9-51fd83da4e7e/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">f929f38343bf3793</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">f0d75444d1eee3cc467cb1caddb6a286-f929f38343bf3793-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getDatabasePosture</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Fundamental_T12_getFamilyRollupQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFamilyRollupQuery&quot;,&quot;variables&quot;:{&quot;rollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/3fbeee56-97c5-4faf-8665-7b792f474f53&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;}},&quot;policyCountRollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/3fbeee56-97c5-4faf-8665-7b792f474f53&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;firstSeen&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}},&quot;trendFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/3fbeee56-97c5-4faf-8665-7b792f474f53&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}}},&quot;query&quot;:&quot;query getFamilyRollupQuery($rollupFilters: TicketRollupFilter!, $trendFilters: TicketTrendsFilter!, $policyCountRollupFilters: TicketRollupFilter!) {\n  policyCount: TicketRollups(\n    where: $policyCountRollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      controlPolicyTitle\n      __typename\n    }\n    __typename\n  }\n  overall: TicketRollups(\n    where: $rollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      riskScoreDescription\n      __typename\n    }\n    __typename\n  }\n  trend: TicketPercentageIncrease(where: $trendFilters) {\n    isValid\n    countChange\n    percentageChange(includeRisk: true)\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">f0d75444d1eee3cc467cb1caddb6a286</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:854b-492d-86e9-460de43c39df/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">8556155cd76fc403</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">f0d75444d1eee3cc467cb1caddb6a286-8556155cd76fc403-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getFamilyRollupQuery</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Fundamental_T13_getIAM" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getIAM&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;standardFamilySrn&quot;:{&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/e58fd5ec-feec-4dae-ad11-1b9414baf3df&quot;},&quot;standardControlSrn&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;ticketKey&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;serviceType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;serviceTypeFriendlyName&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;cloudType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]}}},&quot;query&quot;:&quot;query getIAM($filters: TicketRollupFilter!) {\n  TicketRollups(\n    where: $filters\n    includeRollup: {swimlaneSrn: true, environment: true, status: true}\n  ) {\n    items(\n      orderBy: {standardControlSrn: {order: ASC, precedence: 1}}\n      includeRisk: true\n    ) {\n      count\n      cloudType\n      standardControlSrn\n      standardControl {\n        name\n        __typename\n      }\n      controlPolicyTitle\n      serviceType\n      serviceTypeFriendlyName\n      ticketKey\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">f0d75444d1eee3cc467cb1caddb6a286</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:5e3d-408c-bd01-ce030a17a1da/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">ee29100c6a9fd9aa</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">f0d75444d1eee3cc467cb1caddb6a286-ee29100c6a9fd9aa-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getIAM</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Fundamental_T14_getFamilyRollupQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getFamilyRollupQuery&quot;,&quot;variables&quot;:{&quot;rollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/e58fd5ec-feec-4dae-ad11-1b9414baf3df&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;}},&quot;policyCountRollupFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/e58fd5ec-feec-4dae-ad11-1b9414baf3df&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;firstSeen&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}},&quot;trendFilters&quot;:{&quot;standardFamilySrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;srn:supersonrai::StandardFamily/e58fd5ec-feec-4dae-ad11-1b9414baf3df&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;NOT_IN_LIST&quot;,&quot;values&quot;:[&quot;RISK_ACCEPTED&quot;,&quot;SNOOZED&quot;,&quot;CLOSED&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}}},&quot;query&quot;:&quot;query getFamilyRollupQuery($rollupFilters: TicketRollupFilter!, $trendFilters: TicketTrendsFilter!, $policyCountRollupFilters: TicketRollupFilter!) {\n  policyCount: TicketRollups(\n    where: $policyCountRollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      controlPolicyTitle\n      __typename\n    }\n    __typename\n  }\n  overall: TicketRollups(\n    where: $rollupFilters\n    includeRollup: {environment: true, cloudType: true, swimlaneSrns: true, account: true, status: true}\n  ) {\n    items(includeRisk: true) {\n      count\n      riskScoreDescription\n      __typename\n    }\n    __typename\n  }\n  trend: TicketPercentageIncrease(where: $trendFilters) {\n    isValid\n    countChange\n    percentageChange(includeRisk: true)\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">f0d75444d1eee3cc467cb1caddb6a286</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:d7bd-4a79-ba89-1362493fe75e/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">3aead8fd7065731b</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">f0d75444d1eee3cc467cb1caddb6a286-3aead8fd7065731b-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getFamilyRollupQuery</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="stage11733927_07_WorkloadProtection" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="WorkloadProtection_T01_vulnerabilities_group_by_vm" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;vulnerabilities_group_by_vm&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;findingCategory&quot;:{&quot;value&quot;:&quot;Vulnerability&quot;}},&quot;limit&quot;:10,&quot;offset&quot;:0},&quot;query&quot;:&quot;query vulnerabilities_group_by_vm($filters: SecurityFindingFilter, $offset: Int, $limit: Int) {\n  SecurityFindings(where: $filters, groupBy: [resourceSrn]) {\n    items(\n      limit: $limit\n      offset: $offset\n      orderBy: [{riskIndex: DESC}, {resourceSrn: DESC}]\n    ) {\n      resourceSrn\n      observedAt\n      environments\n      riskIndex\n      riskSeverity\n      resourceCloud\n      resourceName\n      resourceAccount\n      resourceAccountName\n      targetScannerTypes\n      containerImage\n      containerImageTag\n      bySeverityCounts: resourceSecurityFindings(\n        by: [resourceSrn]\n        where: {findingCategory: {value: Vulnerability}}\n        groupBy: [findingRiskSeverity]\n      ) {\n        items {\n          findingRiskSeverity\n          count @uniq(field: \&quot;findingId\&quot;)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">b5eb9335524cd273aca2b0e64d385cd9</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:53fa-4b33-90fc-2b74e9ac0a1a/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">5405ef14b3f76f8e</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">b5eb9335524cd273aca2b0e64d385cd9-5405ef14b3f76f8e-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">vulnerabilities_group_by_vm</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="WorkloadProtection_T02_vulnerabilities_group_by_vm_count" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;vulnerabilities_group_by_vm_count&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;findingCategory&quot;:{&quot;value&quot;:&quot;Vulnerability&quot;}}},&quot;query&quot;:&quot;query vulnerabilities_group_by_vm_count($filters: SecurityFindingFilter) {\n  SecurityFindings(where: $filters, groupBy: [resourceSrn]) {\n    count\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">2a2b731d3e04ac00d3120c2d5373f74d</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:4426-4205-b091-6b00246cdbd3/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">b9728d602d26fe72</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">2a2b731d3e04ac00d3120c2d5373f74d-b9728d602d26fe72-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">vulnerabilities_group_by_vm_count</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="WorkloadProtection_T03_vulnerabilities_by_published_date" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;vulnerabilities_by_published_date&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;computeType&quot;:{&quot;value&quot;:&quot;VM&quot;},&quot;findingCategory&quot;:{&quot;value&quot;:&quot;Vulnerability&quot;}}},&quot;query&quot;:&quot;query vulnerabilities_by_published_date($filters: SecurityFindingFilter) {\n  SecurityFindingsPublished(\n    where: $filters\n    groupBy: [findingPublishedDate, findingRiskSeverity]\n    granularity: DAY\n  ) {\n    items(limit: -1, orderBy: [{findingPublishedDate: DESC}]) {\n      count\n      findingPublishedDate\n      findingRiskSeverity\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">04cf4aba150fd7aae97cbf9eb0936aa7</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:30c5-4b76-b6d5-0558bffba673/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">ed62e25ec41c58cf</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">04cf4aba150fd7aae97cbf9eb0936aa7-ed62e25ec41c58cf-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">vulnerabilities_by_published_date</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="WorkloadProtection_T04_vulnerabilities_by_time" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;vulnerabilities_by_time&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;computeType&quot;:{&quot;value&quot;:&quot;VM&quot;},&quot;findingCategory&quot;:{&quot;value&quot;:&quot;Vulnerability&quot;},&quot;observedAt&quot;:{&quot;op&quot;:&quot;GTE&quot;,&quot;value&quot;:&quot;2023-03-16T00:00:00.000Z&quot;}}},&quot;query&quot;:&quot;query vulnerabilities_by_time($filters: SecurityFindingFilter) {\n  SecurityFindings(\n    view: raw\n    groupBy: [observedAt, findingRiskSeverity]\n    where: $filters\n    granularity: DAY\n  ) {\n    items(limit: -1, orderBy: [{observedAt: DESC}, {findingRiskSeverity: DESC}]) {\n      count @uniq(field: \&quot;findingId\&quot;)\n      findingRiskSeverity\n      observedAt\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">fd9ad0c7ea4168fdf5d380afb03b9834</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:2403-43bb-8efb-2070f2be9bd9/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">07566c1cdd27e84a</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">fd9ad0c7ea4168fdf5d380afb03b9834-07566c1cdd27e84a-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">vulnerabilities_by_time</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://front-end-collector-web.s.sonraisecurity.com/v1/metrics" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;resourceMetrics&quot;:[{&quot;resource&quot;:{&quot;attributes&quot;:[],&quot;droppedAttributesCount&quot;:0},&quot;scopeMetrics&quot;:[{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-document-load&quot;,&quot;version&quot;:&quot;0.27.1&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-fetch&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-long-task&quot;,&quot;version&quot;:&quot;0.30.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-xml-http-request&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;app_layout_error_boundary_errors_count&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;sum&quot;:{&quot;aggregationTemporality&quot;:2,&quot;isMonotonic&quot;:true,&quot;dataPoints&quot;:[]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.graphql&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;graphql_request_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiUsers&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:509,&quot;min&quot;:509,&quot;max&quot;:509,&quot;startTimeUnixNano&quot;:1680198065344100000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAllMaturityLevels&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:510,&quot;min&quot;:510,&quot;max&quot;:510,&quot;startTimeUnixNano&quot;:1680198065346600000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;currentUser&quot;}}],&quot;bucketCounts&quot;:[0,0,2,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:2,&quot;sum&quot;:1048,&quot;min&quot;:516,&quot;max&quot;:532,&quot;startTimeUnixNano&quot;:1680198065349300000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAllEnvironments&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:522,&quot;min&quot;:522,&quot;max&quot;:522,&quot;startTimeUnixNano&quot;:1680198065358000000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAllSecurityAreas&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:523,&quot;min&quot;:523,&quot;max&quot;:523,&quot;startTimeUnixNano&quot;:1680198065359700000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiOrgConfig&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:523,&quot;min&quot;:523,&quot;max&quot;:523,&quot;startTimeUnixNano&quot;:1680198065360500000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiUIConfig&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:531,&quot;min&quot;:531,&quot;max&quot;:531,&quot;startTimeUnixNano&quot;:1680198065366700000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getCollectorConfigurations&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:572,&quot;min&quot;:572,&quot;max&quot;:572,&quot;startTimeUnixNano&quot;:1680198065409600000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;get_all_roles&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:130,&quot;min&quot;:130,&quot;max&quot;:130,&quot;startTimeUnixNano&quot;:1680198065485800000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getControlFrameworks&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:319,&quot;min&quot;:319,&quot;max&quot;:319,&quot;startTimeUnixNano&quot;:1680198065676900000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;IntrospectionQuery&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:853,&quot;min&quot;:853,&quot;max&quot;:853,&quot;startTimeUnixNano&quot;:1680198066047400000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSavedSearches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:812,&quot;min&quot;:812,&quot;max&quot;:812,&quot;startTimeUnixNano&quot;:1680198066167600000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;saveUserProfile&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:876,&quot;min&quot;:876,&quot;max&quot;:876,&quot;startTimeUnixNano&quot;:1680198066241900000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getResourceLabels&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:903,&quot;min&quot;:903,&quot;max&quot;:903,&quot;startTimeUnixNano&quot;:1680198066262700000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAccounts&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1009,&quot;min&quot;:1009,&quot;max&quot;:1009,&quot;startTimeUnixNano&quot;:1680198066366100000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSubscriptions&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1011,&quot;min&quot;:1011,&quot;max&quot;:1011,&quot;startTimeUnixNano&quot;:1680198066368000000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchSwimlanes&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1110,&quot;min&quot;:1110,&quot;max&quot;:1110,&quot;startTimeUnixNano&quot;:1680198066467200000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;sonrai_user&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:228,&quot;min&quot;:228,&quot;max&quot;:228,&quot;startTimeUnixNano&quot;:1680198066487000000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiSeaches&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1221,&quot;min&quot;:1221,&quot;max&quot;:1221,&quot;startTimeUnixNano&quot;:1680198066576600000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getReportPoll&quot;}}],&quot;bucketCounts&quot;:[0,2,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:2,&quot;sum&quot;:609,&quot;min&quot;:228,&quot;max&quot;:381,&quot;startTimeUnixNano&quot;:1680198066642900000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getReportsInit&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:147,&quot;min&quot;:147,&quot;max&quot;:147,&quot;startTimeUnixNano&quot;:1680198066650600000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TopFiveIssues&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:101,&quot;min&quot;:101,&quot;max&quot;:101,&quot;startTimeUnixNano&quot;:1680198066656900000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getServiceTypes&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:405,&quot;min&quot;:405,&quot;max&quot;:405,&quot;startTimeUnixNano&quot;:1680198066668400000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;licensing&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:168,&quot;min&quot;:168,&quot;max&quot;:168,&quot;startTimeUnixNano&quot;:1680198066722500000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getDataProtectionInsights&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:269,&quot;min&quot;:269,&quot;max&quot;:269,&quot;startTimeUnixNano&quot;:1680198066893400000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getNetworkInsights&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:285,&quot;min&quot;:285,&quot;max&quot;:285,&quot;startTimeUnixNano&quot;:1680198066911200000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getFundamentalInsights&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:325,&quot;min&quot;:325,&quot;max&quot;:325,&quot;startTimeUnixNano&quot;:1680198066950500000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getIdentityInsights&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:358,&quot;min&quot;:358,&quot;max&quot;:358,&quot;startTimeUnixNano&quot;:1680198066982000000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getFamilyRollupQuery&quot;}}],&quot;bucketCounts&quot;:[0,1,1,3,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:5,&quot;sum&quot;:5355,&quot;min&quot;:379,&quot;max&quot;:1374,&quot;startTimeUnixNano&quot;:1680198067005900000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;vulnerabilities_by_time&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:383,&quot;min&quot;:383,&quot;max&quot;:383,&quot;startTimeUnixNano&quot;:1680198067011700000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchClouds&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:478,&quot;min&quot;:478,&quot;max&quot;:478,&quot;startTimeUnixNano&quot;:1680198067035200000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSavedSearches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:899,&quot;min&quot;:899,&quot;max&quot;:899,&quot;startTimeUnixNano&quot;:1680198067139900000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getActiveThreat&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:599,&quot;min&quot;:599,&quot;max&quot;:599,&quot;startTimeUnixNano&quot;:1680198067227900000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;top5ResourcesAtRisk&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:785,&quot;min&quot;:785,&quot;max&quot;:785,&quot;startTimeUnixNano&quot;:1680198067412600000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;top5Vulnerabilities&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:789,&quot;min&quot;:789,&quot;max&quot;:789,&quot;startTimeUnixNano&quot;:1680198067416700000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;vulnerabilitiesByPublishedDate&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:792,&quot;min&quot;:792,&quot;max&quot;:792,&quot;startTimeUnixNano&quot;:1680198067419100000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;InsightsFindingsTrends&quot;}}],&quot;bucketCounts&quot;:[0,0,0,2,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:2,&quot;sum&quot;:2852,&quot;min&quot;:1416,&quot;max&quot;:1436,&quot;startTimeUnixNano&quot;:1680198067972600000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStandardRisk&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1472,&quot;min&quot;:1472,&quot;max&quot;:1472,&quot;startTimeUnixNano&quot;:1680198068027400000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;topInsights&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1607,&quot;min&quot;:1607,&quot;max&quot;:1607,&quot;startTimeUnixNano&quot;:1680198068162700000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getIdentityCounts&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:435,&quot;min&quot;:435,&quot;max&quot;:435,&quot;startTimeUnixNano&quot;:1680198105286500000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAccessKeys&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:512,&quot;min&quot;:512,&quot;max&quot;:512,&quot;startTimeUnixNano&quot;:1680198105442300000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getCrossAccountTrustExposure&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:518,&quot;min&quot;:518,&quot;max&quot;:518,&quot;startTimeUnixNano&quot;:1680198105446700000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getFamilyRollupQuery&quot;}}],&quot;bucketCounts&quot;:[0,0,2,5,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:7,&quot;sum&quot;:8184,&quot;min&quot;:526,&quot;max&quot;:1479,&quot;startTimeUnixNano&quot;:1680198105455900000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TopFiveRiskyIdentities&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:575,&quot;min&quot;:575,&quot;max&quot;:575,&quot;startTimeUnixNano&quot;:1680198105506600000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TopFiveIssues&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:838,&quot;min&quot;:838,&quot;max&quot;:838,&quot;startTimeUnixNano&quot;:1680198105690400000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;topInsights&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:913,&quot;min&quot;:913,&quot;max&quot;:913,&quot;startTimeUnixNano&quot;:1680198105765100000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getOtherIssues&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:844,&quot;min&quot;:844,&quot;max&quot;:844,&quot;startTimeUnixNano&quot;:1680198105776100000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getUnusedIdentity&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:889,&quot;min&quot;:889,&quot;max&quot;:889,&quot;startTimeUnixNano&quot;:1680198105817400000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStandardRisk&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1437,&quot;min&quot;:1437,&quot;max&quot;:1437,&quot;startTimeUnixNano&quot;:1680198106290000100,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getOverpriviledgedIdentity&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1401,&quot;min&quot;:1401,&quot;max&quot;:1401,&quot;startTimeUnixNano&quot;:1680198106331600100,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getLateralMovementRollup&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1485,&quot;min&quot;:1485,&quot;max&quot;:1485,&quot;startTimeUnixNano&quot;:1680198106413000000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;topInsights&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:446,&quot;min&quot;:446,&quot;max&quot;:446,&quot;startTimeUnixNano&quot;:1680198119847300000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;networkCounts&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:450,&quot;min&quot;:450,&quot;max&quot;:450,&quot;startTimeUnixNano&quot;:1680198119849400000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TopFiveIssues&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:458,&quot;min&quot;:458,&quot;max&quot;:458,&quot;startTimeUnixNano&quot;:1680198119859300000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getFamilyRollupQuery&quot;}}],&quot;bucketCounts&quot;:[0,1,4,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:5,&quot;sum&quot;:3621,&quot;min&quot;:476,&quot;max&quot;:934,&quot;startTimeUnixNano&quot;:1680198119929800000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getOtherIssues&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:496,&quot;min&quot;:496,&quot;max&quot;:496,&quot;startTimeUnixNano&quot;:1680198119950800100,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getEncryption&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:599,&quot;min&quot;:599,&quot;max&quot;:599,&quot;startTimeUnixNano&quot;:1680198120051600100,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStandardRisk&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:975,&quot;min&quot;:975,&quot;max&quot;:975,&quot;startTimeUnixNano&quot;:1680198120375400000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getExposedResources&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:925,&quot;min&quot;:925,&quot;max&quot;:925,&quot;startTimeUnixNano&quot;:1680198120379000000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getRecentChanges&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:929,&quot;min&quot;:929,&quot;max&quot;:929,&quot;startTimeUnixNano&quot;:1680198120383200000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getUnused&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:932,&quot;min&quot;:932,&quot;max&quot;:932,&quot;startTimeUnixNano&quot;:1680198120386800000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getDataCountsForCloud&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:188,&quot;min&quot;:188,&quot;max&quot;:188,&quot;startTimeUnixNano&quot;:1680198135200300000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getDataCounts&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:224,&quot;min&quot;:224,&quot;max&quot;:224,&quot;startTimeUnixNano&quot;:1680198135234300000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;topInsights&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:564,&quot;min&quot;:564,&quot;max&quot;:564,&quot;startTimeUnixNano&quot;:1680198135575100000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getOtherIssues&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:513,&quot;min&quot;:513,&quot;max&quot;:513,&quot;startTimeUnixNano&quot;:1680198135579100000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStandardRisk&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:576,&quot;min&quot;:576,&quot;max&quot;:576,&quot;startTimeUnixNano&quot;:1680198135586900000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getFamilyRollupQuery&quot;}}],&quot;bucketCounts&quot;:[0,0,3,2,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:5,&quot;sum&quot;:4264,&quot;min&quot;:542,&quot;max&quot;:1041,&quot;startTimeUnixNano&quot;:1680198135606800100,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getKeyAndCert&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:574,&quot;min&quot;:574,&quot;max&quot;:574,&quot;startTimeUnixNano&quot;:1680198135639300000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getClassification&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:578,&quot;min&quot;:578,&quot;max&quot;:578,&quot;startTimeUnixNano&quot;:1680198135642500000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TopFiveIssues&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:688,&quot;min&quot;:688,&quot;max&quot;:688,&quot;startTimeUnixNano&quot;:1680198135699000000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAccess&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:688,&quot;min&quot;:688,&quot;max&quot;:688,&quot;startTimeUnixNano&quot;:1680198135753000000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getEncryptionKeys&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1035,&quot;min&quot;:1035,&quot;max&quot;:1035,&quot;startTimeUnixNano&quot;:1680198136099700000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fundamentalCounts&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:375,&quot;min&quot;:375,&quot;max&quot;:375,&quot;startTimeUnixNano&quot;:1680198163885600000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;topInsights&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:552,&quot;min&quot;:552,&quot;max&quot;:552,&quot;startTimeUnixNano&quot;:1680198164063500000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TopFiveIssues&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:899,&quot;min&quot;:899,&quot;max&quot;:899,&quot;startTimeUnixNano&quot;:1680198164410800000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getFamilyRollupQuery&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,2,2,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:5,&quot;sum&quot;:13389,&quot;min&quot;:1000,&quot;max&quot;:3448,&quot;startTimeUnixNano&quot;:1680198164586400000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getDatabasePosture&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1006,&quot;min&quot;:1006,&quot;max&quot;:1006,&quot;startTimeUnixNano&quot;:1680198164592800000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getIAM&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1347,&quot;min&quot;:1347,&quot;max&quot;:1347,&quot;startTimeUnixNano&quot;:1680198164933900000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getRecentChanges&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,1,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:2054,&quot;min&quot;:2054,&quot;max&quot;:2054,&quot;startTimeUnixNano&quot;:1680198165639600000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getPlatform&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:3099,&quot;min&quot;:3099,&quot;max&quot;:3099,&quot;startTimeUnixNano&quot;:1680198166685000000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAuditLoggingQuery&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:3137,&quot;min&quot;:3137,&quot;max&quot;:3137,&quot;startTimeUnixNano&quot;:1680198166721900000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStandardRisk&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:4811,&quot;min&quot;:4811,&quot;max&quot;:4811,&quot;startTimeUnixNano&quot;:1680198168322900000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/WorkloadProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;vulnerabilities_group_by_vm_count&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:998,&quot;min&quot;:998,&quot;max&quot;:998,&quot;startTimeUnixNano&quot;:1680198183286900000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/WorkloadProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;vulnerabilities_by_published_date&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:999,&quot;min&quot;:999,&quot;max&quot;:999,&quot;startTimeUnixNano&quot;:1680198183288300000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/WorkloadProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;vulnerabilities_group_by_vm&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1031,&quot;min&quot;:1031,&quot;max&quot;:1031,&quot;startTimeUnixNano&quot;:1680198183319100000,&quot;timeUnixNano&quot;:1680198184842400000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/WorkloadProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;vulnerabilities_by_time&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1518,&quot;min&quot;:1518,&quot;max&quot;:1518,&quot;startTimeUnixNano&quot;:1680198183808800000,&quot;timeUnixNano&quot;:1680198184842400000}]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.newroute&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;newtab_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:56,&quot;min&quot;:56,&quot;max&quot;:56,&quot;startTimeUnixNano&quot;:1680198066558000000,&quot;timeUnixNano&quot;:1680198184842400000}]}},{&quot;name&quot;:&quot;newroute_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[]}}]}]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v1/metrics</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="stage11733927_08_Compliance" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Compliance_T01_fetchStandards" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;fetchStandards&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query fetchStandards {\n  Standards {\n    items(limit: -1) {\n      ...fields\n      contains {\n        items(limit: -1) {\n          ...fields\n          containedBy {\n            items {\n              srn\n              __typename\n            }\n            __typename\n          }\n          contains {\n            items(limit: -1) {\n              ...fields\n              containedBy {\n                items {\n                  srn\n                  __typename\n                }\n                __typename\n              }\n              ... on Standardcontrol {\n                mapsTo {\n                  items(limit: -1) {\n                    srn\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment fields on Standardinterface {\n  name\n  description\n  srn\n  orgID\n  resourceId\n  __typename\n  ... on Standard {\n    color\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">e95cb15be2e0c7a5f97e87009de904b4</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:23e1-400b-87e6-3da587bdf688/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">a5c81ceca253b31d</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">e95cb15be2e0c7a5f97e87009de904b4-a5c81ceca253b31d-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">fetchStandards</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Compliance_T02_getObjectives" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getObjectives&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getObjectives {\n  SonraiObjectives {\n    items {\n      srn\n      resourceId\n      name\n      description\n      createdBy\n      definedControlFrameworks {\n        controlFrameworkSrn\n        controlFrameworkOrder\n        __typename\n      }\n      appliedControlFrameworks {\n        items {\n          srn\n          swimlaneSRNs\n          contains {\n            items {\n              srn\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">e95cb15be2e0c7a5f97e87009de904b4</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="cache-control" elementType="Header">
                  <stringProp name="Header.name">cache-control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">27d607bddecac48f</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:fd3b-4caf-861a-2f4248331e8d/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">e95cb15be2e0c7a5f97e87009de904b4-27d607bddecac48f-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getObjectives</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Compliance_T03_check_if_trends_exist" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;check_if_trends_exist&quot;,&quot;variables&quot;:{&quot;today&quot;:&quot;2023-03-31T00:00&quot;},&quot;query&quot;:&quot;query check_if_trends_exist($today: DateTime) {\n  trendCount: PolicyTrends(\n    where: {dateTime: {op: EQ, value: $today}}\n    groupby: {fields: [\&quot;id\&quot;]}\n  ) {\n    count\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">e95cb15be2e0c7a5f97e87009de904b4</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:b5f0-472a-8a4f-6bf7d07ea303/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">f05697cc4ef884dc</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">e95cb15be2e0c7a5f97e87009de904b4-f05697cc4ef884dc-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">check_if_trends_exist</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Compliance_T04_compliance_issues_by_security_area" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;compliance_issues_by_security_area&quot;,&quot;variables&quot;:{&quot;pastFilters&quot;:{&quot;policyStatus&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;FAILED&quot;]},&quot;securityArea&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:null},&quot;environmentName&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;Production&quot;,&quot;Sensitive Data&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;2023-03-23T17:43:18.010Z&quot;}},&quot;currentFilters&quot;:{&quot;policyStatus&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;FAILED&quot;]},&quot;securityArea&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:null},&quot;environmentName&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;Production&quot;,&quot;Sensitive Data&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;2023-03-31T17:43:18.010Z&quot;}}},&quot;query&quot;:&quot;query compliance_issues_by_security_area($pastFilters: PolicyTrendsFilter, $currentFilters: PolicyTrendsFilter) {\n  current: PolicyTrends(\n    where: $currentFilters\n    groupby: {fields: [\&quot;securityArea\&quot;]}\n  ) {\n    items {\n      failing: count\n      securityArea\n      __typename\n    }\n    __typename\n  }\n  past: PolicyTrends(where: $pastFilters, groupby: {fields: [\&quot;securityArea\&quot;]}) {\n    items {\n      failing: count\n      securityArea\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">e95cb15be2e0c7a5f97e87009de904b4</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:fc22-4bc7-80a4-1374100aadb6/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">08e6686a853bd4e4</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">e95cb15be2e0c7a5f97e87009de904b4-08e6686a853bd4e4-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">compliance_issues_by_security_area</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Compliance_T05_compliance_risk_trend" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;compliance_risk_trend&quot;,&quot;variables&quot;:{&quot;key&quot;:&quot;standardSrn&quot;,&quot;filters&quot;:{&quot;standardSrn&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:null},&quot;policyStatus&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;FAILED&quot;]},&quot;environmentName&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;Production&quot;,&quot;Sensitive Data&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-03-23T17:43:18.010Z&quot;,&quot;2023-03-31T17:43:18.010Z&quot;]}}},&quot;query&quot;:&quot;query compliance_risk_trend($filters: PolicyTrendsFilter, $key: String) {\n  PolicyTrends(where: $filters, groupby: {fields: [$key, \&quot;dateTime\&quot;]}) {\n    items {\n      standardSrn\n      dateTime\n      riskScore\n      standardControlSrn\n      standardFamilySrn\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">e95cb15be2e0c7a5f97e87009de904b4</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:a975-4f34-b033-0696bb611003/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">485b46a997195442</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">e95cb15be2e0c7a5f97e87009de904b4-485b46a997195442-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">compliance_risk_trend</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Compliance_T06_resources_total" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;resources_total&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;swimlaneSRNs&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:stage11733927::Swimlane/6cb632fe-951d-4481-8663-76188ff0024c&quot;,&quot;srn:stage11733927::Swimlane/c87de86d-6448-4312-8141-c67f10ffbc66&quot;,&quot;srn:stage11733927::Swimlane/54346aae-f962-4303-8775-558e376772da&quot;,&quot;srn:stage11733927::Swimlane/632c1e2a-0cf7-4432-b593-4b0c45c082d5&quot;,&quot;srn:stage11733927::Swimlane/e5d5b4dc-4e67-4fd5-999b-a782e1e83878&quot;,&quot;srn:stage11733927::Swimlane/49a44cb4-862b-4598-9ebb-75582b9e1986&quot;,&quot;srn:stage11733927::Swimlane/5861c490-03f2-4ca8-a060-f822e88dd658&quot;,&quot;srn:stage11733927::Swimlane/846176cf-47c2-4d8f-b094-43e1d5f161fc&quot;,&quot;srn:stage11733927::Swimlane/635c2880-ca1d-4434-92a4-c7feaf74ae53&quot;,&quot;srn:stage11733927::Swimlane/4f7e22fa-6c07-41bc-943d-23ad332ddf18&quot;,&quot;srn:stage11733927::Swimlane/c177456e-edcf-4bad-aeac-2e7834afd322&quot;,&quot;srn:stage11733927::Swimlane/be0a8d40-d422-4eb4-a940-d95da8486981&quot;,&quot;srn:stage11733927::Swimlane/0c69d424-e054-45d7-a19f-c9b86f3a2c80&quot;,&quot;srn:stage11733927::Swimlane/9057a678-a9c9-4088-ac95-f42d99e20d45&quot;,&quot;srn:stage11733927::Swimlane/8ffcd427-b034-4080-9feb-74abe4a2bc1a&quot;,&quot;srn:stage11733927::Swimlane/17dce178-87b1-4b25-be32-ce58a03cffd7&quot;,&quot;srn:stage11733927::Swimlane/60b72733-a220-4260-8ed1-66671f59597e&quot;,&quot;srn:stage11733927::Swimlane/798d6f98-48ac-4a71-b704-3765e39d5938&quot;,&quot;srn:stage11733927::Swimlane/7bc365e5-b897-4b58-8753-be85e03573f6&quot;,&quot;srn:stage11733927::Swimlane/7e986fc7-7db9-475c-898b-c666b1c7411a&quot;,&quot;srn:stage11733927::Swimlane/d8db091e-0147-40fe-bef0-08f2f5d172cf&quot;,&quot;srn:stage11733927::Swimlane/a459fece-58ef-49e2-9779-357f876e15e9&quot;,&quot;srn:stage11733927::Swimlane/a6736f91-4891-4e61-b96d-7ca3d9ff25f7&quot;,&quot;srn:stage11733927::Swimlane/1fbc5e7c-64ac-4f4b-a62c-14ebd47a5fde&quot;,&quot;srn:stage11733927::Swimlane/2c9894ff-d4de-4d83-9557-630d70634d8a&quot;,&quot;srn:stage11733927::Swimlane/0fccef66-2e58-4164-ae72-cf6528270022&quot;,&quot;srn:stage11733927::Swimlane/082a0e22-5dad-41ee-b7ab-15e567119797&quot;,&quot;srn:stage11733927::Swimlane/882f219e-e3aa-453e-b997-91e8e0b5516e&quot;,&quot;srn:stage11733927::Swimlane/f47a8e25-188a-4c9d-91d6-1a54883e9fa2&quot;,&quot;srn:stage11733927::Swimlane/a766f0c1-f619-4fba-94a9-498aeb81624c&quot;,&quot;srn:stage11733927::Swimlane/edb2917d-81a3-4b74-9e22-1af5f507a2fe&quot;,&quot;srn:stage11733927::Swimlane/d84a67d6-760c-4a6a-924b-c8f46c9d5360&quot;,&quot;srn:stage11733927::Swimlane/57cdd790-cb15-4213-a618-d7306ae5e595&quot;,&quot;srn:stage11733927::Swimlane/454d1176-305e-40c3-ab66-c6fdac382a1d&quot;,&quot;srn:stage11733927::Swimlane/00b2a8b9-345b-40eb-abe4-0d74832b3cfb&quot;,&quot;srn:stage11733927::Swimlane/525ec320-5276-4bbc-b8bc-89feeeb14328&quot;,&quot;srn:stage11733927::Swimlane/f5c522fa-e7f4-4be4-8f0e-469e4f603f36&quot;,&quot;srn:stage11733927::Swimlane/94eab80b-4b32-46c2-9ee2-20c7e898eeb3&quot;,&quot;srn:stage11733927::Swimlane/3fc23896-66b4-4bbd-925d-a977ab832acc&quot;,&quot;srn:stage11733927::Swimlane/7c2896dc-7604-4f5b-bc4e-0a0034d061d2&quot;,&quot;srn:stage11733927::Swimlane/d61afe67-c651-46bd-904b-9a68988ee3c3&quot;,&quot;srn:stage11733927::Swimlane/60757a12-aa4a-4e35-8418-c6e9b26145e0&quot;,&quot;srn:stage11733927::Swimlane/2a6bd270-2f19-4535-8244-014b2e43be49&quot;,&quot;srn:stage11733927::Swimlane/6720e478-06db-444d-a19f-42b61ba08d6b&quot;,&quot;srn:stage11733927::Swimlane/52d5c2a5-9132-44d9-8eb8-1386b5bb8dc4&quot;,&quot;srn:stage11733927::Swimlane/56517df8-c68c-4481-a547-8e05d48454fb&quot;,&quot;srn:stage11733927::Swimlane/5c8ebc78-17e2-49cb-acc7-fb200922d32a&quot;,&quot;srn:stage11733927::Swimlane/876ed902-5674-475d-9f94-8466a06c5625&quot;,&quot;srn:stage11733927::Swimlane/054e6112-5c09-4a64-806f-fdc03d4887da&quot;,&quot;srn:stage11733927::Swimlane/ba3b5b6e-9c31-4053-b37a-03d2dd0d558a&quot;,&quot;srn:stage11733927::Swimlane/e058b72f-904d-428d-9225-ea92e9166a9d&quot;,&quot;srn:stage11733927::Swimlane/d622d287-90d2-49d1-add1-22fdbb5cc4d0&quot;,&quot;srn:stage11733927::Swimlane/2e0fc915-74d7-4938-bb0e-ecac2193c9a0&quot;,&quot;srn:stage11733927::Swimlane/81a239ab-ac92-4b0d-899d-74c35e600b2a&quot;,&quot;srn:stage11733927::Swimlane/6579051f-fc8a-46e7-882a-0cde2219f9ef&quot;,&quot;srn:stage11733927::Swimlane/24f4367c-8a0e-4905-8811-0726d4d112bd&quot;,&quot;srn:stage11733927::Swimlane/93f43210-d0bd-486d-baaa-232b79ecbe06&quot;,&quot;srn:stage11733927::Swimlane/6024d0eb-d1bb-4d48-9fd3-f96fff0e1d2e&quot;,&quot;srn:stage11733927::Swimlane/e55fb989-dbe7-46f7-8fa4-957c7e4acb52&quot;,&quot;srn:stage11733927::Swimlane/05fe70d3-183b-4452-b0f5-2e8f2aeb5996&quot;,&quot;srn:stage11733927::Swimlane/186b2a2d-4b46-4639-a942-bd396c53bd67&quot;,&quot;srn:stage11733927::Swimlane/0bbca8be-ed54-4677-b581-973950ecfb9c&quot;,&quot;srn:stage11733927::Swimlane/a9443082-562d-4269-a53d-fba35565b4ce&quot;,&quot;srn:stage11733927::Swimlane/5e06ca2b-15b9-4654-99c0-2f2731b55e96&quot;,&quot;srn:stage11733927::Swimlane/55773a02-470e-4cf8-95de-2845ef4408d2&quot;,&quot;srn:stage11733927::Swimlane/ac7784fd-bd3d-4966-9bac-610c39053e99&quot;,&quot;srn:stage11733927::Swimlane/ff34414f-e6d4-4b25-a45c-05c3d603dec9&quot;,&quot;srn:stage11733927::Swimlane/538951ca-f147-4685-90f1-083473ebba0e&quot;,&quot;srn:stage11733927::Swimlane/3ace1654-4a66-45da-9b3d-78d7b24583d2&quot;,&quot;srn:stage11733927::Swimlane/4dfead77-670a-4c66-b1da-81ed07092089&quot;,&quot;srn:stage11733927::Swimlane/d470e390-13f2-4859-97d6-2b2bb4fc3cba&quot;,&quot;srn:stage11733927::Swimlane/f8e036fd-4c39-4abf-b142-24a7c13adf91&quot;,&quot;srn:stage11733927::Swimlane/4236caae-3e01-4b87-8a50-765370a840ef&quot;]}}},&quot;query&quot;:&quot;query resources_total($filters: ResourceFilter) {\n  Resources(where: $filters) {\n    count\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">e95cb15be2e0c7a5f97e87009de904b4</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:ddb6-48d6-9c00-53c077389198/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">d5b2a8c9b3b62da4</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">e95cb15be2e0c7a5f97e87009de904b4-d5b2a8c9b3b62da4-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">resources_total</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Compliance_T07_policy_compliance_donut" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;policy_compliance_donut&quot;,&quot;variables&quot;:{&quot;failedFilters&quot;:{&quot;environmentName&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;Production&quot;,&quot;Sensitive Data&quot;]},&quot;policyStatus&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;FAILED&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;2023-03-31T17:43:18.010Z&quot;}},&quot;totalFilters&quot;:{&quot;environmentName&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;Production&quot;,&quot;Sensitive Data&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;2023-03-31T17:43:18.010Z&quot;}}},&quot;query&quot;:&quot;query policy_compliance_donut($failedFilters: PolicyTrendsFilter, $totalFilters: PolicyTrendsFilter) {\n  failed: PolicyTrends(where: $failedFilters, groupby: {fields: [\&quot;policySrn\&quot;]}) {\n    count\n    __typename\n  }\n  total: PolicyTrends(where: $totalFilters, groupby: {fields: [\&quot;id\&quot;]}) {\n    count\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">e95cb15be2e0c7a5f97e87009de904b4</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:25c9-483d-847f-561fb8da37e5/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">90a14a3861714ec1</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">e95cb15be2e0c7a5f97e87009de904b4-90a14a3861714ec1-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">policy_compliance_donut</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Compliance_T08_riskCountsV2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;riskCountsV2&quot;,&quot;variables&quot;:{&quot;limit&quot;:100,&quot;offset&quot;:0,&quot;sort&quot;:[{&quot;riskScore&quot;:{&quot;order&quot;:&quot;ASC&quot;}}],&quot;filter&quot;:{&quot;status&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;NEW&quot;]},&quot;ticketKey&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;ticketType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;Property&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;severityCategory&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;environment&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;Production&quot;,&quot;Sensitive Data&quot;]},&quot;swimlaneSrns&quot;:{&quot;value&quot;:&quot;ALL&quot;}},&quot;includeRollup&quot;:{&quot;status&quot;:true,&quot;environment&quot;:true}},&quot;query&quot;:&quot;query riskCountsV2($filter: TicketRollupFilter!, $includeRollup: TicketRollupIncludeRollup!, $limit: Long = 100, $offset: Long = 0, $sort: [TicketRollupOrder] = [{riskScore: {order: ASC}}]) {\n  TicketRollups(where: $filter, includeRollup: $includeRollup) {\n    items(limit: $limit, offset: $offset, orderBy: $sort) {\n      count\n      severityCategory\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">e95cb15be2e0c7a5f97e87009de904b4</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:4151-42ad-bf38-7ef691abfb71/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">cd10376a0ffff149</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">e95cb15be2e0c7a5f97e87009de904b4-cd10376a0ffff149-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">riskCountsV2</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Compliance_T09_compliance_coverage" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;compliance_coverage&quot;,&quot;variables&quot;:{&quot;key&quot;:&quot;standardSrn&quot;,&quot;filters&quot;:{&quot;standardSrn&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:null},&quot;ticketKey&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:null},&quot;environmentName&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;Production&quot;,&quot;Sensitive Data&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;2023-03-31T17:43:18.010Z&quot;}}},&quot;query&quot;:&quot;query compliance_coverage($filters: PolicyTrendsFilter, $key: String) {\n  compliance_coverage: PolicyTrends(\n    where: $filters\n    groupby: {fields: [$key, \&quot;id\&quot;]}\n  ) {\n    items {\n      standardSrn\n      riskLevel\n      riskScore\n      standardControlSrn\n      standardFamilySrn\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">e95cb15be2e0c7a5f97e87009de904b4</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:67d2-443b-b171-a7cc617849d5/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">681b54bfd824ee2e</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">e95cb15be2e0c7a5f97e87009de904b4-681b54bfd824ee2e-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">compliance_coverage</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://front-end-collector-web.s.sonraisecurity.com/v1/metrics" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;resourceMetrics&quot;:[{&quot;resource&quot;:{&quot;attributes&quot;:[],&quot;droppedAttributesCount&quot;:0},&quot;scopeMetrics&quot;:[{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-document-load&quot;,&quot;version&quot;:&quot;0.27.1&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-fetch&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-long-task&quot;,&quot;version&quot;:&quot;0.30.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-xml-http-request&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;app_layout_error_boundary_errors_count&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;sum&quot;:{&quot;aggregationTemporality&quot;:2,&quot;isMonotonic&quot;:true,&quot;dataPoints&quot;:[]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.graphql&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;graphql_request_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiUsers&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:509,&quot;min&quot;:509,&quot;max&quot;:509,&quot;startTimeUnixNano&quot;:1680198065344100000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAllMaturityLevels&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:510,&quot;min&quot;:510,&quot;max&quot;:510,&quot;startTimeUnixNano&quot;:1680198065346600000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;currentUser&quot;}}],&quot;bucketCounts&quot;:[0,0,2,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:2,&quot;sum&quot;:1048,&quot;min&quot;:516,&quot;max&quot;:532,&quot;startTimeUnixNano&quot;:1680198065349300000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAllEnvironments&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:522,&quot;min&quot;:522,&quot;max&quot;:522,&quot;startTimeUnixNano&quot;:1680198065358000000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAllSecurityAreas&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:523,&quot;min&quot;:523,&quot;max&quot;:523,&quot;startTimeUnixNano&quot;:1680198065359700000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiOrgConfig&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:523,&quot;min&quot;:523,&quot;max&quot;:523,&quot;startTimeUnixNano&quot;:1680198065360500000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiUIConfig&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:531,&quot;min&quot;:531,&quot;max&quot;:531,&quot;startTimeUnixNano&quot;:1680198065366700000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getCollectorConfigurations&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:572,&quot;min&quot;:572,&quot;max&quot;:572,&quot;startTimeUnixNano&quot;:1680198065409600000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;get_all_roles&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:130,&quot;min&quot;:130,&quot;max&quot;:130,&quot;startTimeUnixNano&quot;:1680198065485800000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getControlFrameworks&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:319,&quot;min&quot;:319,&quot;max&quot;:319,&quot;startTimeUnixNano&quot;:1680198065676900000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;IntrospectionQuery&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:853,&quot;min&quot;:853,&quot;max&quot;:853,&quot;startTimeUnixNano&quot;:1680198066047400000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSavedSearches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:812,&quot;min&quot;:812,&quot;max&quot;:812,&quot;startTimeUnixNano&quot;:1680198066167600000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;saveUserProfile&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:876,&quot;min&quot;:876,&quot;max&quot;:876,&quot;startTimeUnixNano&quot;:1680198066241900000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getResourceLabels&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:903,&quot;min&quot;:903,&quot;max&quot;:903,&quot;startTimeUnixNano&quot;:1680198066262700000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAccounts&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1009,&quot;min&quot;:1009,&quot;max&quot;:1009,&quot;startTimeUnixNano&quot;:1680198066366100000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSubscriptions&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1011,&quot;min&quot;:1011,&quot;max&quot;:1011,&quot;startTimeUnixNano&quot;:1680198066368000000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchSwimlanes&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1110,&quot;min&quot;:1110,&quot;max&quot;:1110,&quot;startTimeUnixNano&quot;:1680198066467200000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;sonrai_user&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:228,&quot;min&quot;:228,&quot;max&quot;:228,&quot;startTimeUnixNano&quot;:1680198066487000000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiSeaches&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1221,&quot;min&quot;:1221,&quot;max&quot;:1221,&quot;startTimeUnixNano&quot;:1680198066576600000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getReportPoll&quot;}}],&quot;bucketCounts&quot;:[0,2,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:2,&quot;sum&quot;:609,&quot;min&quot;:228,&quot;max&quot;:381,&quot;startTimeUnixNano&quot;:1680198066642900000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getReportsInit&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:147,&quot;min&quot;:147,&quot;max&quot;:147,&quot;startTimeUnixNano&quot;:1680198066650600000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TopFiveIssues&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:101,&quot;min&quot;:101,&quot;max&quot;:101,&quot;startTimeUnixNano&quot;:1680198066656900000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getServiceTypes&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:405,&quot;min&quot;:405,&quot;max&quot;:405,&quot;startTimeUnixNano&quot;:1680198066668400000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;licensing&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:168,&quot;min&quot;:168,&quot;max&quot;:168,&quot;startTimeUnixNano&quot;:1680198066722500000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getDataProtectionInsights&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:269,&quot;min&quot;:269,&quot;max&quot;:269,&quot;startTimeUnixNano&quot;:1680198066893400000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getNetworkInsights&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:285,&quot;min&quot;:285,&quot;max&quot;:285,&quot;startTimeUnixNano&quot;:1680198066911200000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getFundamentalInsights&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:325,&quot;min&quot;:325,&quot;max&quot;:325,&quot;startTimeUnixNano&quot;:1680198066950500000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getIdentityInsights&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:358,&quot;min&quot;:358,&quot;max&quot;:358,&quot;startTimeUnixNano&quot;:1680198066982000000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getFamilyRollupQuery&quot;}}],&quot;bucketCounts&quot;:[0,1,1,3,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:5,&quot;sum&quot;:5355,&quot;min&quot;:379,&quot;max&quot;:1374,&quot;startTimeUnixNano&quot;:1680198067005900000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;vulnerabilities_by_time&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:383,&quot;min&quot;:383,&quot;max&quot;:383,&quot;startTimeUnixNano&quot;:1680198067011700000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchClouds&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:478,&quot;min&quot;:478,&quot;max&quot;:478,&quot;startTimeUnixNano&quot;:1680198067035200000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSavedSearches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:899,&quot;min&quot;:899,&quot;max&quot;:899,&quot;startTimeUnixNano&quot;:1680198067139900000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getActiveThreat&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:599,&quot;min&quot;:599,&quot;max&quot;:599,&quot;startTimeUnixNano&quot;:1680198067227900000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;top5ResourcesAtRisk&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:785,&quot;min&quot;:785,&quot;max&quot;:785,&quot;startTimeUnixNano&quot;:1680198067412600000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;top5Vulnerabilities&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:789,&quot;min&quot;:789,&quot;max&quot;:789,&quot;startTimeUnixNano&quot;:1680198067416700000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;vulnerabilitiesByPublishedDate&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:792,&quot;min&quot;:792,&quot;max&quot;:792,&quot;startTimeUnixNano&quot;:1680198067419100000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;InsightsFindingsTrends&quot;}}],&quot;bucketCounts&quot;:[0,0,0,2,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:2,&quot;sum&quot;:2852,&quot;min&quot;:1416,&quot;max&quot;:1436,&quot;startTimeUnixNano&quot;:1680198067972600000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStandardRisk&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1472,&quot;min&quot;:1472,&quot;max&quot;:1472,&quot;startTimeUnixNano&quot;:1680198068027400000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;topInsights&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1607,&quot;min&quot;:1607,&quot;max&quot;:1607,&quot;startTimeUnixNano&quot;:1680198068162700000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getIdentityCounts&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:435,&quot;min&quot;:435,&quot;max&quot;:435,&quot;startTimeUnixNano&quot;:1680198105286500000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAccessKeys&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:512,&quot;min&quot;:512,&quot;max&quot;:512,&quot;startTimeUnixNano&quot;:1680198105442300000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getCrossAccountTrustExposure&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:518,&quot;min&quot;:518,&quot;max&quot;:518,&quot;startTimeUnixNano&quot;:1680198105446700000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getFamilyRollupQuery&quot;}}],&quot;bucketCounts&quot;:[0,0,2,5,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:7,&quot;sum&quot;:8184,&quot;min&quot;:526,&quot;max&quot;:1479,&quot;startTimeUnixNano&quot;:1680198105455900000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TopFiveRiskyIdentities&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:575,&quot;min&quot;:575,&quot;max&quot;:575,&quot;startTimeUnixNano&quot;:1680198105506600000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TopFiveIssues&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:838,&quot;min&quot;:838,&quot;max&quot;:838,&quot;startTimeUnixNano&quot;:1680198105690400000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;topInsights&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:913,&quot;min&quot;:913,&quot;max&quot;:913,&quot;startTimeUnixNano&quot;:1680198105765100000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getOtherIssues&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:844,&quot;min&quot;:844,&quot;max&quot;:844,&quot;startTimeUnixNano&quot;:1680198105776100000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getUnusedIdentity&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:889,&quot;min&quot;:889,&quot;max&quot;:889,&quot;startTimeUnixNano&quot;:1680198105817400000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStandardRisk&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1437,&quot;min&quot;:1437,&quot;max&quot;:1437,&quot;startTimeUnixNano&quot;:1680198106290000100,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getOverpriviledgedIdentity&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1401,&quot;min&quot;:1401,&quot;max&quot;:1401,&quot;startTimeUnixNano&quot;:1680198106331600100,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getLateralMovementRollup&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1485,&quot;min&quot;:1485,&quot;max&quot;:1485,&quot;startTimeUnixNano&quot;:1680198106413000000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;topInsights&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:446,&quot;min&quot;:446,&quot;max&quot;:446,&quot;startTimeUnixNano&quot;:1680198119847300000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;networkCounts&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:450,&quot;min&quot;:450,&quot;max&quot;:450,&quot;startTimeUnixNano&quot;:1680198119849400000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TopFiveIssues&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:458,&quot;min&quot;:458,&quot;max&quot;:458,&quot;startTimeUnixNano&quot;:1680198119859300000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getFamilyRollupQuery&quot;}}],&quot;bucketCounts&quot;:[0,1,4,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:5,&quot;sum&quot;:3621,&quot;min&quot;:476,&quot;max&quot;:934,&quot;startTimeUnixNano&quot;:1680198119929800000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getOtherIssues&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:496,&quot;min&quot;:496,&quot;max&quot;:496,&quot;startTimeUnixNano&quot;:1680198119950800100,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getEncryption&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:599,&quot;min&quot;:599,&quot;max&quot;:599,&quot;startTimeUnixNano&quot;:1680198120051600100,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStandardRisk&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:975,&quot;min&quot;:975,&quot;max&quot;:975,&quot;startTimeUnixNano&quot;:1680198120375400000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getExposedResources&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:925,&quot;min&quot;:925,&quot;max&quot;:925,&quot;startTimeUnixNano&quot;:1680198120379000000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getRecentChanges&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:929,&quot;min&quot;:929,&quot;max&quot;:929,&quot;startTimeUnixNano&quot;:1680198120383200000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getUnused&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:932,&quot;min&quot;:932,&quot;max&quot;:932,&quot;startTimeUnixNano&quot;:1680198120386800000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getDataCountsForCloud&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:188,&quot;min&quot;:188,&quot;max&quot;:188,&quot;startTimeUnixNano&quot;:1680198135200300000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getDataCounts&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:224,&quot;min&quot;:224,&quot;max&quot;:224,&quot;startTimeUnixNano&quot;:1680198135234300000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;topInsights&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:564,&quot;min&quot;:564,&quot;max&quot;:564,&quot;startTimeUnixNano&quot;:1680198135575100000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getOtherIssues&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:513,&quot;min&quot;:513,&quot;max&quot;:513,&quot;startTimeUnixNano&quot;:1680198135579100000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStandardRisk&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:576,&quot;min&quot;:576,&quot;max&quot;:576,&quot;startTimeUnixNano&quot;:1680198135586900000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getFamilyRollupQuery&quot;}}],&quot;bucketCounts&quot;:[0,0,3,2,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:5,&quot;sum&quot;:4264,&quot;min&quot;:542,&quot;max&quot;:1041,&quot;startTimeUnixNano&quot;:1680198135606800100,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getKeyAndCert&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:574,&quot;min&quot;:574,&quot;max&quot;:574,&quot;startTimeUnixNano&quot;:1680198135639300000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getClassification&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:578,&quot;min&quot;:578,&quot;max&quot;:578,&quot;startTimeUnixNano&quot;:1680198135642500000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TopFiveIssues&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:688,&quot;min&quot;:688,&quot;max&quot;:688,&quot;startTimeUnixNano&quot;:1680198135699000000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAccess&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:688,&quot;min&quot;:688,&quot;max&quot;:688,&quot;startTimeUnixNano&quot;:1680198135753000000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getEncryptionKeys&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1035,&quot;min&quot;:1035,&quot;max&quot;:1035,&quot;startTimeUnixNano&quot;:1680198136099700000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fundamentalCounts&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:375,&quot;min&quot;:375,&quot;max&quot;:375,&quot;startTimeUnixNano&quot;:1680198163885600000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;topInsights&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:552,&quot;min&quot;:552,&quot;max&quot;:552,&quot;startTimeUnixNano&quot;:1680198164063500000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TopFiveIssues&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:899,&quot;min&quot;:899,&quot;max&quot;:899,&quot;startTimeUnixNano&quot;:1680198164410800000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getFamilyRollupQuery&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,2,2,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:5,&quot;sum&quot;:13389,&quot;min&quot;:1000,&quot;max&quot;:3448,&quot;startTimeUnixNano&quot;:1680198164586400000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getDatabasePosture&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1006,&quot;min&quot;:1006,&quot;max&quot;:1006,&quot;startTimeUnixNano&quot;:1680198164592800000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getIAM&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1347,&quot;min&quot;:1347,&quot;max&quot;:1347,&quot;startTimeUnixNano&quot;:1680198164933900000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getRecentChanges&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,1,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:2054,&quot;min&quot;:2054,&quot;max&quot;:2054,&quot;startTimeUnixNano&quot;:1680198165639600000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getPlatform&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:3099,&quot;min&quot;:3099,&quot;max&quot;:3099,&quot;startTimeUnixNano&quot;:1680198166685000000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAuditLoggingQuery&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:3137,&quot;min&quot;:3137,&quot;max&quot;:3137,&quot;startTimeUnixNano&quot;:1680198166721900000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStandardRisk&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:4811,&quot;min&quot;:4811,&quot;max&quot;:4811,&quot;startTimeUnixNano&quot;:1680198168322900000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/WorkloadProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;vulnerabilities_group_by_vm_count&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:998,&quot;min&quot;:998,&quot;max&quot;:998,&quot;startTimeUnixNano&quot;:1680198183286900000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/WorkloadProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;vulnerabilities_by_published_date&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:999,&quot;min&quot;:999,&quot;max&quot;:999,&quot;startTimeUnixNano&quot;:1680198183288300000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/WorkloadProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;vulnerabilities_group_by_vm&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1031,&quot;min&quot;:1031,&quot;max&quot;:1031,&quot;startTimeUnixNano&quot;:1680198183319100000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/WorkloadProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;vulnerabilities_by_time&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1518,&quot;min&quot;:1518,&quot;max&quot;:1518,&quot;startTimeUnixNano&quot;:1680198183808800000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Compliance&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;resources_total&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:592,&quot;min&quot;:592,&quot;max&quot;:592,&quot;startTimeUnixNano&quot;:1680198198621800000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Compliance&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchStandards&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:714,&quot;min&quot;:714,&quot;max&quot;:714,&quot;startTimeUnixNano&quot;:1680198198706900000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Compliance&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;compliance_risk_trend&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:823,&quot;min&quot;:823,&quot;max&quot;:823,&quot;startTimeUnixNano&quot;:1680198198852300000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Compliance&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getObjectives&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,0,1,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:5749,&quot;min&quot;:5749,&quot;max&quot;:5749,&quot;startTimeUnixNano&quot;:1680198203742800100,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Compliance&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;riskCountsV2&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,0,1,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:9904,&quot;min&quot;:9904,&quot;max&quot;:9904,&quot;startTimeUnixNano&quot;:1680198207935000000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Compliance&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;compliance_issues_by_security_area&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,0,1,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:9916,&quot;min&quot;:9916,&quot;max&quot;:9916,&quot;startTimeUnixNano&quot;:1680198207944400100,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Compliance&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;policy_compliance_donut&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,0,1,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:9928,&quot;min&quot;:9928,&quot;max&quot;:9928,&quot;startTimeUnixNano&quot;:1680198207957600000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Compliance&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;check_if_trends_exist&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,0,0,1,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:10079,&quot;min&quot;:10079,&quot;max&quot;:10079,&quot;startTimeUnixNano&quot;:1680198208073000000,&quot;timeUnixNano&quot;:1680198214840900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Compliance&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;compliance_coverage&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,0,0,1,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:14135,&quot;min&quot;:14135,&quot;max&quot;:14135,&quot;startTimeUnixNano&quot;:1680198212165900000,&quot;timeUnixNano&quot;:1680198214840900000}]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.newroute&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;newtab_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:56,&quot;min&quot;:56,&quot;max&quot;:56,&quot;startTimeUnixNano&quot;:1680198066558000000,&quot;timeUnixNano&quot;:1680198214840900000}]}},{&quot;name&quot;:&quot;newroute_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[]}}]}]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v1/metrics</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="stage11733927_09_Dashbaord" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Dashboard_T01_getSCCards" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getSCCards&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getSCCards {\n  SolutionCards {\n    count\n    items {\n      __typename\n      name\n      createdDate\n      sid\n      srn\n      lastModified\n      resourceId\n      createdBy\n      contains {\n        items {\n          resourceId\n          title\n          subtitle\n          name\n          resultLayout\n          static\n          type\n          widgetLocation\n          createdDate\n          createdBy\n          sid\n          srn\n          lastModified\n          widgetSize\n          selection\n          options\n          contains {\n            items {\n              name\n              sid\n              srn\n              ... on Search {\n                rootQueryName\n                lastModified\n                createdDate\n                query\n                resourceId\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">3311a83b0d9577d5cbd14f66a7330c2c</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:2fc4-48c3-a024-fb15f267b7e7/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">496026be30866e48</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">3311a83b0d9577d5cbd14f66a7330c2c-496026be30866e48-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getSCCards</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Dashboard_T02_piechartQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;piechartQuery&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query piechartQuery {\n  DataContainers(\n    where: {and: [{and: [{active: {op: EQ, value: true}}, {type: {op: NOT_IN_LIST, values: [Folder]}}]}, {}]}\n  ) {\n    group {\n      key {\n        type\n        __typename\n      }\n      count\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">564e0612c8a686cdd56c3b43307f8c31</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:9062-4713-a31f-96f203cb4e26/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">07e6b8f98fad4619</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">564e0612c8a686cdd56c3b43307f8c31-07e6b8f98fad4619-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">pieChartWidget_data_repository_types</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Dashboard_T03_tableWidgetQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;tableWidgetQuery&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query tableWidgetQuery {\n  DataStores(where: {and: [{and: [{active: {op: EQ, value: true}}]}, {}, {}]}) {\n    items {\n      name\n      type\n      active\n      account\n      createdDate\n      auditEnabled\n      encryptionEnabled\n      publicRead\n      publicWrite\n      tagSet: tagSet\n      srn\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">b03ff4f2a2d5ac2da9e011c2d43d58ff</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:9721-4eeb-a053-a76664b5b6f1/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">5775e2ced1ffdca3</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">b03ff4f2a2d5ac2da9e011c2d43d58ff-5775e2ced1ffdca3-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">tableWidget_data_stores_monitored</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Dashboard_T04_piechartQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;piechartQuery&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query piechartQuery {\n  Compute(where: {and: [{and: [{active: {op: EQ, value: true}}]}, {}]}) {\n    group {\n      key {\n        region\n        __typename\n      }\n      count\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">71e0b5247fea4d643b22da34a72143d7</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:e244-48fe-9e76-30cc53d2cdd1/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">b8f16d5301bdb6bb</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">71e0b5247fea4d643b22da34a72143d7-b8f16d5301bdb6bb-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">pieChartWidget_compute_regions</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Dashboard_T05_piechartQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;piechartQuery&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query piechartQuery {\n  DataStores(where: {and: [{and: [{active: {op: EQ, value: true}}]}, {}]}) {\n    group {\n      key {\n        type\n        __typename\n      }\n      count\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">41d352523fe4d8ffd1f3748e5e906780</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:6753-4038-8328-4bbf46b47445/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">acd380cebdd7288b</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">41d352523fe4d8ffd1f3748e5e906780-acd380cebdd7288b-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">pieChartWidget_data_store_types</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Dashboard_T06_tableWidgetQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;tableWidgetQuery&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query tableWidgetQuery {\n  Tags(where: {and: [{}, {}, {}]}) {\n    items {\n      key\n      value\n      srn\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">bd76062aac5276fc8fb5fc4b17c8d9a6</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:ea13-4579-bb20-20b45aceeeed/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">0f65ff83be60c0d8</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">bd76062aac5276fc8fb5fc4b17c8d9a6-0f65ff83be60c0d8-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">tableWidget_tags_review</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://front-end-collector-web.s.sonraisecurity.com/v1/metrics" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;resourceMetrics&quot;:[{&quot;resource&quot;:{&quot;attributes&quot;:[],&quot;droppedAttributesCount&quot;:0},&quot;scopeMetrics&quot;:[{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-document-load&quot;,&quot;version&quot;:&quot;0.27.1&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-fetch&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-long-task&quot;,&quot;version&quot;:&quot;0.30.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-xml-http-request&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;app_layout_error_boundary_errors_count&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;sum&quot;:{&quot;aggregationTemporality&quot;:2,&quot;isMonotonic&quot;:true,&quot;dataPoints&quot;:[]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.graphql&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;graphql_request_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiUsers&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:509,&quot;min&quot;:509,&quot;max&quot;:509,&quot;startTimeUnixNano&quot;:1680198065344100000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAllMaturityLevels&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:510,&quot;min&quot;:510,&quot;max&quot;:510,&quot;startTimeUnixNano&quot;:1680198065346600000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;currentUser&quot;}}],&quot;bucketCounts&quot;:[0,0,2,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:2,&quot;sum&quot;:1048,&quot;min&quot;:516,&quot;max&quot;:532,&quot;startTimeUnixNano&quot;:1680198065349300000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAllEnvironments&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:522,&quot;min&quot;:522,&quot;max&quot;:522,&quot;startTimeUnixNano&quot;:1680198065358000000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAllSecurityAreas&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:523,&quot;min&quot;:523,&quot;max&quot;:523,&quot;startTimeUnixNano&quot;:1680198065359700000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiOrgConfig&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:523,&quot;min&quot;:523,&quot;max&quot;:523,&quot;startTimeUnixNano&quot;:1680198065360500000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiUIConfig&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:531,&quot;min&quot;:531,&quot;max&quot;:531,&quot;startTimeUnixNano&quot;:1680198065366700000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getCollectorConfigurations&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:572,&quot;min&quot;:572,&quot;max&quot;:572,&quot;startTimeUnixNano&quot;:1680198065409600000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;get_all_roles&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:130,&quot;min&quot;:130,&quot;max&quot;:130,&quot;startTimeUnixNano&quot;:1680198065485800000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getControlFrameworks&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:319,&quot;min&quot;:319,&quot;max&quot;:319,&quot;startTimeUnixNano&quot;:1680198065676900000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;IntrospectionQuery&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:853,&quot;min&quot;:853,&quot;max&quot;:853,&quot;startTimeUnixNano&quot;:1680198066047400000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSavedSearches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:812,&quot;min&quot;:812,&quot;max&quot;:812,&quot;startTimeUnixNano&quot;:1680198066167600000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;saveUserProfile&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:876,&quot;min&quot;:876,&quot;max&quot;:876,&quot;startTimeUnixNano&quot;:1680198066241900000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getResourceLabels&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:903,&quot;min&quot;:903,&quot;max&quot;:903,&quot;startTimeUnixNano&quot;:1680198066262700000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAccounts&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1009,&quot;min&quot;:1009,&quot;max&quot;:1009,&quot;startTimeUnixNano&quot;:1680198066366100000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSubscriptions&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1011,&quot;min&quot;:1011,&quot;max&quot;:1011,&quot;startTimeUnixNano&quot;:1680198066368000000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchSwimlanes&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1110,&quot;min&quot;:1110,&quot;max&quot;:1110,&quot;startTimeUnixNano&quot;:1680198066467200000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;sonrai_user&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:228,&quot;min&quot;:228,&quot;max&quot;:228,&quot;startTimeUnixNano&quot;:1680198066487000000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiSeaches&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1221,&quot;min&quot;:1221,&quot;max&quot;:1221,&quot;startTimeUnixNano&quot;:1680198066576600000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getReportPoll&quot;}}],&quot;bucketCounts&quot;:[0,2,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:2,&quot;sum&quot;:609,&quot;min&quot;:228,&quot;max&quot;:381,&quot;startTimeUnixNano&quot;:1680198066642900000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getReportsInit&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:147,&quot;min&quot;:147,&quot;max&quot;:147,&quot;startTimeUnixNano&quot;:1680198066650600000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TopFiveIssues&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:101,&quot;min&quot;:101,&quot;max&quot;:101,&quot;startTimeUnixNano&quot;:1680198066656900000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getServiceTypes&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:405,&quot;min&quot;:405,&quot;max&quot;:405,&quot;startTimeUnixNano&quot;:1680198066668400000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;licensing&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:168,&quot;min&quot;:168,&quot;max&quot;:168,&quot;startTimeUnixNano&quot;:1680198066722500000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getDataProtectionInsights&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:269,&quot;min&quot;:269,&quot;max&quot;:269,&quot;startTimeUnixNano&quot;:1680198066893400000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getNetworkInsights&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:285,&quot;min&quot;:285,&quot;max&quot;:285,&quot;startTimeUnixNano&quot;:1680198066911200000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getFundamentalInsights&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:325,&quot;min&quot;:325,&quot;max&quot;:325,&quot;startTimeUnixNano&quot;:1680198066950500000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getIdentityInsights&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:358,&quot;min&quot;:358,&quot;max&quot;:358,&quot;startTimeUnixNano&quot;:1680198066982000000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getFamilyRollupQuery&quot;}}],&quot;bucketCounts&quot;:[0,1,1,3,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:5,&quot;sum&quot;:5355,&quot;min&quot;:379,&quot;max&quot;:1374,&quot;startTimeUnixNano&quot;:1680198067005900000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;vulnerabilities_by_time&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:383,&quot;min&quot;:383,&quot;max&quot;:383,&quot;startTimeUnixNano&quot;:1680198067011700000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchClouds&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:478,&quot;min&quot;:478,&quot;max&quot;:478,&quot;startTimeUnixNano&quot;:1680198067035200000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSavedSearches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:899,&quot;min&quot;:899,&quot;max&quot;:899,&quot;startTimeUnixNano&quot;:1680198067139900000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getActiveThreat&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:599,&quot;min&quot;:599,&quot;max&quot;:599,&quot;startTimeUnixNano&quot;:1680198067227900000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;top5ResourcesAtRisk&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:785,&quot;min&quot;:785,&quot;max&quot;:785,&quot;startTimeUnixNano&quot;:1680198067412600000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;top5Vulnerabilities&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:789,&quot;min&quot;:789,&quot;max&quot;:789,&quot;startTimeUnixNano&quot;:1680198067416700000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;vulnerabilitiesByPublishedDate&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:792,&quot;min&quot;:792,&quot;max&quot;:792,&quot;startTimeUnixNano&quot;:1680198067419100000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;InsightsFindingsTrends&quot;}}],&quot;bucketCounts&quot;:[0,0,0,2,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:2,&quot;sum&quot;:2852,&quot;min&quot;:1416,&quot;max&quot;:1436,&quot;startTimeUnixNano&quot;:1680198067972600000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStandardRisk&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1472,&quot;min&quot;:1472,&quot;max&quot;:1472,&quot;startTimeUnixNano&quot;:1680198068027400000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;topInsights&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1607,&quot;min&quot;:1607,&quot;max&quot;:1607,&quot;startTimeUnixNano&quot;:1680198068162700000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getIdentityCounts&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:435,&quot;min&quot;:435,&quot;max&quot;:435,&quot;startTimeUnixNano&quot;:1680198105286500000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAccessKeys&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:512,&quot;min&quot;:512,&quot;max&quot;:512,&quot;startTimeUnixNano&quot;:1680198105442300000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getCrossAccountTrustExposure&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:518,&quot;min&quot;:518,&quot;max&quot;:518,&quot;startTimeUnixNano&quot;:1680198105446700000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getFamilyRollupQuery&quot;}}],&quot;bucketCounts&quot;:[0,0,2,5,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:7,&quot;sum&quot;:8184,&quot;min&quot;:526,&quot;max&quot;:1479,&quot;startTimeUnixNano&quot;:1680198105455900000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TopFiveRiskyIdentities&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:575,&quot;min&quot;:575,&quot;max&quot;:575,&quot;startTimeUnixNano&quot;:1680198105506600000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TopFiveIssues&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:838,&quot;min&quot;:838,&quot;max&quot;:838,&quot;startTimeUnixNano&quot;:1680198105690400000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;topInsights&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:913,&quot;min&quot;:913,&quot;max&quot;:913,&quot;startTimeUnixNano&quot;:1680198105765100000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getOtherIssues&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:844,&quot;min&quot;:844,&quot;max&quot;:844,&quot;startTimeUnixNano&quot;:1680198105776100000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getUnusedIdentity&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:889,&quot;min&quot;:889,&quot;max&quot;:889,&quot;startTimeUnixNano&quot;:1680198105817400000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStandardRisk&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1437,&quot;min&quot;:1437,&quot;max&quot;:1437,&quot;startTimeUnixNano&quot;:1680198106290000100,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getOverpriviledgedIdentity&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1401,&quot;min&quot;:1401,&quot;max&quot;:1401,&quot;startTimeUnixNano&quot;:1680198106331600100,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getLateralMovementRollup&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1485,&quot;min&quot;:1485,&quot;max&quot;:1485,&quot;startTimeUnixNano&quot;:1680198106413000000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;topInsights&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:446,&quot;min&quot;:446,&quot;max&quot;:446,&quot;startTimeUnixNano&quot;:1680198119847300000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;networkCounts&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:450,&quot;min&quot;:450,&quot;max&quot;:450,&quot;startTimeUnixNano&quot;:1680198119849400000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TopFiveIssues&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:458,&quot;min&quot;:458,&quot;max&quot;:458,&quot;startTimeUnixNano&quot;:1680198119859300000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getFamilyRollupQuery&quot;}}],&quot;bucketCounts&quot;:[0,1,4,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:5,&quot;sum&quot;:3621,&quot;min&quot;:476,&quot;max&quot;:934,&quot;startTimeUnixNano&quot;:1680198119929800000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getOtherIssues&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:496,&quot;min&quot;:496,&quot;max&quot;:496,&quot;startTimeUnixNano&quot;:1680198119950800100,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getEncryption&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:599,&quot;min&quot;:599,&quot;max&quot;:599,&quot;startTimeUnixNano&quot;:1680198120051600100,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStandardRisk&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:975,&quot;min&quot;:975,&quot;max&quot;:975,&quot;startTimeUnixNano&quot;:1680198120375400000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getExposedResources&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:925,&quot;min&quot;:925,&quot;max&quot;:925,&quot;startTimeUnixNano&quot;:1680198120379000000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getRecentChanges&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:929,&quot;min&quot;:929,&quot;max&quot;:929,&quot;startTimeUnixNano&quot;:1680198120383200000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getUnused&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:932,&quot;min&quot;:932,&quot;max&quot;:932,&quot;startTimeUnixNano&quot;:1680198120386800000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getDataCountsForCloud&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:188,&quot;min&quot;:188,&quot;max&quot;:188,&quot;startTimeUnixNano&quot;:1680198135200300000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getDataCounts&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:224,&quot;min&quot;:224,&quot;max&quot;:224,&quot;startTimeUnixNano&quot;:1680198135234300000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;topInsights&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:564,&quot;min&quot;:564,&quot;max&quot;:564,&quot;startTimeUnixNano&quot;:1680198135575100000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getOtherIssues&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:513,&quot;min&quot;:513,&quot;max&quot;:513,&quot;startTimeUnixNano&quot;:1680198135579100000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStandardRisk&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:576,&quot;min&quot;:576,&quot;max&quot;:576,&quot;startTimeUnixNano&quot;:1680198135586900000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getFamilyRollupQuery&quot;}}],&quot;bucketCounts&quot;:[0,0,3,2,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:5,&quot;sum&quot;:4264,&quot;min&quot;:542,&quot;max&quot;:1041,&quot;startTimeUnixNano&quot;:1680198135606800100,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getKeyAndCert&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:574,&quot;min&quot;:574,&quot;max&quot;:574,&quot;startTimeUnixNano&quot;:1680198135639300000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getClassification&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:578,&quot;min&quot;:578,&quot;max&quot;:578,&quot;startTimeUnixNano&quot;:1680198135642500000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TopFiveIssues&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:688,&quot;min&quot;:688,&quot;max&quot;:688,&quot;startTimeUnixNano&quot;:1680198135699000000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAccess&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:688,&quot;min&quot;:688,&quot;max&quot;:688,&quot;startTimeUnixNano&quot;:1680198135753000000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getEncryptionKeys&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1035,&quot;min&quot;:1035,&quot;max&quot;:1035,&quot;startTimeUnixNano&quot;:1680198136099700000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fundamentalCounts&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:375,&quot;min&quot;:375,&quot;max&quot;:375,&quot;startTimeUnixNano&quot;:1680198163885600000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;topInsights&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:552,&quot;min&quot;:552,&quot;max&quot;:552,&quot;startTimeUnixNano&quot;:1680198164063500000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TopFiveIssues&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:899,&quot;min&quot;:899,&quot;max&quot;:899,&quot;startTimeUnixNano&quot;:1680198164410800000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getFamilyRollupQuery&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,2,2,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:5,&quot;sum&quot;:13389,&quot;min&quot;:1000,&quot;max&quot;:3448,&quot;startTimeUnixNano&quot;:1680198164586400000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getDatabasePosture&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1006,&quot;min&quot;:1006,&quot;max&quot;:1006,&quot;startTimeUnixNano&quot;:1680198164592800000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getIAM&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1347,&quot;min&quot;:1347,&quot;max&quot;:1347,&quot;startTimeUnixNano&quot;:1680198164933900000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getRecentChanges&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,1,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:2054,&quot;min&quot;:2054,&quot;max&quot;:2054,&quot;startTimeUnixNano&quot;:1680198165639600000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getPlatform&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:3099,&quot;min&quot;:3099,&quot;max&quot;:3099,&quot;startTimeUnixNano&quot;:1680198166685000000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAuditLoggingQuery&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:3137,&quot;min&quot;:3137,&quot;max&quot;:3137,&quot;startTimeUnixNano&quot;:1680198166721900000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStandardRisk&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:4811,&quot;min&quot;:4811,&quot;max&quot;:4811,&quot;startTimeUnixNano&quot;:1680198168322900000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/WorkloadProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;vulnerabilities_group_by_vm_count&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:998,&quot;min&quot;:998,&quot;max&quot;:998,&quot;startTimeUnixNano&quot;:1680198183286900000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/WorkloadProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;vulnerabilities_by_published_date&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:999,&quot;min&quot;:999,&quot;max&quot;:999,&quot;startTimeUnixNano&quot;:1680198183288300000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/WorkloadProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;vulnerabilities_group_by_vm&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1031,&quot;min&quot;:1031,&quot;max&quot;:1031,&quot;startTimeUnixNano&quot;:1680198183319100000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/WorkloadProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;vulnerabilities_by_time&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1518,&quot;min&quot;:1518,&quot;max&quot;:1518,&quot;startTimeUnixNano&quot;:1680198183808800000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Compliance&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;resources_total&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:592,&quot;min&quot;:592,&quot;max&quot;:592,&quot;startTimeUnixNano&quot;:1680198198621800000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Compliance&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchStandards&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:714,&quot;min&quot;:714,&quot;max&quot;:714,&quot;startTimeUnixNano&quot;:1680198198706900000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Compliance&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;compliance_risk_trend&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:823,&quot;min&quot;:823,&quot;max&quot;:823,&quot;startTimeUnixNano&quot;:1680198198852300000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Compliance&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getObjectives&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,0,1,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:5749,&quot;min&quot;:5749,&quot;max&quot;:5749,&quot;startTimeUnixNano&quot;:1680198203742800100,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Compliance&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;riskCountsV2&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,0,1,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:9904,&quot;min&quot;:9904,&quot;max&quot;:9904,&quot;startTimeUnixNano&quot;:1680198207935000000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Compliance&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;compliance_issues_by_security_area&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,0,1,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:9916,&quot;min&quot;:9916,&quot;max&quot;:9916,&quot;startTimeUnixNano&quot;:1680198207944400100,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Compliance&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;policy_compliance_donut&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,0,1,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:9928,&quot;min&quot;:9928,&quot;max&quot;:9928,&quot;startTimeUnixNano&quot;:1680198207957600000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Compliance&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;check_if_trends_exist&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,0,0,1,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:10079,&quot;min&quot;:10079,&quot;max&quot;:10079,&quot;startTimeUnixNano&quot;:1680198208073000000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Compliance&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;compliance_coverage&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,0,0,1,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:14135,&quot;min&quot;:14135,&quot;max&quot;:14135,&quot;startTimeUnixNano&quot;:1680198212165900000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSCCards&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1391,&quot;min&quot;:1391,&quot;max&quot;:1391,&quot;startTimeUnixNano&quot;:1680198222283500000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;piechartQuery&quot;}}],&quot;bucketCounts&quot;:[0,3,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:3,&quot;sum&quot;:1239,&quot;min&quot;:384,&quot;max&quot;:439,&quot;startTimeUnixNano&quot;:1680198222859800000,&quot;timeUnixNano&quot;:1680198244839600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;tableWidgetQuery&quot;}}],&quot;bucketCounts&quot;:[0,0,1,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:2,&quot;sum&quot;:1884,&quot;min&quot;:700,&quot;max&quot;:1184,&quot;startTimeUnixNano&quot;:1680198223176300000,&quot;timeUnixNano&quot;:1680198244839600000}]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.newroute&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;newtab_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:56,&quot;min&quot;:56,&quot;max&quot;:56,&quot;startTimeUnixNano&quot;:1680198066558000000,&quot;timeUnixNano&quot;:1680198244839600000}]}},{&quot;name&quot;:&quot;newroute_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[]}}]}]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v1/metrics</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://front-end-collector-web.s.sonraisecurity.com/v1/metrics" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;resourceMetrics&quot;:[{&quot;resource&quot;:{&quot;attributes&quot;:[],&quot;droppedAttributesCount&quot;:0},&quot;scopeMetrics&quot;:[{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-document-load&quot;,&quot;version&quot;:&quot;0.27.1&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-fetch&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-long-task&quot;,&quot;version&quot;:&quot;0.30.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-xml-http-request&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;app_layout_error_boundary_errors_count&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;sum&quot;:{&quot;aggregationTemporality&quot;:2,&quot;isMonotonic&quot;:true,&quot;dataPoints&quot;:[]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.graphql&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;graphql_request_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiUsers&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:509,&quot;min&quot;:509,&quot;max&quot;:509,&quot;startTimeUnixNano&quot;:1680198065344100000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAllMaturityLevels&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:510,&quot;min&quot;:510,&quot;max&quot;:510,&quot;startTimeUnixNano&quot;:1680198065346600000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;currentUser&quot;}}],&quot;bucketCounts&quot;:[0,0,2,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:2,&quot;sum&quot;:1048,&quot;min&quot;:516,&quot;max&quot;:532,&quot;startTimeUnixNano&quot;:1680198065349300000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAllEnvironments&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:522,&quot;min&quot;:522,&quot;max&quot;:522,&quot;startTimeUnixNano&quot;:1680198065358000000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAllSecurityAreas&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:523,&quot;min&quot;:523,&quot;max&quot;:523,&quot;startTimeUnixNano&quot;:1680198065359700000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiOrgConfig&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:523,&quot;min&quot;:523,&quot;max&quot;:523,&quot;startTimeUnixNano&quot;:1680198065360500000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiUIConfig&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:531,&quot;min&quot;:531,&quot;max&quot;:531,&quot;startTimeUnixNano&quot;:1680198065366700000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getCollectorConfigurations&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:572,&quot;min&quot;:572,&quot;max&quot;:572,&quot;startTimeUnixNano&quot;:1680198065409600000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;get_all_roles&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:130,&quot;min&quot;:130,&quot;max&quot;:130,&quot;startTimeUnixNano&quot;:1680198065485800000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getControlFrameworks&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:319,&quot;min&quot;:319,&quot;max&quot;:319,&quot;startTimeUnixNano&quot;:1680198065676900000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;IntrospectionQuery&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:853,&quot;min&quot;:853,&quot;max&quot;:853,&quot;startTimeUnixNano&quot;:1680198066047400000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSavedSearches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:812,&quot;min&quot;:812,&quot;max&quot;:812,&quot;startTimeUnixNano&quot;:1680198066167600000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;saveUserProfile&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:876,&quot;min&quot;:876,&quot;max&quot;:876,&quot;startTimeUnixNano&quot;:1680198066241900000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getResourceLabels&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:903,&quot;min&quot;:903,&quot;max&quot;:903,&quot;startTimeUnixNano&quot;:1680198066262700000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAccounts&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1009,&quot;min&quot;:1009,&quot;max&quot;:1009,&quot;startTimeUnixNano&quot;:1680198066366100000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSubscriptions&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1011,&quot;min&quot;:1011,&quot;max&quot;:1011,&quot;startTimeUnixNano&quot;:1680198066368000000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchSwimlanes&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1110,&quot;min&quot;:1110,&quot;max&quot;:1110,&quot;startTimeUnixNano&quot;:1680198066467200000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;sonrai_user&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:228,&quot;min&quot;:228,&quot;max&quot;:228,&quot;startTimeUnixNano&quot;:1680198066487000000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiSeaches&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1221,&quot;min&quot;:1221,&quot;max&quot;:1221,&quot;startTimeUnixNano&quot;:1680198066576600000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getReportPoll&quot;}}],&quot;bucketCounts&quot;:[0,2,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:2,&quot;sum&quot;:609,&quot;min&quot;:228,&quot;max&quot;:381,&quot;startTimeUnixNano&quot;:1680198066642900000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getReportsInit&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:147,&quot;min&quot;:147,&quot;max&quot;:147,&quot;startTimeUnixNano&quot;:1680198066650600000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TopFiveIssues&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:101,&quot;min&quot;:101,&quot;max&quot;:101,&quot;startTimeUnixNano&quot;:1680198066656900000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getServiceTypes&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:405,&quot;min&quot;:405,&quot;max&quot;:405,&quot;startTimeUnixNano&quot;:1680198066668400000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;licensing&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:168,&quot;min&quot;:168,&quot;max&quot;:168,&quot;startTimeUnixNano&quot;:1680198066722500000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getDataProtectionInsights&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:269,&quot;min&quot;:269,&quot;max&quot;:269,&quot;startTimeUnixNano&quot;:1680198066893400000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getNetworkInsights&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:285,&quot;min&quot;:285,&quot;max&quot;:285,&quot;startTimeUnixNano&quot;:1680198066911200000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getFundamentalInsights&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:325,&quot;min&quot;:325,&quot;max&quot;:325,&quot;startTimeUnixNano&quot;:1680198066950500000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getIdentityInsights&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:358,&quot;min&quot;:358,&quot;max&quot;:358,&quot;startTimeUnixNano&quot;:1680198066982000000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getFamilyRollupQuery&quot;}}],&quot;bucketCounts&quot;:[0,1,1,3,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:5,&quot;sum&quot;:5355,&quot;min&quot;:379,&quot;max&quot;:1374,&quot;startTimeUnixNano&quot;:1680198067005900000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;vulnerabilities_by_time&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:383,&quot;min&quot;:383,&quot;max&quot;:383,&quot;startTimeUnixNano&quot;:1680198067011700000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchClouds&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:478,&quot;min&quot;:478,&quot;max&quot;:478,&quot;startTimeUnixNano&quot;:1680198067035200000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSavedSearches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:899,&quot;min&quot;:899,&quot;max&quot;:899,&quot;startTimeUnixNano&quot;:1680198067139900000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getActiveThreat&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:599,&quot;min&quot;:599,&quot;max&quot;:599,&quot;startTimeUnixNano&quot;:1680198067227900000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;top5ResourcesAtRisk&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:785,&quot;min&quot;:785,&quot;max&quot;:785,&quot;startTimeUnixNano&quot;:1680198067412600000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;top5Vulnerabilities&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:789,&quot;min&quot;:789,&quot;max&quot;:789,&quot;startTimeUnixNano&quot;:1680198067416700000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;vulnerabilitiesByPublishedDate&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:792,&quot;min&quot;:792,&quot;max&quot;:792,&quot;startTimeUnixNano&quot;:1680198067419100000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;InsightsFindingsTrends&quot;}}],&quot;bucketCounts&quot;:[0,0,0,2,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:2,&quot;sum&quot;:2852,&quot;min&quot;:1416,&quot;max&quot;:1436,&quot;startTimeUnixNano&quot;:1680198067972600000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStandardRisk&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1472,&quot;min&quot;:1472,&quot;max&quot;:1472,&quot;startTimeUnixNano&quot;:1680198068027400000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;topInsights&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1607,&quot;min&quot;:1607,&quot;max&quot;:1607,&quot;startTimeUnixNano&quot;:1680198068162700000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getIdentityCounts&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:435,&quot;min&quot;:435,&quot;max&quot;:435,&quot;startTimeUnixNano&quot;:1680198105286500000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAccessKeys&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:512,&quot;min&quot;:512,&quot;max&quot;:512,&quot;startTimeUnixNano&quot;:1680198105442300000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getCrossAccountTrustExposure&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:518,&quot;min&quot;:518,&quot;max&quot;:518,&quot;startTimeUnixNano&quot;:1680198105446700000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getFamilyRollupQuery&quot;}}],&quot;bucketCounts&quot;:[0,0,2,5,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:7,&quot;sum&quot;:8184,&quot;min&quot;:526,&quot;max&quot;:1479,&quot;startTimeUnixNano&quot;:1680198105455900000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TopFiveRiskyIdentities&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:575,&quot;min&quot;:575,&quot;max&quot;:575,&quot;startTimeUnixNano&quot;:1680198105506600000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TopFiveIssues&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:838,&quot;min&quot;:838,&quot;max&quot;:838,&quot;startTimeUnixNano&quot;:1680198105690400000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;topInsights&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:913,&quot;min&quot;:913,&quot;max&quot;:913,&quot;startTimeUnixNano&quot;:1680198105765100000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getOtherIssues&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:844,&quot;min&quot;:844,&quot;max&quot;:844,&quot;startTimeUnixNano&quot;:1680198105776100000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getUnusedIdentity&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:889,&quot;min&quot;:889,&quot;max&quot;:889,&quot;startTimeUnixNano&quot;:1680198105817400000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStandardRisk&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1437,&quot;min&quot;:1437,&quot;max&quot;:1437,&quot;startTimeUnixNano&quot;:1680198106290000100,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getOverpriviledgedIdentity&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1401,&quot;min&quot;:1401,&quot;max&quot;:1401,&quot;startTimeUnixNano&quot;:1680198106331600100,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Identity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getLateralMovementRollup&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1485,&quot;min&quot;:1485,&quot;max&quot;:1485,&quot;startTimeUnixNano&quot;:1680198106413000000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;topInsights&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:446,&quot;min&quot;:446,&quot;max&quot;:446,&quot;startTimeUnixNano&quot;:1680198119847300000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;networkCounts&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:450,&quot;min&quot;:450,&quot;max&quot;:450,&quot;startTimeUnixNano&quot;:1680198119849400000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TopFiveIssues&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:458,&quot;min&quot;:458,&quot;max&quot;:458,&quot;startTimeUnixNano&quot;:1680198119859300000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getFamilyRollupQuery&quot;}}],&quot;bucketCounts&quot;:[0,1,4,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:5,&quot;sum&quot;:3621,&quot;min&quot;:476,&quot;max&quot;:934,&quot;startTimeUnixNano&quot;:1680198119929800000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getOtherIssues&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:496,&quot;min&quot;:496,&quot;max&quot;:496,&quot;startTimeUnixNano&quot;:1680198119950800100,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getEncryption&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:599,&quot;min&quot;:599,&quot;max&quot;:599,&quot;startTimeUnixNano&quot;:1680198120051600100,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStandardRisk&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:975,&quot;min&quot;:975,&quot;max&quot;:975,&quot;startTimeUnixNano&quot;:1680198120375400000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getExposedResources&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:925,&quot;min&quot;:925,&quot;max&quot;:925,&quot;startTimeUnixNano&quot;:1680198120379000000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getRecentChanges&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:929,&quot;min&quot;:929,&quot;max&quot;:929,&quot;startTimeUnixNano&quot;:1680198120383200000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Network&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getUnused&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:932,&quot;min&quot;:932,&quot;max&quot;:932,&quot;startTimeUnixNano&quot;:1680198120386800000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getDataCountsForCloud&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:188,&quot;min&quot;:188,&quot;max&quot;:188,&quot;startTimeUnixNano&quot;:1680198135200300000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getDataCounts&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:224,&quot;min&quot;:224,&quot;max&quot;:224,&quot;startTimeUnixNano&quot;:1680198135234300000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;topInsights&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:564,&quot;min&quot;:564,&quot;max&quot;:564,&quot;startTimeUnixNano&quot;:1680198135575100000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getOtherIssues&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:513,&quot;min&quot;:513,&quot;max&quot;:513,&quot;startTimeUnixNano&quot;:1680198135579100000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStandardRisk&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:576,&quot;min&quot;:576,&quot;max&quot;:576,&quot;startTimeUnixNano&quot;:1680198135586900000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getFamilyRollupQuery&quot;}}],&quot;bucketCounts&quot;:[0,0,3,2,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:5,&quot;sum&quot;:4264,&quot;min&quot;:542,&quot;max&quot;:1041,&quot;startTimeUnixNano&quot;:1680198135606800100,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getKeyAndCert&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:574,&quot;min&quot;:574,&quot;max&quot;:574,&quot;startTimeUnixNano&quot;:1680198135639300000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getClassification&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:578,&quot;min&quot;:578,&quot;max&quot;:578,&quot;startTimeUnixNano&quot;:1680198135642500000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TopFiveIssues&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:688,&quot;min&quot;:688,&quot;max&quot;:688,&quot;startTimeUnixNano&quot;:1680198135699000000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAccess&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:688,&quot;min&quot;:688,&quot;max&quot;:688,&quot;startTimeUnixNano&quot;:1680198135753000000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/DataProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getEncryptionKeys&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1035,&quot;min&quot;:1035,&quot;max&quot;:1035,&quot;startTimeUnixNano&quot;:1680198136099700000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fundamentalCounts&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:375,&quot;min&quot;:375,&quot;max&quot;:375,&quot;startTimeUnixNano&quot;:1680198163885600000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;topInsights&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:552,&quot;min&quot;:552,&quot;max&quot;:552,&quot;startTimeUnixNano&quot;:1680198164063500000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TopFiveIssues&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:899,&quot;min&quot;:899,&quot;max&quot;:899,&quot;startTimeUnixNano&quot;:1680198164410800000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getFamilyRollupQuery&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,2,2,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:5,&quot;sum&quot;:13389,&quot;min&quot;:1000,&quot;max&quot;:3448,&quot;startTimeUnixNano&quot;:1680198164586400000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getDatabasePosture&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1006,&quot;min&quot;:1006,&quot;max&quot;:1006,&quot;startTimeUnixNano&quot;:1680198164592800000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getIAM&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1347,&quot;min&quot;:1347,&quot;max&quot;:1347,&quot;startTimeUnixNano&quot;:1680198164933900000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getRecentChanges&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,1,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:2054,&quot;min&quot;:2054,&quot;max&quot;:2054,&quot;startTimeUnixNano&quot;:1680198165639600000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getPlatform&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:3099,&quot;min&quot;:3099,&quot;max&quot;:3099,&quot;startTimeUnixNano&quot;:1680198166685000000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAuditLoggingQuery&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:3137,&quot;min&quot;:3137,&quot;max&quot;:3137,&quot;startTimeUnixNano&quot;:1680198166721900000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Fundamental&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStandardRisk&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:4811,&quot;min&quot;:4811,&quot;max&quot;:4811,&quot;startTimeUnixNano&quot;:1680198168322900000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/WorkloadProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;vulnerabilities_group_by_vm_count&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:998,&quot;min&quot;:998,&quot;max&quot;:998,&quot;startTimeUnixNano&quot;:1680198183286900000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/WorkloadProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;vulnerabilities_by_published_date&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:999,&quot;min&quot;:999,&quot;max&quot;:999,&quot;startTimeUnixNano&quot;:1680198183288300000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/WorkloadProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;vulnerabilities_group_by_vm&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1031,&quot;min&quot;:1031,&quot;max&quot;:1031,&quot;startTimeUnixNano&quot;:1680198183319100000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/WorkloadProtection&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;vulnerabilities_by_time&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1518,&quot;min&quot;:1518,&quot;max&quot;:1518,&quot;startTimeUnixNano&quot;:1680198183808800000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Compliance&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;resources_total&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:592,&quot;min&quot;:592,&quot;max&quot;:592,&quot;startTimeUnixNano&quot;:1680198198621800000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Compliance&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchStandards&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:714,&quot;min&quot;:714,&quot;max&quot;:714,&quot;startTimeUnixNano&quot;:1680198198706900000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Compliance&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;compliance_risk_trend&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:823,&quot;min&quot;:823,&quot;max&quot;:823,&quot;startTimeUnixNano&quot;:1680198198852300000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Compliance&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getObjectives&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,0,1,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:5749,&quot;min&quot;:5749,&quot;max&quot;:5749,&quot;startTimeUnixNano&quot;:1680198203742800100,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Compliance&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;riskCountsV2&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,0,1,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:9904,&quot;min&quot;:9904,&quot;max&quot;:9904,&quot;startTimeUnixNano&quot;:1680198207935000000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Compliance&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;compliance_issues_by_security_area&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,0,1,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:9916,&quot;min&quot;:9916,&quot;max&quot;:9916,&quot;startTimeUnixNano&quot;:1680198207944400100,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Compliance&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;policy_compliance_donut&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,0,1,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:9928,&quot;min&quot;:9928,&quot;max&quot;:9928,&quot;startTimeUnixNano&quot;:1680198207957600000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Compliance&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;check_if_trends_exist&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,0,0,1,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:10079,&quot;min&quot;:10079,&quot;max&quot;:10079,&quot;startTimeUnixNano&quot;:1680198208073000000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Compliance&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;compliance_coverage&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,0,0,1,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:14135,&quot;min&quot;:14135,&quot;max&quot;:14135,&quot;startTimeUnixNano&quot;:1680198212165900000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSCCards&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1391,&quot;min&quot;:1391,&quot;max&quot;:1391,&quot;startTimeUnixNano&quot;:1680198222283500000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;piechartQuery&quot;}}],&quot;bucketCounts&quot;:[0,3,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:3,&quot;sum&quot;:1239,&quot;min&quot;:384,&quot;max&quot;:439,&quot;startTimeUnixNano&quot;:1680198222859800000,&quot;timeUnixNano&quot;:1680198274839700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;tableWidgetQuery&quot;}}],&quot;bucketCounts&quot;:[0,0,1,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:2,&quot;sum&quot;:1884,&quot;min&quot;:700,&quot;max&quot;:1184,&quot;startTimeUnixNano&quot;:1680198223176300000,&quot;timeUnixNano&quot;:1680198274839700000}]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.newroute&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;newtab_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Insights/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:56,&quot;min&quot;:56,&quot;max&quot;:56,&quot;startTimeUnixNano&quot;:1680198066558000000,&quot;timeUnixNano&quot;:1680198274839700000}]}},{&quot;name&quot;:&quot;newroute_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[]}}]}]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v1/metrics</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://login.s.sonraisecurity.com/oauth/token" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;grant_type&quot;:&quot;authorization_code&quot;,&quot;redirect_uri&quot;:&quot;https://app.s.sonraisecurity.com/Login&quot;,&quot;audience&quot;:&quot;stage-graphql-server.s.sonraisecurity.com&quot;,&quot;client_id&quot;:&quot;7fQzdcMRARuhzmfP3xoR7JAjfSlttq95&quot;,&quot;code_verifier&quot;:&quot;Vul_iwy~wL5by6ijb2XMyS6K0rkfIZM03JW3qKP_1xM&quot;,&quot;code&quot;:&quot;ZHggw7qj1MueMkJTBQHfhEn-7MBh9JOjVbqOpz54gOQqj&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">oauth/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://front-end-collector-web.s.sonraisecurity.com/v1/metrics" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;resourceMetrics&quot;:[{&quot;resource&quot;:{&quot;attributes&quot;:[],&quot;droppedAttributesCount&quot;:0},&quot;scopeMetrics&quot;:[{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-document-load&quot;,&quot;version&quot;:&quot;0.27.1&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-fetch&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-long-task&quot;,&quot;version&quot;:&quot;0.30.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-xml-http-request&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;app_layout_error_boundary_errors_count&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;sum&quot;:{&quot;aggregationTemporality&quot;:2,&quot;isMonotonic&quot;:true,&quot;dataPoints&quot;:[]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.graphql&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;graphql_request_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.newroute&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;newtab_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[]}},{&quot;name&quot;:&quot;newroute_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[]}}]}]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v1/metrics</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://front-end-collector-web.s.sonraisecurity.com/v1/metrics" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;resourceMetrics&quot;:[{&quot;resource&quot;:{&quot;attributes&quot;:[],&quot;droppedAttributesCount&quot;:0},&quot;scopeMetrics&quot;:[{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-document-load&quot;,&quot;version&quot;:&quot;0.27.1&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-fetch&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-long-task&quot;,&quot;version&quot;:&quot;0.30.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-xml-http-request&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;app_layout_error_boundary_errors_count&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;sum&quot;:{&quot;aggregationTemporality&quot;:2,&quot;isMonotonic&quot;:true,&quot;dataPoints&quot;:[]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.graphql&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;graphql_request_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.newroute&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;newtab_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[]}},{&quot;name&quot;:&quot;newroute_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[]}}]}]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v1/metrics</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Dashboard_T07_getSonraiSeaches" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getSonraiSeaches&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getSonraiSeaches {\n  SavedQueries {\n    items(limit: -1) {\n      name\n      query\n      variables {\n        items {\n          defaultValue\n          name\n          __typename\n        }\n        __typename\n      }\n      srn\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">943f43df60c7ac8a5003c9c7e5d44139</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:efe8-4474-b526-8111b644921f/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">05ff94393a039200</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">943f43df60c7ac8a5003c9c7e5d44139-05ff94393a039200-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getSonraiSeaches</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Dashboard_T08_getSavedSearches" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getSavedSearches&quot;,&quot;variables&quot;:{&quot;includeDetails&quot;:true},&quot;query&quot;:&quot;query getSavedSearches($includeDetails: Boolean = true) {\n  Searches {\n    items(limit: -1) {\n      name\n      description\n      query\n      createdDate\n      createdBy\n      sid\n      srn\n      lastModified\n      rootQueryName\n      resourceId\n      containedByWidget @include(if: $includeDetails) {\n        count\n        items(limit: -1) {\n          title\n          type\n          srn\n          containedBy {\n            items {\n              name\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      containedByControlPolicy @include(if: $includeDetails) {\n        count\n        items(limit: -1) {\n          title\n          srn\n          __typename\n        }\n        __typename\n      }\n      ownedByOrganization @include(if: $includeDetails) {\n        items {\n          sid\n          name\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">d9703ec5a9e29637631976b324d374d3</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:90be-4d23-ae84-90081b3718e2/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">1eaaf2ad571b2f49</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">d9703ec5a9e29637631976b324d374d3-1eaaf2ad571b2f49-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getSavedSearches</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Dashboard_T09_fetchSwimlanes" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;fetchSwimlanes&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query fetchSwimlanes {\n  Swimlanes {\n    items(limit: -1) {\n      description\n      label\n      title\n      srn\n      defaultImportance\n      createdBy\n      sid\n      preventionEnabled\n      lastModified\n      createdDate\n      name\n      accounts\n      names\n      resourceIds\n      tags\n      resourceId\n      environments\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">a13ba070fd6bf5e082189100a923729e</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:96fd-4136-8b8a-931cef11928f/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">b8e58dc59262476f</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">a13ba070fd6bf5e082189100a923729e-b8e58dc59262476f-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">fetchSwimlanes</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Dashboard_T10_getAccounts" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getAccounts&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getAccounts {\n  Accounts {\n    items(limit: -1) {\n      name\n      srn\n      friendlyName\n      account\n      cloudType\n      type\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">dbdd91628f0b0a7f74c71737a7d4521f</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:e6e3-4e6f-962d-23863d1a7347/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">fd458bb422e4fe72</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">dbdd91628f0b0a7f74c71737a7d4521f-fd458bb422e4fe72-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getAccounts</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Dashboard_T11_getSubscriptions" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getSubscriptions&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getSubscriptions {\n  Subscriptions {\n    items(limit: -1) {\n      friendlyName\n      name\n      srn\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">9494037fe62c7a90eba317ed8a568ad2</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:db63-4986-9094-305760726c93/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">545351bc59e60720</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">9494037fe62c7a90eba317ed8a568ad2-545351bc59e60720-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getSubscriptions</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="stage11733927_10_Summary" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Summary_T01_fetchControlPoliciesOptions" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;fetchControlPoliciesOptions&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query fetchControlPoliciesOptions {\n  ControlPolicies {\n    items(limit: -1) {\n      srn\n      title\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">91bdbadfae8d11a1ea989e9434c7494e</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:3f2c-455f-b8f2-8d5f0b4054b7/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">2c01a499b2787797</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">91bdbadfae8d11a1ea989e9434c7494e-2c01a499b2787797-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">fetchControlPoliciesOptions</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Summary_T02_fetchCrmTicketKeyOptions" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;fetchCrmTicketKeyOptions&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query fetchCrmTicketKeyOptions {\n  identityOptions: getChangeDetectionOptions(resourceType: Identity) {\n    keyType\n    keyName\n    __typename\n  }\n  dataOptions: getChangeDetectionOptions(resourceType: Data) {\n    keyType\n    keyName\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">91bdbadfae8d11a1ea989e9434c7494e</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:c85f-4f90-9d39-4f7a4e02459d/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">1396e0712282d61e</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">91bdbadfae8d11a1ea989e9434c7494e-1396e0712282d61e-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">fetchCrmTicketKeyOptions</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Summary_T03_counPanelAssetInventory" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;counPanelAssetInventory&quot;,&quot;variables&quot;:{&quot;includeAws&quot;:true,&quot;includeAzure&quot;:true,&quot;includeGcp&quot;:true,&quot;includeOci&quot;:true,&quot;swimlaneFilter&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:stage11733927::Swimlane/6cb632fe-951d-4481-8663-76188ff0024c&quot;,&quot;srn:stage11733927::Swimlane/c87de86d-6448-4312-8141-c67f10ffbc66&quot;,&quot;srn:stage11733927::Swimlane/54346aae-f962-4303-8775-558e376772da&quot;,&quot;srn:stage11733927::Swimlane/632c1e2a-0cf7-4432-b593-4b0c45c082d5&quot;,&quot;srn:stage11733927::Swimlane/e5d5b4dc-4e67-4fd5-999b-a782e1e83878&quot;,&quot;srn:stage11733927::Swimlane/49a44cb4-862b-4598-9ebb-75582b9e1986&quot;,&quot;srn:stage11733927::Swimlane/5861c490-03f2-4ca8-a060-f822e88dd658&quot;,&quot;srn:stage11733927::Swimlane/846176cf-47c2-4d8f-b094-43e1d5f161fc&quot;,&quot;srn:stage11733927::Swimlane/635c2880-ca1d-4434-92a4-c7feaf74ae53&quot;,&quot;srn:stage11733927::Swimlane/4f7e22fa-6c07-41bc-943d-23ad332ddf18&quot;,&quot;srn:stage11733927::Swimlane/c177456e-edcf-4bad-aeac-2e7834afd322&quot;,&quot;srn:stage11733927::Swimlane/be0a8d40-d422-4eb4-a940-d95da8486981&quot;,&quot;srn:stage11733927::Swimlane/0c69d424-e054-45d7-a19f-c9b86f3a2c80&quot;,&quot;srn:stage11733927::Swimlane/9057a678-a9c9-4088-ac95-f42d99e20d45&quot;,&quot;srn:stage11733927::Swimlane/8ffcd427-b034-4080-9feb-74abe4a2bc1a&quot;,&quot;srn:stage11733927::Swimlane/17dce178-87b1-4b25-be32-ce58a03cffd7&quot;,&quot;srn:stage11733927::Swimlane/60b72733-a220-4260-8ed1-66671f59597e&quot;,&quot;srn:stage11733927::Swimlane/798d6f98-48ac-4a71-b704-3765e39d5938&quot;,&quot;srn:stage11733927::Swimlane/7bc365e5-b897-4b58-8753-be85e03573f6&quot;,&quot;srn:stage11733927::Swimlane/7e986fc7-7db9-475c-898b-c666b1c7411a&quot;,&quot;srn:stage11733927::Swimlane/d8db091e-0147-40fe-bef0-08f2f5d172cf&quot;,&quot;srn:stage11733927::Swimlane/a459fece-58ef-49e2-9779-357f876e15e9&quot;,&quot;srn:stage11733927::Swimlane/a6736f91-4891-4e61-b96d-7ca3d9ff25f7&quot;,&quot;srn:stage11733927::Swimlane/1fbc5e7c-64ac-4f4b-a62c-14ebd47a5fde&quot;,&quot;srn:stage11733927::Swimlane/2c9894ff-d4de-4d83-9557-630d70634d8a&quot;,&quot;srn:stage11733927::Swimlane/0fccef66-2e58-4164-ae72-cf6528270022&quot;,&quot;srn:stage11733927::Swimlane/082a0e22-5dad-41ee-b7ab-15e567119797&quot;,&quot;srn:stage11733927::Swimlane/882f219e-e3aa-453e-b997-91e8e0b5516e&quot;,&quot;srn:stage11733927::Swimlane/f47a8e25-188a-4c9d-91d6-1a54883e9fa2&quot;,&quot;srn:stage11733927::Swimlane/a766f0c1-f619-4fba-94a9-498aeb81624c&quot;,&quot;srn:stage11733927::Swimlane/edb2917d-81a3-4b74-9e22-1af5f507a2fe&quot;,&quot;srn:stage11733927::Swimlane/d84a67d6-760c-4a6a-924b-c8f46c9d5360&quot;,&quot;srn:stage11733927::Swimlane/57cdd790-cb15-4213-a618-d7306ae5e595&quot;,&quot;srn:stage11733927::Swimlane/454d1176-305e-40c3-ab66-c6fdac382a1d&quot;,&quot;srn:stage11733927::Swimlane/00b2a8b9-345b-40eb-abe4-0d74832b3cfb&quot;,&quot;srn:stage11733927::Swimlane/525ec320-5276-4bbc-b8bc-89feeeb14328&quot;,&quot;srn:stage11733927::Swimlane/f5c522fa-e7f4-4be4-8f0e-469e4f603f36&quot;,&quot;srn:stage11733927::Swimlane/94eab80b-4b32-46c2-9ee2-20c7e898eeb3&quot;,&quot;srn:stage11733927::Swimlane/3fc23896-66b4-4bbd-925d-a977ab832acc&quot;,&quot;srn:stage11733927::Swimlane/7c2896dc-7604-4f5b-bc4e-0a0034d061d2&quot;,&quot;srn:stage11733927::Swimlane/d61afe67-c651-46bd-904b-9a68988ee3c3&quot;,&quot;srn:stage11733927::Swimlane/60757a12-aa4a-4e35-8418-c6e9b26145e0&quot;,&quot;srn:stage11733927::Swimlane/2a6bd270-2f19-4535-8244-014b2e43be49&quot;,&quot;srn:stage11733927::Swimlane/6720e478-06db-444d-a19f-42b61ba08d6b&quot;,&quot;srn:stage11733927::Swimlane/52d5c2a5-9132-44d9-8eb8-1386b5bb8dc4&quot;,&quot;srn:stage11733927::Swimlane/56517df8-c68c-4481-a547-8e05d48454fb&quot;,&quot;srn:stage11733927::Swimlane/5c8ebc78-17e2-49cb-acc7-fb200922d32a&quot;,&quot;srn:stage11733927::Swimlane/876ed902-5674-475d-9f94-8466a06c5625&quot;,&quot;srn:stage11733927::Swimlane/054e6112-5c09-4a64-806f-fdc03d4887da&quot;,&quot;srn:stage11733927::Swimlane/ba3b5b6e-9c31-4053-b37a-03d2dd0d558a&quot;,&quot;srn:stage11733927::Swimlane/e058b72f-904d-428d-9225-ea92e9166a9d&quot;,&quot;srn:stage11733927::Swimlane/d622d287-90d2-49d1-add1-22fdbb5cc4d0&quot;,&quot;srn:stage11733927::Swimlane/2e0fc915-74d7-4938-bb0e-ecac2193c9a0&quot;,&quot;srn:stage11733927::Swimlane/81a239ab-ac92-4b0d-899d-74c35e600b2a&quot;,&quot;srn:stage11733927::Swimlane/6579051f-fc8a-46e7-882a-0cde2219f9ef&quot;,&quot;srn:stage11733927::Swimlane/24f4367c-8a0e-4905-8811-0726d4d112bd&quot;,&quot;srn:stage11733927::Swimlane/93f43210-d0bd-486d-baaa-232b79ecbe06&quot;,&quot;srn:stage11733927::Swimlane/6024d0eb-d1bb-4d48-9fd3-f96fff0e1d2e&quot;,&quot;srn:stage11733927::Swimlane/e55fb989-dbe7-46f7-8fa4-957c7e4acb52&quot;,&quot;srn:stage11733927::Swimlane/05fe70d3-183b-4452-b0f5-2e8f2aeb5996&quot;,&quot;srn:stage11733927::Swimlane/186b2a2d-4b46-4639-a942-bd396c53bd67&quot;,&quot;srn:stage11733927::Swimlane/0bbca8be-ed54-4677-b581-973950ecfb9c&quot;,&quot;srn:stage11733927::Swimlane/a9443082-562d-4269-a53d-fba35565b4ce&quot;,&quot;srn:stage11733927::Swimlane/5e06ca2b-15b9-4654-99c0-2f2731b55e96&quot;,&quot;srn:stage11733927::Swimlane/55773a02-470e-4cf8-95de-2845ef4408d2&quot;,&quot;srn:stage11733927::Swimlane/ac7784fd-bd3d-4966-9bac-610c39053e99&quot;,&quot;srn:stage11733927::Swimlane/ff34414f-e6d4-4b25-a45c-05c3d603dec9&quot;,&quot;srn:stage11733927::Swimlane/538951ca-f147-4685-90f1-083473ebba0e&quot;,&quot;srn:stage11733927::Swimlane/3ace1654-4a66-45da-9b3d-78d7b24583d2&quot;,&quot;srn:stage11733927::Swimlane/4dfead77-670a-4c66-b1da-81ed07092089&quot;,&quot;srn:stage11733927::Swimlane/d470e390-13f2-4859-97d6-2b2bb4fc3cba&quot;,&quot;srn:stage11733927::Swimlane/f8e036fd-4c39-4abf-b142-24a7c13adf91&quot;,&quot;srn:stage11733927::Swimlane/4236caae-3e01-4b87-8a50-765370a840ef&quot;]}},&quot;query&quot;:&quot;query counPanelAssetInventory($includeAws: Boolean = false, $includeAzure: Boolean = false, $includeGcp: Boolean = false, $includeOci: Boolean = false, $swimlaneFilter: StringOperator) {\n  publicClouds: Accounts(\n    where: {and: [{active: {value: true}}, {type: {op: NEQ, value: OCICompartment}}]}\n  ) {\n    items(limit: -1) {\n      cloudType\n      name\n      srn\n      __typename\n    }\n    __typename\n  }\n  ... on Query @include(if: $includeAws) {\n    aws_Identity_User: Users(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;aws\&quot;}}, {type: {value: User}}]}\n    ) {\n      count\n      __typename\n    }\n    aws_Identity_Group: Groups(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;aws\&quot;}}, {type: {value: Group}}]}\n    ) {\n      count\n      __typename\n    }\n    aws_Identity_AWSAccessKey: AccessKeys(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;aws\&quot;}}, {type: {value: AWSAccessKey}}]}\n    ) {\n      count\n      __typename\n    }\n    aws_Identity_SAMLProvider: IdentityProviders(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;aws\&quot;}}, {type: {value: SAMLProvider}}]}\n    ) {\n      count\n      __typename\n    }\n    aws_Data_Bucket: DataContainers(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;aws\&quot;}}, {type: {value: Bucket}}]}\n    ) {\n      count\n      __typename\n    }\n    aws_Data_Table: DataContainers(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;aws\&quot;}}, {type: {value: Table}}]}\n    ) {\n      count\n      __typename\n    }\n    aws_Data_Database: DataContainers(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;aws\&quot;}}, {type: {value: Database}}]}\n    ) {\n      count\n      __typename\n    }\n    aws_Data_ReplicationGroup: DataContainers(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;aws\&quot;}}, {type: {value: ReplicationGroup}}]}\n    ) {\n      count\n      __typename\n    }\n    aws_Data_EBS: DataStores(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;aws\&quot;}}, {type: {value: EBS}}]}\n    ) {\n      count\n      __typename\n    }\n    aws_Infrastructure_VPC: Network(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;aws\&quot;}}, {type: {value: VPC}}]}\n    ) {\n      count\n      __typename\n    }\n    aws_Infrastructure_EC2: Compute(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;aws\&quot;}}, {type: {value: EC2}}]}\n    ) {\n      count\n      __typename\n    }\n    aws_Infrastructure_AWSLambda: Compute(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;aws\&quot;}}, {type: {value: AWSLambda}}]}\n    ) {\n      count\n      __typename\n    }\n    aws_Infrastructure_AWSKubernetesCluster: Compute(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;aws\&quot;}}, {type: {value: AWSKubernetesCluster}}]}\n    ) {\n      count\n      __typename\n    }\n    aws_Infrastructure_CloudFrontDistribution: NetworkComponents(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;aws\&quot;}}, {type: {value: CloudFrontDistribution}}]}\n    ) {\n      count\n      __typename\n    }\n    __typename\n  }\n  ... on Query @include(if: $includeAzure) {\n    azure_Identity_AzureTenant: Accounts(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;azure\&quot;}}, {type: {value: AzureTenant}}]}\n    ) {\n      count\n      __typename\n    }\n    azure_Identity_ServicePrincipal: Users(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;azure\&quot;}}, {type: {value: ServicePrincipal}}]}\n    ) {\n      count\n      __typename\n    }\n    azure_Identity_ActiveDirectoryUser: Users(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;azure\&quot;}}, {type: {value: ActiveDirectoryUser}}]}\n    ) {\n      count\n      __typename\n    }\n    azure_Identity_AzureManagedIdentity: IdentityProviders(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;azure\&quot;}}, {type: {value: AzureManagedIdentity}}]}\n    ) {\n      count\n      __typename\n    }\n    azure_Identity_AzureManagementGroup: OrganizationalUnits(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;azure\&quot;}}, {type: {value: AzureManagementGroup}}]}\n    ) {\n      count\n      __typename\n    }\n    azure_Data_StorageAccount: DataStores(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;azure\&quot;}}, {type: {value: StorageAccount}}]}\n    ) {\n      count\n      __typename\n    }\n    azure_Data_FileShare: DataContainers(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;azure\&quot;}}, {type: {value: FileShare}}]}\n    ) {\n      count\n      __typename\n    }\n    azure_Data_SQLServer: DataStores(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;azure\&quot;}}, {type: {value: SQLServer}}]}\n    ) {\n      count\n      __typename\n    }\n    azure_Data_MySQL: DataStores(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;azure\&quot;}}, {type: {value: MySQL}}]}\n    ) {\n      count\n      __typename\n    }\n    azure_Infrastructure_VNET: Network(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;azure\&quot;}}, {type: {value: VNET}}]}\n    ) {\n      count\n      __typename\n    }\n    azure_Infrastructure_VirtualMachine: Compute(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;azure\&quot;}}, {type: {value: VirtualMachine}}]}\n    ) {\n      count\n      __typename\n    }\n    azure_Infrastructure_AzureSubnet: NetworkSubnet(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;azure\&quot;}}, {type: {value: AzureSubnet}}]}\n    ) {\n      count\n      __typename\n    }\n    azure_Infrastructure_NetworkLoadBalancer: NetworkComponents(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;azure\&quot;}}, {type: {value: NetworkLoadBalancer}}]}\n    ) {\n      count\n      __typename\n    }\n    azure_Infrastructure_AzureAppGateway: NetworkComponents(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;aws\&quot;}}, {type: {value: AzureAppGateway}}]}\n    ) {\n      count\n      __typename\n    }\n    azure_Infrastructure_AzureFunctionTrigger: Triggers(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;azure\&quot;}}, {type: {value: AzureFunctionTrigger}}]}\n    ) {\n      count\n      __typename\n    }\n    __typename\n  }\n  ... on Query @include(if: $includeGcp) {\n    gcp_Identity_GCPServiceAccount: Users(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;gcp\&quot;}}, {type: {value: GCPServiceAccount}}]}\n    ) {\n      count\n      __typename\n    }\n    gcp_Identity_GCPService: Users(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;gcp\&quot;}}, {type: {value: GCPService}}]}\n    ) {\n      count\n      __typename\n    }\n    gcp_Data_GCPStorageBucket: DataContainers(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;gcp\&quot;}}, {type: {value: GCPStorageBucket}}]}\n    ) {\n      count\n      __typename\n    }\n    gcp_Data_GcpDisk: BlockStorage(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;gcp\&quot;}}, {type: {value: GcpDisk}}]}\n    ) {\n      count\n      __typename\n    }\n    gcp_Infrastructure_VPC: Network(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;gcp\&quot;}}, {type: {value: VPC}}]}\n    ) {\n      count\n      __typename\n    }\n    gcp_Infrastructure_VirtualMachine: Compute(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;gcp\&quot;}}, {type: {value: VirtualMachine}}]}\n    ) {\n      count\n      __typename\n    }\n    gcp_Infrastructure_GCPSubnetwork: NetworkSubnet(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;gcp\&quot;}}, {type: {value: GCPSubnetwork}}]}\n    ) {\n      count\n      __typename\n    }\n    __typename\n  }\n  ... on Query @include(if: $includeOci) {\n    oci_Identity_OCIUser: Users(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;oci\&quot;}}, {type: {value: OCIUser}}]}\n    ) {\n      count\n      __typename\n    }\n    oci_Identity_OCIGroup: Groups(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;oci\&quot;}}, {type: {value: OCIGroup}}]}\n    ) {\n      count\n      __typename\n    }\n    oci_Identity_OCIDynamicGroup: IdentityReferences(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;oci\&quot;}}, {type: {value: OCIDynamicGroup}}]}\n    ) {\n      count\n      __typename\n    }\n    oci_Data_OCIBucket: DataContainers(\n      where: {and: [{active: {value: true}}, {swimlaneSRNs: $swimlaneFilter}, {cloudType: {value: \&quot;oci\&quot;}}, {type: {value: OCIBucket}}]}\n    ) {\n      count\n      __typename\n    }\n    oci_Infrastructure_OCIVCN: Network(\n      where: {and: [{active: {value: true}}, {cloudType: {value: \&quot;oci\&quot;}}, {type: {value: OCIVCN}}]}\n    ) {\n      count\n      __typename\n    }\n    oci_Infrastructure_OCILoadBalancer: NetworkComponents(\n      where: {and: [{active: {value: true}}, {cloudType: {value: \&quot;oci\&quot;}}, {type: {value: OCILoadBalancer}}]}\n    ) {\n      count\n      __typename\n    }\n    oci_Infrastructure_OCISubnet: NetworkSubnet(\n      where: {and: [{active: {value: true}}, {cloudType: {value: \&quot;oci\&quot;}}, {type: {value: OCISubnet}}]}\n    ) {\n      count\n      __typename\n    }\n    oci_Infrastructure_OCICompute: Compute(\n      where: {and: [{active: {value: true}}, {cloudType: {value: \&quot;oci\&quot;}}, {type: {op: IN_LIST, values: [OCIInstance, OCIDedicatedVmHost]}}]}\n    ) {\n      count\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">91bdbadfae8d11a1ea989e9434c7494e</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:7d86-4927-856a-02f7fb0d5750/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">7dd7df20b6b5eb48</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">91bdbadfae8d11a1ea989e9434c7494e-7dd7df20b6b5eb48-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">counPanelAssetInventory</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Summary_T04_fetchSummaryPanelData" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;fetchSummaryPanelData&quot;,&quot;variables&quot;:{&quot;totalsFilter&quot;:{&quot;swimlaneSrn&quot;:{&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyMetaType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;NEW&quot;]},&quot;environment&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;Production&quot;,&quot;Sensitive Data&quot;]}},&quot;platformFilter&quot;:{&quot;controlPolicyMetaType&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;PLATFORM&quot;},&quot;ticketKey&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;ticketType&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;Policy&quot;},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;ticketKeyName&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;maturityArea&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;environment&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;Production&quot;,&quot;Sensitive Data&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;NEW&quot;]}},&quot;identityFilter&quot;:{&quot;controlPolicyMetaType&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;IDENTITY&quot;},&quot;ticketKey&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;ticketType&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;Policy&quot;},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;ticketKeyName&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;maturityArea&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;environment&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;Production&quot;,&quot;Sensitive Data&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;NEW&quot;]}},&quot;dataFilter&quot;:{&quot;controlPolicyMetaType&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;DATA&quot;},&quot;ticketKey&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;ticketType&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;Policy&quot;},&quot;swimlaneSrn&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;ticketKeyName&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;maturityArea&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;environment&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;Production&quot;,&quot;Sensitive Data&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;NEW&quot;]}}},&quot;query&quot;:&quot;query fetchSummaryPanelData($totalsFilter: TicketRollupFilter!, $platformFilter: TicketRollupFilter!, $identityFilter: TicketRollupFilter!, $dataFilter: TicketRollupFilter!) {\n  totals: TicketRollups(where: $totalsFilter, includeRollup: {environment: true}) {\n    items {\n      count\n      riskScore\n      riskScoreDescription\n      riskScoreNumeric\n      controlPolicyMetaType\n      __typename\n    }\n    __typename\n  }\n  platform: TicketRollups(\n    where: $platformFilter\n    includeRollup: {environment: true}\n  ) {\n    items(orderBy: {riskScore: {order: ASC}}, limit: 4) {\n      ...all_the_fields\n      __typename\n    }\n    __typename\n  }\n  identity: TicketRollups(\n    where: $identityFilter\n    includeRollup: {environment: true}\n  ) {\n    items(orderBy: {riskScore: {order: ASC}}, limit: 4) {\n      ...all_the_fields\n      __typename\n    }\n    __typename\n  }\n  data: TicketRollups(where: $dataFilter, includeRollup: {environment: true}) {\n    items(orderBy: {riskScore: {order: ASC}}, limit: 4) {\n      ...all_the_fields\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment all_the_fields on TicketRollup {\n  riskScore\n  riskScoreDescription\n  riskScoreNumeric\n  ticketKey\n  ticketKeyName\n  maturityArea\n  count\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">91bdbadfae8d11a1ea989e9434c7494e</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:8f5e-4b0e-a839-c497208e2bba/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">9b96d23342f3bca6</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">91bdbadfae8d11a1ea989e9434c7494e-9b96d23342f3bca6-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">fetchSummaryPanelData</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Summary_T05_resourcesRisksPanelData" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;resourcesRisksPanelData&quot;,&quot;variables&quot;:{&quot;limit&quot;:6,&quot;filter&quot;:{&quot;swimlaneSrns&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;resourceName&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;resourceType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;resourceLabel&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;resourceSRN&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:null},&quot;environment&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;Production&quot;,&quot;Sensitive Data&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;NEW&quot;]},&quot;severityCategory&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;CRITICAL&quot;]}},&quot;orderBy&quot;:[{&quot;riskScore&quot;:{&quot;order&quot;:&quot;ASC&quot;}}]},&quot;query&quot;:&quot;query resourcesRisksPanelData($filter: TicketRollupFilter!, $orderBy: [TicketRollupOrder], $limit: Long = 6, $preaggregationLimit: Long = 1000) {\n  TicketRollups(where: $filter, includeRollup: {environment: true}) {\n    items(\n      orderBy: $orderBy\n      limit: $limit\n      preaggregationLimit: $preaggregationLimit\n    ) {\n      resourceSRN\n      resourceName\n      resourceType\n      resourceLabel\n      count\n      riskScoreNumeric\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">91bdbadfae8d11a1ea989e9434c7494e</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:fcf2-48c8-aab2-2f2a526b5ec3/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">41236dd5f7552181</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">91bdbadfae8d11a1ea989e9434c7494e-41236dd5f7552181-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">resourcesRisksPanelData</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Summary_T06_risk_levels_by_metatype" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;risk_levels_by_metatype&quot;,&quot;variables&quot;:{&quot;from&quot;:&quot;2023-02-28T00:00:00.000Z&quot;,&quot;to&quot;:&quot;2023-03-29T23:59:59.999Z&quot;,&quot;granularity&quot;:&quot;DAY&quot;,&quot;metaType&quot;:&quot;PLATFORM&quot;,&quot;environmentNames&quot;:[&quot;Production&quot;,&quot;Sensitive Data&quot;]},&quot;query&quot;:&quot;query risk_levels_by_metatype($metaType: String!, $to: DateTime!, $from: DateTime!, $environmentNames: [String!]!, $granularity: TicketTrendGranularity!) {\n  TicketTrends(\n    granularity: {granularity: $granularity}\n    where: {dateTime: {op: BETWEEN, values: [$from, $to]}, metaType: {op: EQ, value: $metaType}, environmentName: {op: IN_LIST, values: $environmentNames}, status: {op: EQ, value: \&quot;NEW\&quot;}}\n    type: {type: RISK_LEVELS}\n  ) {\n    items {\n      dateTime\n      riskLevel\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">91bdbadfae8d11a1ea989e9434c7494e</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:5134-47a6-9361-218666f202bc/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">095838453014a18b</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">91bdbadfae8d11a1ea989e9434c7494e-095838453014a18b-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">risk_levels_by_metatype</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Summary_T07_risk_levels_by_metatype" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;risk_levels_by_metatype&quot;,&quot;variables&quot;:{&quot;from&quot;:&quot;2023-02-28T00:00:00.000Z&quot;,&quot;to&quot;:&quot;2023-03-29T23:59:59.999Z&quot;,&quot;granularity&quot;:&quot;DAY&quot;,&quot;metaType&quot;:&quot;IDENTITY&quot;,&quot;environmentNames&quot;:[&quot;Production&quot;,&quot;Sensitive Data&quot;]},&quot;query&quot;:&quot;query risk_levels_by_metatype($metaType: String!, $to: DateTime!, $from: DateTime!, $environmentNames: [String!]!, $granularity: TicketTrendGranularity!) {\n  TicketTrends(\n    granularity: {granularity: $granularity}\n    where: {dateTime: {op: BETWEEN, values: [$from, $to]}, metaType: {op: EQ, value: $metaType}, environmentName: {op: IN_LIST, values: $environmentNames}, status: {op: EQ, value: \&quot;NEW\&quot;}}\n    type: {type: RISK_LEVELS}\n  ) {\n    items {\n      dateTime\n      riskLevel\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">91bdbadfae8d11a1ea989e9434c7494e</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:365d-444e-b0d1-8889cf761a74/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">8439b6057cf2ac15</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">91bdbadfae8d11a1ea989e9434c7494e-8439b6057cf2ac15-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">risk_levels_by_metatype</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Summary_T08_risk_levels_by_metatype" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;risk_levels_by_metatype&quot;,&quot;variables&quot;:{&quot;from&quot;:&quot;2023-02-28T00:00:00.000Z&quot;,&quot;to&quot;:&quot;2023-03-29T23:59:59.999Z&quot;,&quot;granularity&quot;:&quot;DAY&quot;,&quot;metaType&quot;:&quot;DATA&quot;,&quot;environmentNames&quot;:[&quot;Production&quot;,&quot;Sensitive Data&quot;]},&quot;query&quot;:&quot;query risk_levels_by_metatype($metaType: String!, $to: DateTime!, $from: DateTime!, $environmentNames: [String!]!, $granularity: TicketTrendGranularity!) {\n  TicketTrends(\n    granularity: {granularity: $granularity}\n    where: {dateTime: {op: BETWEEN, values: [$from, $to]}, metaType: {op: EQ, value: $metaType}, environmentName: {op: IN_LIST, values: $environmentNames}, status: {op: EQ, value: \&quot;NEW\&quot;}}\n    type: {type: RISK_LEVELS}\n  ) {\n    items {\n      dateTime\n      riskLevel\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">91bdbadfae8d11a1ea989e9434c7494e</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:655e-4030-af79-de2df66a7b1d/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">41bbfff2278e2759</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">91bdbadfae8d11a1ea989e9434c7494e-41bbfff2278e2759-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">risk_levels_by_metatype</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Summary_T09_risk_levels_by_metatype" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;resourcesRisksPanelData&quot;,&quot;variables&quot;:{&quot;limit&quot;:6,&quot;filter&quot;:{&quot;swimlaneSrns&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;environment&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;Production&quot;,&quot;Sensitive Data&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;NEW&quot;]},&quot;resourceSRN&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;srn:azure:ActiveDirectory::1bd233b2-c77b-4210-8821-6d698724bb61/User/ae395579-e368-4e31-b2bd-b15268e531f0&quot;,&quot;srn:aws:iam::474484658459/Role/custom-pricing-org-role&quot;,&quot;srn:aws:iam::474484658459/User/Root/Root&quot;,&quot;srn:aws:iam::474484658459/User/User/adam.doyle&quot;,&quot;srn:aws:iam::474484658459/User/User/adam.leclerc&quot;,&quot;srn:aws:iam::474484658459/Role/AWSReservedSSO_AdministratorAccess_d8f615c79fc77094&quot;]}}},&quot;query&quot;:&quot;query resourcesRisksPanelData($filter: TicketRollupFilter!, $orderBy: [TicketRollupOrder], $limit: Long = 6, $preaggregationLimit: Long = 1000) {\n  TicketRollups(where: $filter, includeRollup: {environment: true}) {\n    items(\n      orderBy: $orderBy\n      limit: $limit\n      preaggregationLimit: $preaggregationLimit\n    ) {\n      resourceSRN\n      resourceName\n      resourceType\n      resourceLabel\n      count\n      riskScoreNumeric\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">744a6ddd7b35efad6be68e2db5f9f650</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:a986-4539-8d03-85f969f5f140/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">e8fbc9065143ab32</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">744a6ddd7b35efad6be68e2db5f9f650-e8fbc9065143ab32-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">resourcesRisksPanelData</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://front-end-collector-web.s.sonraisecurity.com/v1/metrics" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;resourceMetrics&quot;:[{&quot;resource&quot;:{&quot;attributes&quot;:[],&quot;droppedAttributesCount&quot;:0},&quot;scopeMetrics&quot;:[{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-document-load&quot;,&quot;version&quot;:&quot;0.27.1&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-fetch&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-long-task&quot;,&quot;version&quot;:&quot;0.30.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-xml-http-request&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;app_layout_error_boundary_errors_count&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;sum&quot;:{&quot;aggregationTemporality&quot;:2,&quot;isMonotonic&quot;:true,&quot;dataPoints&quot;:[]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.graphql&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;graphql_request_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSavedSearches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:800,&quot;min&quot;:800,&quot;max&quot;:800,&quot;startTimeUnixNano&quot;:1680198368030700000,&quot;timeUnixNano&quot;:1680198393514300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchSwimlanes&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:931,&quot;min&quot;:931,&quot;max&quot;:931,&quot;startTimeUnixNano&quot;:1680198368162600000,&quot;timeUnixNano&quot;:1680198393514300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAccounts&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:934,&quot;min&quot;:934,&quot;max&quot;:934,&quot;startTimeUnixNano&quot;:1680198368165500000,&quot;timeUnixNano&quot;:1680198393514300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiSeaches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:945,&quot;min&quot;:945,&quot;max&quot;:945,&quot;startTimeUnixNano&quot;:1680198368175100000,&quot;timeUnixNano&quot;:1680198393514300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSubscriptions&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:963,&quot;min&quot;:963,&quot;max&quot;:963,&quot;startTimeUnixNano&quot;:1680198368194200000,&quot;timeUnixNano&quot;:1680198393514300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchSummaryPanelData&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:165,&quot;min&quot;:165,&quot;max&quot;:165,&quot;startTimeUnixNano&quot;:1680198390467200000,&quot;timeUnixNano&quot;:1680198393514300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchCrmTicketKeyOptions&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:184,&quot;min&quot;:184,&quot;max&quot;:184,&quot;startTimeUnixNano&quot;:1680198390484400000,&quot;timeUnixNano&quot;:1680198393514300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;risk_levels_by_metatype&quot;}}],&quot;bucketCounts&quot;:[0,3,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:3,&quot;sum&quot;:264,&quot;min&quot;:60,&quot;max&quot;:104,&quot;startTimeUnixNano&quot;:1680198390564200000,&quot;timeUnixNano&quot;:1680198393514300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;counPanelAssetInventory&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:681,&quot;min&quot;:681,&quot;max&quot;:681,&quot;startTimeUnixNano&quot;:1680198390982600000,&quot;timeUnixNano&quot;:1680198393514300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;resourcesRisksPanelData&quot;}}],&quot;bucketCounts&quot;:[0,0,0,2,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:2,&quot;sum&quot;:2915,&quot;min&quot;:1155,&quot;max&quot;:1760,&quot;startTimeUnixNano&quot;:1680198391458800000,&quot;timeUnixNano&quot;:1680198393514300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchControlPoliciesOptions&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1453,&quot;min&quot;:1453,&quot;max&quot;:1453,&quot;startTimeUnixNano&quot;:1680198391753000000,&quot;timeUnixNano&quot;:1680198393514300000}]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.newroute&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;newtab_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[]}},{&quot;name&quot;:&quot;newroute_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:455,&quot;min&quot;:455,&quot;max&quot;:455,&quot;startTimeUnixNano&quot;:1680198390595200000,&quot;timeUnixNano&quot;:1680198393514300000}]}}]}]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v1/metrics</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="stage11733927_11_Maturity" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Maturity_T01_fetchMaturitySwimlanes" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;fetchMaturitySwimlanes&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query fetchMaturitySwimlanes {\n  Swimlanes {\n    items(limit: -1) {\n      srn\n      title\n      targetMaturityLevel\n      environments\n      accounts\n      resourceIds\n      tags\n      __typename\n    }\n    __typename\n  }\n  Environments {\n    items {\n      name\n      friendlyName\n      targetMaturityLevel\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">b911d026273964a2fb3899ec1b668b99</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:3fde-4fe2-a487-7b9d09767e37/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">fa97db73c900d010</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">b911d026273964a2fb3899ec1b668b99-fa97db73c900d010-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">fetchMaturitySwimlanes</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Maturity_T02_fetchMaturitySwimlanes" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;fetchMaturitySwimlanesPassing&quot;,&quot;variables&quot;:{&quot;m1Swimlanes&quot;:[&quot;srn:stage11733927::Swimlane/b3c77842-5f65-424d-acd9-f15dd023b5fd&quot;,&quot;srn:stage11733927::Swimlane/42112df8-6dae-46a1-8b93-2987c1c0793c&quot;,&quot;srn:stage11733927::Swimlane/8da13aac-7408-4a0b-b8b9-504f47270e13&quot;,&quot;srn:stage11733927::Swimlane/66b7c16f-8dd0-4224-b6a7-4e4d2404c889&quot;,&quot;srn:stage11733927::Swimlane/1bffc47f-80b9-4bd5-a373-4ca2aae7dd62&quot;,&quot;srn:stage11733927::Swimlane/16fdd1e2-7336-4995-9463-1de3694184d1&quot;,&quot;srn:stage11733927::Swimlane/415689ae-cd0b-4eef-bb63-73b5e1d3067a&quot;,&quot;srn:stage11733927::Swimlane/81701b38-3609-4467-baeb-e741b59138d5&quot;,&quot;srn:stage11733927::Swimlane/616ad5d7-5b7e-49ed-8e1b-5306a6ca4b1b&quot;,&quot;srn:stage11733927::Swimlane/efe84463-3c2c-47af-b606-c868a6a74485&quot;,&quot;srn:stage11733927::Swimlane/df28688e-458f-42ca-acc4-b0a04c01b617&quot;,&quot;srn:stage11733927::Swimlane/8dc9294c-bf80-4e3f-8b29-1f94e3b435e5&quot;,&quot;srn:stage11733927::Swimlane/01360e59-f63b-4b8f-8007-07941051e722&quot;,&quot;srn:stage11733927::Swimlane/efce2d9d-56a5-45b0-8457-197891171142&quot;,&quot;srn:stage11733927::Swimlane/3ea0ed41-9f3b-4724-b501-a634d495c302&quot;,&quot;srn:stage11733927::Swimlane/39d18340-4efd-4867-bd1d-d099a70554ae&quot;],&quot;m1Include&quot;:true,&quot;m2Swimlanes&quot;:[],&quot;m2Include&quot;:false,&quot;m3Swimlanes&quot;:[&quot;srn:stage11733927::Swimlane/b70ebaca-a1c0-46a0-9054-aa3c912e431b&quot;,&quot;srn:stage11733927::Swimlane/632f9001-a7ee-4a36-a9b4-34e548b474a2&quot;,&quot;srn:stage11733927::Swimlane/0e16e877-4789-4f05-9630-ac8359053b8e&quot;,&quot;srn:stage11733927::Swimlane/4f91c051-9646-4117-a465-b266a67223a0&quot;,&quot;srn:stage11733927::Swimlane/ec8b4243-8b66-4339-ab40-077decf7e399&quot;,&quot;srn:stage11733927::Swimlane/0fe6ec5a-c7e5-4f57-a1b4-7e09b16af9c9&quot;,&quot;srn:stage11733927::Swimlane/67eddbc8-3996-4bf4-81ca-1174d322eec5&quot;,&quot;srn:stage11733927::Swimlane/4b91f1c7-f50b-4f4e-8954-ee90f8c05eb7&quot;,&quot;srn:stage11733927::Swimlane/ff2fc0a3-9bcf-4df9-8b2d-ea98c75880a6&quot;,&quot;srn:stage11733927::Swimlane/73e293f8-0271-4e1e-8f97-a7df6b4ab709&quot;,&quot;srn:stage11733927::Swimlane/dd7c19de-f32b-431f-b78c-6b1909c6d40e&quot;,&quot;srn:stage11733927::Swimlane/8039a691-b59e-4c73-bd94-defcc3e8c434&quot;,&quot;srn:stage11733927::Swimlane/55b93279-0eb0-4973-977a-81153e5b4be4&quot;,&quot;srn:stage11733927::Swimlane/85a3b536-b744-4c4f-9b9b-369e1f6b5724&quot;,&quot;srn:stage11733927::Swimlane/ced52d2a-c358-4dbb-8734-7b70f782e23d&quot;,&quot;srn:stage11733927::Swimlane/1806fd9d-b37c-45fc-a3fe-6f88c79b6551&quot;,&quot;srn:stage11733927::Swimlane/b452d257-cb44-411d-9cac-0179e666deff&quot;,&quot;srn:stage11733927::Swimlane/9cd7adcc-c7d7-4cd2-95d2-b8df5b40bb13&quot;,&quot;srn:stage11733927::Swimlane/3304300b-49c8-4372-8847-110905c9dbdb&quot;,&quot;srn:stage11733927::Swimlane/d10808ce-ebfa-4f83-925c-22a6016d2da4&quot;,&quot;srn:stage11733927::Swimlane/238581e0-c08c-42cb-a459-4a3334b33cae&quot;,&quot;srn:stage11733927::Swimlane/9bfc9225-4af4-47a4-bcf1-8523c4d00519&quot;,&quot;srn:stage11733927::Swimlane/c4ff1c5f-1a6b-440f-955e-6cdb8a0e8df9&quot;,&quot;srn:stage11733927::Swimlane/8d3d9ee2-eeb9-4145-85dc-cc2986c31ae7&quot;,&quot;srn:stage11733927::Swimlane/6f2dbab1-6521-4a0e-bbf1-86abf42fe1a5&quot;,&quot;srn:stage11733927::Swimlane/eb046ec8-f31c-481a-8577-a9d088bcd7e8&quot;,&quot;srn:stage11733927::Swimlane/1f7913de-78f4-4ba6-a705-86a3e38e53c6&quot;,&quot;srn:stage11733927::Swimlane/778b31a3-9154-4c25-afbc-429fe32751f5&quot;],&quot;m3Include&quot;:true,&quot;m4Swimlanes&quot;:[&quot;srn:stage11733927::Swimlane/161f59a8-4987-4cc8-9b0c-d6371b639f32&quot;,&quot;srn:stage11733927::Swimlane/b4757e68-85c1-439b-a52f-deb9e3cfad55&quot;,&quot;srn:stage11733927::Swimlane/1e40e15c-2c3c-4a40-9f2d-52c7b7937055&quot;,&quot;srn:stage11733927::Swimlane/d4174dce-a7f5-4b27-af9d-5a3a9cb89d27&quot;,&quot;srn:stage11733927::Swimlane/ffa2e8e3-ec98-410d-9b9d-fcbd70ec6082&quot;,&quot;srn:stage11733927::Swimlane/8c6bf995-7f4d-40b9-8134-428b0ce03c7a&quot;,&quot;srn:stage11733927::Swimlane/d61afe67-c651-46bd-904b-9a68988ee3c3&quot;,&quot;srn:stage11733927::Swimlane/bed7bd36-ee29-4544-99e5-94e3130c8574&quot;,&quot;srn:stage11733927::Swimlane/cedbfdda-269f-4d8e-b4f0-87cce12a567b&quot;,&quot;srn:stage11733927::Swimlane/f8e036fd-4c39-4abf-b142-24a7c13adf91&quot;,&quot;srn:stage11733927::Swimlane/c87de86d-6448-4312-8141-c67f10ffbc66&quot;,&quot;srn:stage11733927::Swimlane/e058b72f-904d-428d-9225-ea92e9166a9d&quot;,&quot;srn:stage11733927::Swimlane/882f219e-e3aa-453e-b997-91e8e0b5516e&quot;,&quot;srn:stage11733927::Swimlane/566aa3d1-efd5-4e5b-b7a9-09aea0ffef7a&quot;,&quot;srn:stage11733927::Swimlane/1656eeac-9fae-4bb8-946f-2d27008eb42b&quot;,&quot;srn:stage11733927::Swimlane/566164c6-e529-4b9a-a065-6677cda5a586&quot;,&quot;srn:stage11733927::Swimlane/0a87b60e-6349-4858-810b-f846762d3d55&quot;,&quot;srn:stage11733927::Swimlane/9057a678-a9c9-4088-ac95-f42d99e20d45&quot;,&quot;srn:stage11733927::Swimlane/5a349d39-d2c2-4d77-a003-7d8437bcf400&quot;,&quot;srn:stage11733927::Swimlane/958d066a-05be-45be-be73-eaa8109adafe&quot;,&quot;srn:stage11733927::Swimlane/55773a02-470e-4cf8-95de-2845ef4408d2&quot;,&quot;srn:stage11733927::Swimlane/ade3b043-f5af-4aca-a484-ef3a03a1171a&quot;,&quot;srn:stage11733927::Swimlane/9595b561-19d8-46e1-a5f0-65ea43f79e0f&quot;,&quot;srn:stage11733927::Swimlane/ce09ecf0-90c6-410e-98f3-d48e6b24c015&quot;,&quot;srn:stage11733927::Swimlane/d622d287-90d2-49d1-add1-22fdbb5cc4d0&quot;,&quot;srn:stage11733927::Swimlane/47d24b2a-5aa2-47f8-95db-22c74ea30b6c&quot;,&quot;srn:stage11733927::Swimlane/edb2917d-81a3-4b74-9e22-1af5f507a2fe&quot;,&quot;srn:stage11733927::Swimlane/322b22c8-3cc3-416d-b64d-843c3e935420&quot;,&quot;srn:stage11733927::Swimlane/cc8b09fb-3e9d-4dff-a9a8-37e0becea109&quot;,&quot;srn:stage11733927::Swimlane/4dfead77-670a-4c66-b1da-81ed07092089&quot;,&quot;srn:stage11733927::Swimlane/632c1e2a-0cf7-4432-b593-4b0c45c082d5&quot;,&quot;srn:stage11733927::Swimlane/99355681-05db-455a-b5dd-6660ffa4277e&quot;,&quot;srn:stage11733927::Swimlane/3e9dd7ed-8bd9-48cc-92ab-dc224c2c06f2&quot;,&quot;srn:stage11733927::Swimlane/635c2880-ca1d-4434-92a4-c7feaf74ae53&quot;,&quot;srn:stage11733927::Swimlane/b833ee33-f51b-4bbd-bbec-35f57c1c753c&quot;,&quot;srn:stage11733927::Swimlane/752c3b38-0ba4-444c-aa93-361f9aea5176&quot;,&quot;srn:stage11733927::Swimlane/7bc365e5-b897-4b58-8753-be85e03573f6&quot;,&quot;srn:stage11733927::Swimlane/c177456e-edcf-4bad-aeac-2e7834afd322&quot;,&quot;srn:stage11733927::Swimlane/2e8048c2-4979-42d1-a59d-74400e22e022&quot;,&quot;srn:stage11733927::Swimlane/876ed902-5674-475d-9f94-8466a06c5625&quot;,&quot;srn:stage11733927::Swimlane/c5df50aa-58b9-4ae4-ae56-763db2f55b35&quot;,&quot;srn:stage11733927::Swimlane/0fccef66-2e58-4164-ae72-cf6528270022&quot;,&quot;srn:stage11733927::Swimlane/e55fb989-dbe7-46f7-8fa4-957c7e4acb52&quot;,&quot;srn:stage11733927::Swimlane/41f8b832-a2e9-4102-ac47-e35418e9ee9a&quot;,&quot;srn:stage11733927::Swimlane/ffd99cfa-b27a-4bed-99ae-7e845f793029&quot;,&quot;srn:stage11733927::Swimlane/538951ca-f147-4685-90f1-083473ebba0e&quot;,&quot;srn:stage11733927::Swimlane/fcaf570e-bc5b-47e4-ad51-2356ccbd897c&quot;,&quot;srn:stage11733927::Swimlane/49a44cb4-862b-4598-9ebb-75582b9e1986&quot;,&quot;srn:stage11733927::Swimlane/ec764d89-24da-4d64-8ffb-fe164546567a&quot;,&quot;srn:stage11733927::Swimlane/6720e478-06db-444d-a19f-42b61ba08d6b&quot;,&quot;srn:stage11733927::Swimlane/576c2e2d-7ff3-4aa7-8e5b-2311d4be8203&quot;,&quot;srn:stage11733927::Swimlane/00b2a8b9-345b-40eb-abe4-0d74832b3cfb&quot;,&quot;srn:stage11733927::Swimlane/303c03f6-6aba-4a6a-9b6c-563e1a4c8b6d&quot;,&quot;srn:stage11733927::Swimlane/77f65632-4298-4485-b9e4-d7033db11d17&quot;,&quot;srn:stage11733927::Swimlane/52004ffa-055b-47b0-a2f5-30a3aa3a5dad&quot;,&quot;srn:stage11733927::Swimlane/6d741085-866d-48b9-a359-63a9c3525e40&quot;,&quot;srn:stage11733927::Swimlane/0c7518ff-a8b2-45e6-b8e7-a9609ee56b7e&quot;,&quot;srn:stage11733927::Swimlane/05fe70d3-183b-4452-b0f5-2e8f2aeb5996&quot;,&quot;srn:stage11733927::Swimlane/475521a5-73c6-47c2-962e-8e4417b10238&quot;,&quot;srn:stage11733927::Swimlane/54346aae-f962-4303-8775-558e376772da&quot;,&quot;srn:stage11733927::Swimlane/371411c2-f9fd-4657-84a5-d32196e0606d&quot;,&quot;srn:stage11733927::Swimlane/1f04ce21-d745-4fd3-b55a-d2c6274833dc&quot;,&quot;srn:stage11733927::Swimlane/2c9894ff-d4de-4d83-9557-630d70634d8a&quot;,&quot;srn:stage11733927::Swimlane/aee2108a-c622-4653-a182-5e8bf1526110&quot;,&quot;srn:stage11733927::Swimlane/d470e390-13f2-4859-97d6-2b2bb4fc3cba&quot;,&quot;srn:stage11733927::Swimlane/c3c35f59-341d-4a94-b384-a7617f804656&quot;,&quot;srn:stage11733927::Swimlane/3f7910dc-d53b-42e2-b5b2-bfdb6d471ab2&quot;,&quot;srn:stage11733927::Swimlane/7e986fc7-7db9-475c-898b-c666b1c7411a&quot;,&quot;srn:stage11733927::Swimlane/19f18796-4505-4ee8-a43e-1997b9473603&quot;,&quot;srn:stage11733927::Swimlane/5861c490-03f2-4ca8-a060-f822e88dd658&quot;,&quot;srn:stage11733927::Swimlane/0c69d424-e054-45d7-a19f-c9b86f3a2c80&quot;,&quot;srn:stage11733927::Swimlane/821bb9a3-2a11-4146-9bcd-50ef77c8be04&quot;,&quot;srn:stage11733927::Swimlane/864585b9-d9ad-4fc0-9cd7-51a7a9a06fcf&quot;,&quot;srn:stage11733927::Swimlane/846176cf-47c2-4d8f-b094-43e1d5f161fc&quot;,&quot;srn:stage11733927::Swimlane/b2970a8f-3e08-44d8-8819-b12f8d0b1036&quot;,&quot;srn:stage11733927::Swimlane/ff34414f-e6d4-4b25-a45c-05c3d603dec9&quot;,&quot;srn:stage11733927::Swimlane/71ba4ed3-4d0f-4074-91a9-efd3d80c1190&quot;,&quot;srn:stage11733927::Swimlane/2a6bd270-2f19-4535-8244-014b2e43be49&quot;,&quot;srn:stage11733927::Swimlane/0dff53c9-9aed-450e-97b6-f9c7c7269bb6&quot;,&quot;srn:stage11733927::Swimlane/3da8ae25-926a-40df-97a3-64c64435fa15&quot;,&quot;srn:stage11733927::Swimlane/273cdc1b-236d-4eff-9500-ce2e79f76131&quot;,&quot;srn:stage11733927::Swimlane/b3a26fc0-1e27-4bf6-8172-1a16309514ce&quot;,&quot;srn:stage11733927::Swimlane/94eab80b-4b32-46c2-9ee2-20c7e898eeb3&quot;,&quot;srn:stage11733927::Swimlane/5bcb750f-6910-4b0b-830a-6c39a76474ba&quot;,&quot;srn:stage11733927::Swimlane/798d6f98-48ac-4a71-b704-3765e39d5938&quot;,&quot;srn:stage11733927::Swimlane/8b5d40ad-f3fe-4dc5-88ca-87b85cd27af8&quot;,&quot;srn:stage11733927::Swimlane/5c8ebc78-17e2-49cb-acc7-fb200922d32a&quot;,&quot;srn:stage11733927::Swimlane/525ec320-5276-4bbc-b8bc-89feeeb14328&quot;,&quot;srn:stage11733927::Swimlane/17dce178-87b1-4b25-be32-ce58a03cffd7&quot;,&quot;srn:stage11733927::Swimlane/81a239ab-ac92-4b0d-899d-74c35e600b2a&quot;,&quot;srn:stage11733927::Swimlane/52d5c2a5-9132-44d9-8eb8-1386b5bb8dc4&quot;,&quot;srn:stage11733927::Swimlane/734f44e5-b824-424b-8a24-f6e33d9a4257&quot;,&quot;srn:stage11733927::Swimlane/aa440663-576c-4ec3-9f08-72e2c1a408e5&quot;,&quot;srn:stage11733927::Swimlane/070a6bfb-eb62-4308-83a6-c4962d7f7734&quot;,&quot;srn:stage11733927::Swimlane/60b72733-a220-4260-8ed1-66671f59597e&quot;,&quot;srn:stage11733927::Swimlane/f9f5b2e8-f46d-4442-980f-d393e2701b1f&quot;,&quot;srn:stage11733927::Swimlane/b56e2f0a-d79b-4699-ad9f-eba704dfbd6d&quot;,&quot;srn:stage11733927::Swimlane/2f4e024b-3303-4820-b1b5-f9096cde2e43&quot;,&quot;srn:stage11733927::Swimlane/ba3b5b6e-9c31-4053-b37a-03d2dd0d558a&quot;,&quot;srn:stage11733927::Swimlane/cebf6739-57ff-475b-92c8-0f5a3907c376&quot;,&quot;srn:stage11733927::Swimlane/ea565634-a002-4a81-91c0-bac8694e4cd6&quot;,&quot;srn:stage11733927::Swimlane/50362c1d-387c-4832-9da1-83ac4f93ebc5&quot;,&quot;srn:stage11733927::Swimlane/f4128920-8191-4aa7-ba9d-0655b1a05ddf&quot;,&quot;srn:stage11733927::Swimlane/efb0f4d5-1904-4b33-9523-c99c298c722f&quot;,&quot;srn:stage11733927::Swimlane/6c02eb55-3815-4f0b-a56b-2a747b8fa715&quot;],&quot;m4Include&quot;:true,&quot;m5Swimlanes&quot;:[&quot;srn:stage11733927::Swimlane/93f43210-d0bd-486d-baaa-232b79ecbe06&quot;,&quot;srn:stage11733927::Swimlane/5e06ca2b-15b9-4654-99c0-2f2731b55e96&quot;,&quot;srn:stage11733927::Swimlane/57cdd790-cb15-4213-a618-d7306ae5e595&quot;,&quot;srn:stage11733927::Swimlane/8ffcd427-b034-4080-9feb-74abe4a2bc1a&quot;,&quot;srn:stage11733927::Swimlane/4236caae-3e01-4b87-8a50-765370a840ef&quot;,&quot;srn:stage11733927::Swimlane/a9443082-562d-4269-a53d-fba35565b4ce&quot;,&quot;srn:stage11733927::Swimlane/f47a8e25-188a-4c9d-91d6-1a54883e9fa2&quot;,&quot;srn:stage11733927::Swimlane/054e6112-5c09-4a64-806f-fdc03d4887da&quot;,&quot;srn:stage11733927::Swimlane/ac7784fd-bd3d-4966-9bac-610c39053e99&quot;,&quot;srn:stage11733927::Swimlane/a6736f91-4891-4e61-b96d-7ca3d9ff25f7&quot;,&quot;srn:stage11733927::Swimlane/0bbca8be-ed54-4677-b581-973950ecfb9c&quot;,&quot;srn:stage11733927::Swimlane/56517df8-c68c-4481-a547-8e05d48454fb&quot;,&quot;srn:stage11733927::Swimlane/24f4367c-8a0e-4905-8811-0726d4d112bd&quot;,&quot;srn:stage11733927::Swimlane/454d1176-305e-40c3-ab66-c6fdac382a1d&quot;,&quot;srn:stage11733927::Swimlane/7c2896dc-7604-4f5b-bc4e-0a0034d061d2&quot;,&quot;srn:stage11733927::Swimlane/6024d0eb-d1bb-4d48-9fd3-f96fff0e1d2e&quot;,&quot;srn:stage11733927::Swimlane/186b2a2d-4b46-4639-a942-bd396c53bd67&quot;,&quot;srn:stage11733927::Swimlane/a766f0c1-f619-4fba-94a9-498aeb81624c&quot;,&quot;srn:stage11733927::Swimlane/6579051f-fc8a-46e7-882a-0cde2219f9ef&quot;,&quot;srn:stage11733927::Swimlane/be0a8d40-d422-4eb4-a940-d95da8486981&quot;,&quot;srn:stage11733927::Swimlane/6cb632fe-951d-4481-8663-76188ff0024c&quot;,&quot;srn:stage11733927::Swimlane/e5d5b4dc-4e67-4fd5-999b-a782e1e83878&quot;,&quot;srn:stage11733927::Swimlane/d8db091e-0147-40fe-bef0-08f2f5d172cf&quot;,&quot;srn:stage11733927::Swimlane/a459fece-58ef-49e2-9779-357f876e15e9&quot;,&quot;srn:stage11733927::Swimlane/d84a67d6-760c-4a6a-924b-c8f46c9d5360&quot;,&quot;srn:stage11733927::Swimlane/082a0e22-5dad-41ee-b7ab-15e567119797&quot;,&quot;srn:stage11733927::Swimlane/4f7e22fa-6c07-41bc-943d-23ad332ddf18&quot;,&quot;srn:stage11733927::Swimlane/3fc23896-66b4-4bbd-925d-a977ab832acc&quot;,&quot;srn:stage11733927::Swimlane/60757a12-aa4a-4e35-8418-c6e9b26145e0&quot;,&quot;srn:stage11733927::Swimlane/f5c522fa-e7f4-4be4-8f0e-469e4f603f36&quot;,&quot;srn:stage11733927::Swimlane/1fbc5e7c-64ac-4f4b-a62c-14ebd47a5fde&quot;,&quot;srn:stage11733927::Swimlane/2e0fc915-74d7-4938-bb0e-ecac2193c9a0&quot;,&quot;srn:stage11733927::Swimlane/3ace1654-4a66-45da-9b3d-78d7b24583d2&quot;],&quot;m5Include&quot;:true},&quot;query&quot;:&quot;query fetchMaturitySwimlanesPassing($m5Swimlanes: [String], $m5Include: Boolean!, $m4Swimlanes: [String], $m4Include: Boolean!, $m3Swimlanes: [String], $m3Include: Boolean!, $m2Swimlanes: [String], $m2Include: Boolean!, $m1Swimlanes: [String], $m1Include: Boolean!) {\n  m5: GetTicketToPopulationRatios(\n    where: {swimlaneSrns: $m5Swimlanes, maturityLevel: 5}\n  ) @include(if: $m5Include) {\n    ...fields\n    __typename\n  }\n  m4: GetTicketToPopulationRatios(\n    where: {swimlaneSrns: $m4Swimlanes, maturityLevel: 4}\n  ) @include(if: $m4Include) {\n    ...fields\n    __typename\n  }\n  m3: GetTicketToPopulationRatios(\n    where: {swimlaneSrns: $m3Swimlanes, maturityLevel: 3}\n  ) @include(if: $m3Include) {\n    ...fields\n    __typename\n  }\n  m2: GetTicketToPopulationRatios(\n    where: {swimlaneSrns: $m2Swimlanes, maturityLevel: 2}\n  ) @include(if: $m2Include) {\n    ...fields\n    __typename\n  }\n  m1: GetTicketToPopulationRatios(\n    where: {swimlaneSrns: $m1Swimlanes, maturityLevel: 1}\n  ) @include(if: $m1Include) {\n    ...fields\n    __typename\n  }\n}\n\nfragment fields on TicketToPopulationRatios {\n  items {\n    ratioM1\n    ratioM2\n    ratioM3\n    ratioM4\n    ratioM5\n    swimlaneSrn\n    maturityLevel\n    maturityLevelNumeric\n    __typename\n  }\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">b911d026273964a2fb3899ec1b668b99</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:4b1a-48f6-8dc7-596424ef9f98/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">5fdd815bc98c3098</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">b911d026273964a2fb3899ec1b668b99-5fdd815bc98c3098-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">fetchMaturitySwimlanesPassing</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Maturity_T03_fetchMaturitySwimlanes" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;fetchMaturitySwimlanesRadarChartData&quot;,&quot;variables&quot;:{&quot;includeOverall&quot;:false,&quot;includeForSwimlanes&quot;:true,&quot;input&quot;:[{&quot;swimlanesrn&quot;:&quot;srn:stage11733927::Swimlane/0bbca8be-ed54-4677-b581-973950ecfb9c&quot;,&quot;targetMarturityLevel&quot;:5}]},&quot;query&quot;:&quot;query fetchMaturitySwimlanesRadarChartData($input: [MaturityLevelMap], $includeOverall: Boolean!, $includeForSwimlanes: Boolean!) {\n  overall: MaturityScores @include(if: $includeOverall) {\n    items {\n      swimlaneSrn\n      securityArea\n      maturityScore\n      maturityScore\n      maturityLevel\n      __typename\n    }\n    __typename\n  }\n  by_swimlane: MaturityScores(where: {input: $input}) @include(if: $includeForSwimlanes) {\n    items {\n      swimlaneSrn\n      securityArea\n      maturityScore\n      maturityScore\n      maturityLevel\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">b911d026273964a2fb3899ec1b668b99</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:0a77-446d-9bb8-01546c14ca50/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">0f5cdb7a49e4d567</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">b911d026273964a2fb3899ec1b668b99-0f5cdb7a49e4d567-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">fetchMaturitySwimlanesRadarChartData</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://front-end-collector-web.s.sonraisecurity.com/v1/metrics" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;resourceMetrics&quot;:[{&quot;resource&quot;:{&quot;attributes&quot;:[],&quot;droppedAttributesCount&quot;:0},&quot;scopeMetrics&quot;:[{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-document-load&quot;,&quot;version&quot;:&quot;0.27.1&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-fetch&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-long-task&quot;,&quot;version&quot;:&quot;0.30.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-xml-http-request&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;app_layout_error_boundary_errors_count&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;sum&quot;:{&quot;aggregationTemporality&quot;:2,&quot;isMonotonic&quot;:true,&quot;dataPoints&quot;:[]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.graphql&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;graphql_request_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSavedSearches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:800,&quot;min&quot;:800,&quot;max&quot;:800,&quot;startTimeUnixNano&quot;:1680198368030700000,&quot;timeUnixNano&quot;:1680198423512700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchSwimlanes&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:931,&quot;min&quot;:931,&quot;max&quot;:931,&quot;startTimeUnixNano&quot;:1680198368162600000,&quot;timeUnixNano&quot;:1680198423512700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAccounts&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:934,&quot;min&quot;:934,&quot;max&quot;:934,&quot;startTimeUnixNano&quot;:1680198368165500000,&quot;timeUnixNano&quot;:1680198423512700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiSeaches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:945,&quot;min&quot;:945,&quot;max&quot;:945,&quot;startTimeUnixNano&quot;:1680198368175100000,&quot;timeUnixNano&quot;:1680198423512700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSubscriptions&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:963,&quot;min&quot;:963,&quot;max&quot;:963,&quot;startTimeUnixNano&quot;:1680198368194200000,&quot;timeUnixNano&quot;:1680198423512700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchSummaryPanelData&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:165,&quot;min&quot;:165,&quot;max&quot;:165,&quot;startTimeUnixNano&quot;:1680198390467200000,&quot;timeUnixNano&quot;:1680198423512700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchCrmTicketKeyOptions&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:184,&quot;min&quot;:184,&quot;max&quot;:184,&quot;startTimeUnixNano&quot;:1680198390484400000,&quot;timeUnixNano&quot;:1680198423512700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;risk_levels_by_metatype&quot;}}],&quot;bucketCounts&quot;:[0,3,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:3,&quot;sum&quot;:264,&quot;min&quot;:60,&quot;max&quot;:104,&quot;startTimeUnixNano&quot;:1680198390564200000,&quot;timeUnixNano&quot;:1680198423512700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;counPanelAssetInventory&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:681,&quot;min&quot;:681,&quot;max&quot;:681,&quot;startTimeUnixNano&quot;:1680198390982600000,&quot;timeUnixNano&quot;:1680198423512700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;resourcesRisksPanelData&quot;}}],&quot;bucketCounts&quot;:[0,0,0,2,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:2,&quot;sum&quot;:2915,&quot;min&quot;:1155,&quot;max&quot;:1760,&quot;startTimeUnixNano&quot;:1680198391458800000,&quot;timeUnixNano&quot;:1680198423512700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchControlPoliciesOptions&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1453,&quot;min&quot;:1453,&quot;max&quot;:1453,&quot;startTimeUnixNano&quot;:1680198391753000000,&quot;timeUnixNano&quot;:1680198423512700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Maturity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchMaturitySwimlanes&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:685,&quot;min&quot;:685,&quot;max&quot;:685,&quot;startTimeUnixNano&quot;:1680198414507600100,&quot;timeUnixNano&quot;:1680198423512700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Maturity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchMaturitySwimlanesRadarChartData&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:152,&quot;min&quot;:152,&quot;max&quot;:152,&quot;startTimeUnixNano&quot;:1680198414684600000,&quot;timeUnixNano&quot;:1680198423512700000}]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.newroute&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;newtab_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[]}},{&quot;name&quot;:&quot;newroute_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:455,&quot;min&quot;:455,&quot;max&quot;:455,&quot;startTimeUnixNano&quot;:1680198390595200000,&quot;timeUnixNano&quot;:1680198423512700000}]}}]}]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v1/metrics</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="stage11733927_12_Tickets" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Tickets_T01_fetchTicketCount" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;fetchTicketCount&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;status&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;NEW&quot;]}}},&quot;query&quot;:&quot;query fetchTicketCount($filters: TicketsFilter) {\n  Tickets(where: $filters) {\n    globalCount\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">2810f997bc9911d944af5192d3c64f35</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:6db7-4e0d-99fb-1b549a1eef28/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">e4c1698b873b0caf</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">2810f997bc9911d944af5192d3c64f35-e4c1698b873b0caf-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">fetchTicketCount</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Tickets_T02_getEscalations" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getEscalations&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getEscalations {\n  EscalationSchemes {\n    items {\n      srn\n      title\n      description\n      createdBy\n      createdDate\n      resourceId\n      assignments {\n        srn\n        swimlaneSRN\n        allSwimlanes\n        resourceId\n        __typename\n      }\n      filters {\n        srn\n        createdDate\n        createdBy\n        ticketType\n        ticketKey\n        allKeys\n        allTypes\n        controlFrameworkSrn\n        severity\n        onlyCreatedAfterDate\n        __typename\n      }\n      rules {\n        srn\n        triggerAfter\n        triggerAfterDate\n        actionType\n        assignUser {\n          userSrn\n          __typename\n        }\n        assignRole {\n          roleType: ActionRoleType\n          __typename\n        }\n        escalateToBot {\n          botSrn\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">2810f997bc9911d944af5192d3c64f35</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:9920-460f-a988-29501721ebd6/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">8176cb164cce188a</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">2810f997bc9911d944af5192d3c64f35-8176cb164cce188a-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getEscalations</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Tickets_T03_fetchTicketTemplates" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;fetchTicketTemplates&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query fetchTicketTemplates {\n  TicketTemplates {\n    items(limit: 1000, orderBy: [{title: {order: ASC}}]) {\n      srn\n      title\n      description\n      fields {\n        name\n        required\n        type\n        multi\n        description\n        select {\n          search\n          searchFieldMap {\n            items {\n              value\n              key\n              __typename\n            }\n            __typename\n          }\n          path\n          valueField\n          labelFields\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">2810f997bc9911d944af5192d3c64f35</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:0687-468f-b78b-2a93f5359fb1/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">b119cd90ff0f4922</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">2810f997bc9911d944af5192d3c64f35-b119cd90ff0f4922-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">fetchTicketTemplates</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Tickets_T04_fetchTicketList" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;fetchTicketList&quot;,&quot;variables&quot;:{&quot;limit&quot;:25,&quot;offset&quot;:0,&quot;filters&quot;:{&quot;status&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;NEW&quot;]}},&quot;orderBy&quot;:[{&quot;severityNumeric&quot;:{&quot;order&quot;:&quot;DESC&quot;}}]},&quot;query&quot;:&quot;query fetchTicketList($filters: TicketsFilter, $limit: Long = 25, $offset: Long, $orderBy: [TicketOrder]) {\n  Tickets(where: $filters) {\n    items(orderBy: $orderBy, limit: $limit, offset: $offset) {\n      title\n      templatedTitle\n      status\n      assignedTo\n      severityNumeric\n      swimlaneSRNs\n      createdDate\n      transitionDate\n      transitionedBy\n      lastModified\n      firstSeen\n      lastSeen\n      createdBy\n      ticketKey\n      ticketType\n      resourceType\n      resourceLabel\n      actionClassification\n      account\n      srn\n      resourceSRN\n      resourceName\n      resourceId\n      policy {\n        srn\n        alertingLevelNumeric\n        controlPolicyMetaTypes\n        __typename\n      }\n      swimlanes {\n        environments\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">2810f997bc9911d944af5192d3c64f35</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:4411-4229-8306-5db79b67b388/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">31fc824cc1cee628</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">2810f997bc9911d944af5192d3c64f35-31fc824cc1cee628-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">fetchTicketList</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://front-end-collector-web.s.sonraisecurity.com/v1/metrics" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;resourceMetrics&quot;:[{&quot;resource&quot;:{&quot;attributes&quot;:[],&quot;droppedAttributesCount&quot;:0},&quot;scopeMetrics&quot;:[{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-document-load&quot;,&quot;version&quot;:&quot;0.27.1&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-fetch&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-long-task&quot;,&quot;version&quot;:&quot;0.30.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-xml-http-request&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;app_layout_error_boundary_errors_count&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;sum&quot;:{&quot;aggregationTemporality&quot;:2,&quot;isMonotonic&quot;:true,&quot;dataPoints&quot;:[]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.graphql&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;graphql_request_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSavedSearches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:800,&quot;min&quot;:800,&quot;max&quot;:800,&quot;startTimeUnixNano&quot;:1680198368030700000,&quot;timeUnixNano&quot;:1680198453511600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchSwimlanes&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:931,&quot;min&quot;:931,&quot;max&quot;:931,&quot;startTimeUnixNano&quot;:1680198368162600000,&quot;timeUnixNano&quot;:1680198453511600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAccounts&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:934,&quot;min&quot;:934,&quot;max&quot;:934,&quot;startTimeUnixNano&quot;:1680198368165500000,&quot;timeUnixNano&quot;:1680198453511600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiSeaches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:945,&quot;min&quot;:945,&quot;max&quot;:945,&quot;startTimeUnixNano&quot;:1680198368175100000,&quot;timeUnixNano&quot;:1680198453511600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSubscriptions&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:963,&quot;min&quot;:963,&quot;max&quot;:963,&quot;startTimeUnixNano&quot;:1680198368194200000,&quot;timeUnixNano&quot;:1680198453511600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchSummaryPanelData&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:165,&quot;min&quot;:165,&quot;max&quot;:165,&quot;startTimeUnixNano&quot;:1680198390467200000,&quot;timeUnixNano&quot;:1680198453511600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchCrmTicketKeyOptions&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:184,&quot;min&quot;:184,&quot;max&quot;:184,&quot;startTimeUnixNano&quot;:1680198390484400000,&quot;timeUnixNano&quot;:1680198453511600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;risk_levels_by_metatype&quot;}}],&quot;bucketCounts&quot;:[0,3,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:3,&quot;sum&quot;:264,&quot;min&quot;:60,&quot;max&quot;:104,&quot;startTimeUnixNano&quot;:1680198390564200000,&quot;timeUnixNano&quot;:1680198453511600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;counPanelAssetInventory&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:681,&quot;min&quot;:681,&quot;max&quot;:681,&quot;startTimeUnixNano&quot;:1680198390982600000,&quot;timeUnixNano&quot;:1680198453511600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;resourcesRisksPanelData&quot;}}],&quot;bucketCounts&quot;:[0,0,0,2,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:2,&quot;sum&quot;:2915,&quot;min&quot;:1155,&quot;max&quot;:1760,&quot;startTimeUnixNano&quot;:1680198391458800000,&quot;timeUnixNano&quot;:1680198453511600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchControlPoliciesOptions&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1453,&quot;min&quot;:1453,&quot;max&quot;:1453,&quot;startTimeUnixNano&quot;:1680198391753000000,&quot;timeUnixNano&quot;:1680198453511600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Maturity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchMaturitySwimlanes&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:685,&quot;min&quot;:685,&quot;max&quot;:685,&quot;startTimeUnixNano&quot;:1680198414507600100,&quot;timeUnixNano&quot;:1680198453511600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Maturity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchMaturitySwimlanesRadarChartData&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:152,&quot;min&quot;:152,&quot;max&quot;:152,&quot;startTimeUnixNano&quot;:1680198414684600000,&quot;timeUnixNano&quot;:1680198453511600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Maturity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchMaturitySwimlanesPassing&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,0,0,1,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:12039,&quot;min&quot;:12039,&quot;max&quot;:12039,&quot;startTimeUnixNano&quot;:1680198426565500000,&quot;timeUnixNano&quot;:1680198453511600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Tickets&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchTicketList&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:81,&quot;min&quot;:81,&quot;max&quot;:81,&quot;startTimeUnixNano&quot;:1680198439846800100,&quot;timeUnixNano&quot;:1680198453511600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Tickets&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchTicketTemplates&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:98,&quot;min&quot;:98,&quot;max&quot;:98,&quot;startTimeUnixNano&quot;:1680198439851200000,&quot;timeUnixNano&quot;:1680198453511600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Tickets&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getEscalations&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1042,&quot;min&quot;:1042,&quot;max&quot;:1042,&quot;startTimeUnixNano&quot;:1680198440796200000,&quot;timeUnixNano&quot;:1680198453511600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Tickets&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchTicketCount&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1703,&quot;min&quot;:1703,&quot;max&quot;:1703,&quot;startTimeUnixNano&quot;:1680198441455600000,&quot;timeUnixNano&quot;:1680198453511600000}]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.newroute&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;newtab_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[]}},{&quot;name&quot;:&quot;newroute_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:455,&quot;min&quot;:455,&quot;max&quot;:455,&quot;startTimeUnixNano&quot;:1680198390595200000,&quot;timeUnixNano&quot;:1680198453511600000}]}}]}]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v1/metrics</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="stage11733927_13_TicketsTrands" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TicketsTrands_T01_TicketTrendsV2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;TicketTrendsV2&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;environmentName&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;Production&quot;,&quot;Sensitive Data&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-29T23:59:59.999Z&quot;]}},&quot;granularityRates&quot;:&quot;DAY&quot;,&quot;granularityTotals&quot;:&quot;DAY&quot;,&quot;openFilters&quot;:{&quot;environmentName&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;Production&quot;,&quot;Sensitive Data&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-30T00:00:00.000Z&quot;]}}},&quot;query&quot;:&quot;query TicketTrendsV2($filters: TicketTrendsFilter, $openFilters: TicketTrendsFilter, $granularityRates: TicketTrendGranularity!, $granularityTotals: TicketTrendGranularity!) {\n  Rates: TicketTrends(\n    where: $filters\n    type: {type: DAILY_RATES}\n    granularity: {granularity: $granularityRates}\n  ) {\n    items {\n      count\n      dateTime\n      severityCategory\n      status\n      __typename\n    }\n    __typename\n  }\n  Totals: TicketTrendsV2(\n    granularity: {granularity: $granularityTotals}\n    where: $openFilters\n    type: {type: DAILY_TOTALS}\n  ) {\n    items {\n      count\n      dateTime\n      severityCategory\n      status\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">642ce20de74cdcca75de7f444d8b9629</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:1424-49bd-b13a-6c51f679d8d1/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">d30cfb30094fc42d</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">642ce20de74cdcca75de7f444d8b9629-d30cfb30094fc42d-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">TicketTrendsV2</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TicketsTrands_T02_TicketTrendsBySecurityArea" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;TicketTrendsBySecurityArea&quot;,&quot;variables&quot;:{&quot;filters&quot;:{&quot;environmentName&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;Production&quot;,&quot;Sensitive Data&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-29T23:59:59.999Z&quot;]}}},&quot;query&quot;:&quot;query TicketTrendsBySecurityArea($filters: TicketTrendsFilter!) {\n  TicketTrends(\n    granularity: {granularity: DAY}\n    where: $filters\n    type: {type: OPEN_BY_SECURITY_AREA}\n  ) {\n    items {\n      count\n      dateTime\n      severityCategory\n      status\n      securityArea\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">7f6a72963592be2d7b9dc9218c1b2d94</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:fff9-4c1d-a80a-8710a0e4739e/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">1f5aeaef9ba4ff27</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">7f6a72963592be2d7b9dc9218c1b2d94-1f5aeaef9ba4ff27-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">TicketTrendsBySecurityArea</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TicketsTrands_T03_getSecurityTicketChangePercentBySecArea" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getSecurityTicketChangePercentBySecArea&quot;,&quot;variables&quot;:{&quot;accessFilter&quot;:{&quot;environmentName&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;Production&quot;,&quot;Sensitive Data&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-29T23:59:59.999Z&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;NEW&quot;},&quot;securityArea&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;Access&quot;}},&quot;auditFilter&quot;:{&quot;environmentName&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;Production&quot;,&quot;Sensitive Data&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-29T23:59:59.999Z&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;NEW&quot;},&quot;securityArea&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;Audit&quot;}},&quot;credentialsFilter&quot;:{&quot;environmentName&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;Production&quot;,&quot;Sensitive Data&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-29T23:59:59.999Z&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;NEW&quot;},&quot;securityArea&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;Credentials&quot;}},&quot;baseConfigFilter&quot;:{&quot;environmentName&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;Production&quot;,&quot;Sensitive Data&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-29T23:59:59.999Z&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;NEW&quot;},&quot;securityArea&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;Base Config&quot;}},&quot;encryptionFilter&quot;:{&quot;environmentName&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;Production&quot;,&quot;Sensitive Data&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-29T23:59:59.999Z&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;NEW&quot;},&quot;securityArea&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;Encryption&quot;}},&quot;leastPrivilegeFilter&quot;:{&quot;environmentName&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;Production&quot;,&quot;Sensitive Data&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-29T23:59:59.999Z&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;NEW&quot;},&quot;securityArea&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;Least Privilege&quot;}},&quot;networkFilter&quot;:{&quot;environmentName&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;Production&quot;,&quot;Sensitive Data&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-29T23:59:59.999Z&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;NEW&quot;},&quot;securityArea&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;Network&quot;}},&quot;dataProtectionFilter&quot;:{&quot;environmentName&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;Production&quot;,&quot;Sensitive Data&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-29T23:59:59.999Z&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;NEW&quot;},&quot;securityArea&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;Data Protection&quot;}},&quot;privilegeEscalationFilter&quot;:{&quot;environmentName&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;Production&quot;,&quot;Sensitive Data&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-29T23:59:59.999Z&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;NEW&quot;},&quot;securityArea&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;Privilege Escalation&quot;}},&quot;threatVulnManagementFilter&quot;:{&quot;environmentName&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;Production&quot;,&quot;Sensitive Data&quot;]},&quot;dateTime&quot;:{&quot;op&quot;:&quot;BETWEEN&quot;,&quot;values&quot;:[&quot;2023-02-28T00:00:00.000Z&quot;,&quot;2023-03-29T23:59:59.999Z&quot;]},&quot;status&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;NEW&quot;},&quot;securityArea&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;Threat &amp; Vuln. Management&quot;}}},&quot;query&quot;:&quot;query getSecurityTicketChangePercentBySecArea($accessFilter: TicketTrendsFilter!, $auditFilter: TicketTrendsFilter!, $credentialsFilter: TicketTrendsFilter!, $baseConfigFilter: TicketTrendsFilter!, $encryptionFilter: TicketTrendsFilter!, $leastPrivilegeFilter: TicketTrendsFilter!, $networkFilter: TicketTrendsFilter!, $dataProtectionFilter: TicketTrendsFilter!, $privilegeEscalationFilter: TicketTrendsFilter!, $threatVulnManagementFilter: TicketTrendsFilter!) {\n  access: TicketPercentageIncrease(where: $accessFilter) {\n    isValid\n    countChange\n    __typename\n  }\n  audit: TicketPercentageIncrease(where: $auditFilter) {\n    isValid\n    countChange\n    __typename\n  }\n  credentials: TicketPercentageIncrease(where: $credentialsFilter) {\n    isValid\n    countChange\n    __typename\n  }\n  baseConfig: TicketPercentageIncrease(where: $baseConfigFilter) {\n    isValid\n    countChange\n    __typename\n  }\n  encryption: TicketPercentageIncrease(where: $encryptionFilter) {\n    isValid\n    countChange\n    __typename\n  }\n  leastPrivilege: TicketPercentageIncrease(where: $leastPrivilegeFilter) {\n    isValid\n    countChange\n    __typename\n  }\n  network: TicketPercentageIncrease(where: $networkFilter) {\n    isValid\n    countChange\n    __typename\n  }\n  dataProtection: TicketPercentageIncrease(where: $dataProtectionFilter) {\n    isValid\n    countChange\n    __typename\n  }\n  privilegeEscalation: TicketPercentageIncrease(where: $privilegeEscalationFilter) {\n    isValid\n    countChange\n    __typename\n  }\n  threatVulnManagement: TicketPercentageIncrease(\n    where: $threatVulnManagementFilter\n  ) {\n    isValid\n    countChange\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">a81d273153d414789b75fca913595687</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:9faf-44ca-a3e6-2bae5d9bb4a1/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">0b34c2b5fd802143</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">a81d273153d414789b75fca913595687-0b34c2b5fd802143-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getSecurityTicketChangePercentBySecArea</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="stage11733927_14_Issues" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Issues_T01_groupedTicketsGraphQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;groupedTicketsGraphQuery&quot;,&quot;variables&quot;:{&quot;limit&quot;:100,&quot;orderBy&quot;:[{&quot;count&quot;:{&quot;order&quot;:&quot;DESC&quot;}}],&quot;controlFrameworkSrn&quot;:{&quot;swimlaneSrns&quot;:{&quot;value&quot;:&quot;ALL&quot;},&quot;controlFrameworkSrn&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;ticketType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;Property&quot;},&quot;controlFrameworkTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlFrameworkEnabled&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:true},&quot;status&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;NEW&quot;]}},&quot;maturityArea&quot;:{&quot;swimlaneSrns&quot;:{&quot;value&quot;:&quot;ALL&quot;},&quot;ticketType&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;Policy&quot;},&quot;securityArea&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;NEW&quot;]}},&quot;objectiveSrn&quot;:{&quot;swimlaneSrns&quot;:{&quot;value&quot;:&quot;ALL&quot;},&quot;objectiveSrn&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;ticketType&quot;:{&quot;op&quot;:&quot;EQ&quot;,&quot;value&quot;:&quot;Policy&quot;},&quot;objectiveName&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;NEW&quot;]}},&quot;ticketKey&quot;:{&quot;swimlaneSrns&quot;:{&quot;value&quot;:&quot;ALL&quot;},&quot;ticketKey&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;ticketType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;Property&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;NEW&quot;]}},&quot;resourceSRN&quot;:{&quot;swimlaneSrns&quot;:{&quot;value&quot;:&quot;ALL&quot;},&quot;resourceSRN&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;resourceName&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;NEW&quot;]}},&quot;resourceType&quot;:{&quot;swimlaneSrns&quot;:{&quot;value&quot;:&quot;ALL&quot;},&quot;resourceType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;NEW&quot;]}},&quot;severityCategory&quot;:{&quot;swimlaneSrns&quot;:{&quot;value&quot;:&quot;ALL&quot;},&quot;severityCategory&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;NEW&quot;]}},&quot;swimlaneSrns&quot;:{&quot;swimlaneSrns&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;swimlaneTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;NEW&quot;]}},&quot;controlFrameworkSrn_includeRollup&quot;:{&quot;status&quot;:true},&quot;maturityArea_includeRollup&quot;:{&quot;status&quot;:true},&quot;objectiveSrn_includeRollup&quot;:{&quot;status&quot;:true},&quot;ticketKey_includeRollup&quot;:{&quot;status&quot;:true},&quot;resourceSRN_includeRollup&quot;:{&quot;status&quot;:true},&quot;resourceType_includeRollup&quot;:{&quot;status&quot;:true},&quot;severityCategory_includeRollup&quot;:{&quot;status&quot;:true},&quot;swimlaneSrns_includeRollup&quot;:{&quot;status&quot;:true}},&quot;query&quot;:&quot;query groupedTicketsGraphQuery($limit: Long = 100, $orderBy: [TicketRollupOrder] = [{count: {order: DESC}}], $controlFrameworkSrn: TicketRollupFilter!, $maturityArea: TicketRollupFilter!, $objectiveSrn: TicketRollupFilter!, $resourceType: TicketRollupFilter!, $resourceSRN: TicketRollupFilter!, $severityCategory: TicketRollupFilter!, $ticketKey: TicketRollupFilter!, $swimlaneSrns: TicketRollupFilter!, $controlFrameworkSrn_includeRollup: TicketRollupIncludeRollup!, $maturityArea_includeRollup: TicketRollupIncludeRollup!, $objectiveSrn_includeRollup: TicketRollupIncludeRollup!, $resourceType_includeRollup: TicketRollupIncludeRollup!, $resourceSRN_includeRollup: TicketRollupIncludeRollup!, $severityCategory_includeRollup: TicketRollupIncludeRollup!, $ticketKey_includeRollup: TicketRollupIncludeRollup!, $swimlaneSrns_includeRollup: TicketRollupIncludeRollup!) {\n  controlFrameworkSrn: TicketRollups(\n    where: $controlFrameworkSrn\n    includeRollup: $controlFrameworkSrn_includeRollup\n  ) {\n    ...ticketRollupFields\n    __typename\n  }\n  maturityArea: TicketRollups(\n    where: $maturityArea\n    includeRollup: $maturityArea_includeRollup\n  ) {\n    ...ticketRollupFields\n    __typename\n  }\n  objectiveSrn: TicketRollups(\n    where: $objectiveSrn\n    includeRollup: $objectiveSrn_includeRollup\n  ) {\n    ...ticketRollupFields\n    __typename\n  }\n  resourceType: TicketRollups(\n    where: $resourceType\n    includeRollup: $resourceType_includeRollup\n  ) {\n    ...ticketRollupFields\n    __typename\n  }\n  resourceSRN: TicketRollups(\n    where: $resourceSRN\n    includeRollup: $resourceSRN_includeRollup\n  ) {\n    ...ticketRollupFields\n    __typename\n  }\n  severityCategory: TicketRollups(\n    where: $severityCategory\n    includeRollup: $severityCategory_includeRollup\n  ) {\n    ...ticketRollupFields\n    __typename\n  }\n  ticketKey: TicketRollups(\n    where: $ticketKey\n    includeRollup: $ticketKey_includeRollup\n  ) {\n    ...ticketRollupFields\n    __typename\n  }\n  swimlaneSrns: TicketRollups(\n    where: $swimlaneSrns\n    includeRollup: $swimlaneSrns_includeRollup\n  ) {\n    ...ticketRollupFields\n    __typename\n  }\n}\n\nfragment ticketRollupFields on TicketRollups {\n  items(limit: $limit, orderBy: $orderBy) {\n    count\n    controlFrameworkSrn\n    maturityArea\n    objectiveSrn\n    ticketKey\n    resourceType\n    resourceSRN\n    severityCategory\n    swimlaneSrn\n    __typename\n  }\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">cb449a8e2e43bea13fd607694fce3e83</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:1cb2-4c85-9ce1-11c7f05270a7/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">9a219f2ff506b1e9</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">cb449a8e2e43bea13fd607694fce3e83-9a219f2ff506b1e9-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">groupedTicketsGraphQuery</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Issues_T02_groupedTicketsGraphQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;topRiskPoliciesTicketRollups&quot;,&quot;variables&quot;:{&quot;limit&quot;:100,&quot;offset&quot;:0,&quot;sort&quot;:[{&quot;riskScore&quot;:{&quot;order&quot;:&quot;ASC&quot;}}],&quot;filter&quot;:{&quot;swimlaneSrns&quot;:{&quot;value&quot;:&quot;ALL&quot;},&quot;ticketKey&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;ticketType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;Property&quot;},&quot;controlPolicyTitle&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;controlPolicyType&quot;:{&quot;op&quot;:&quot;NEQ&quot;,&quot;value&quot;:&quot;ALL&quot;},&quot;status&quot;:{&quot;op&quot;:&quot;IN_LIST&quot;,&quot;values&quot;:[&quot;NEW&quot;]}},&quot;includeRollup&quot;:{&quot;status&quot;:true}},&quot;query&quot;:&quot;query topRiskPoliciesTicketRollups($filter: TicketRollupFilter!, $includeRollup: TicketRollupIncludeRollup!, $limit: Long = 100, $offset: Long = 0, $sort: [TicketRollupOrder] = [{riskScore: {order: ASC}}]) {\n  TicketRollups(where: $filter, includeRollup: $includeRollup) {\n    items(limit: $limit, offset: $offset, orderBy: $sort) {\n      count\n      riskScore\n      riskScoreNumeric\n      riskScoreDescription\n      ticketKey\n      controlPolicyType\n      controlPolicyTitle\n      controlFrameworkSrn\n      controlFrameworkTitle\n      maturityArea\n      objectiveSrn\n      resourceSRN\n      resourceType\n      severityCategory\n      swimlaneSrn\n      swimlaneTitle\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">cb449a8e2e43bea13fd607694fce3e83</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:3f95-4da4-85a5-ecfab3164456/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">fdeeb8e7d536c34e</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">cb449a8e2e43bea13fd607694fce3e83-fdeeb8e7d536c34e-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">topRiskPoliciesTicketRollups</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://front-end-collector-web.s.sonraisecurity.com/v1/metrics" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;resourceMetrics&quot;:[{&quot;resource&quot;:{&quot;attributes&quot;:[],&quot;droppedAttributesCount&quot;:0},&quot;scopeMetrics&quot;:[{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-document-load&quot;,&quot;version&quot;:&quot;0.27.1&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-fetch&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-long-task&quot;,&quot;version&quot;:&quot;0.30.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-xml-http-request&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;app_layout_error_boundary_errors_count&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;sum&quot;:{&quot;aggregationTemporality&quot;:2,&quot;isMonotonic&quot;:true,&quot;dataPoints&quot;:[]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.graphql&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;graphql_request_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSavedSearches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:800,&quot;min&quot;:800,&quot;max&quot;:800,&quot;startTimeUnixNano&quot;:1680198368030700000,&quot;timeUnixNano&quot;:1680198483512700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchSwimlanes&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:931,&quot;min&quot;:931,&quot;max&quot;:931,&quot;startTimeUnixNano&quot;:1680198368162600000,&quot;timeUnixNano&quot;:1680198483512700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAccounts&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:934,&quot;min&quot;:934,&quot;max&quot;:934,&quot;startTimeUnixNano&quot;:1680198368165500000,&quot;timeUnixNano&quot;:1680198483512700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiSeaches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:945,&quot;min&quot;:945,&quot;max&quot;:945,&quot;startTimeUnixNano&quot;:1680198368175100000,&quot;timeUnixNano&quot;:1680198483512700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSubscriptions&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:963,&quot;min&quot;:963,&quot;max&quot;:963,&quot;startTimeUnixNano&quot;:1680198368194200000,&quot;timeUnixNano&quot;:1680198483512700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchSummaryPanelData&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:165,&quot;min&quot;:165,&quot;max&quot;:165,&quot;startTimeUnixNano&quot;:1680198390467200000,&quot;timeUnixNano&quot;:1680198483512700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchCrmTicketKeyOptions&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:184,&quot;min&quot;:184,&quot;max&quot;:184,&quot;startTimeUnixNano&quot;:1680198390484400000,&quot;timeUnixNano&quot;:1680198483512700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;risk_levels_by_metatype&quot;}}],&quot;bucketCounts&quot;:[0,3,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:3,&quot;sum&quot;:264,&quot;min&quot;:60,&quot;max&quot;:104,&quot;startTimeUnixNano&quot;:1680198390564200000,&quot;timeUnixNano&quot;:1680198483512700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;counPanelAssetInventory&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:681,&quot;min&quot;:681,&quot;max&quot;:681,&quot;startTimeUnixNano&quot;:1680198390982600000,&quot;timeUnixNano&quot;:1680198483512700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;resourcesRisksPanelData&quot;}}],&quot;bucketCounts&quot;:[0,0,0,2,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:2,&quot;sum&quot;:2915,&quot;min&quot;:1155,&quot;max&quot;:1760,&quot;startTimeUnixNano&quot;:1680198391458800000,&quot;timeUnixNano&quot;:1680198483512700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchControlPoliciesOptions&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1453,&quot;min&quot;:1453,&quot;max&quot;:1453,&quot;startTimeUnixNano&quot;:1680198391753000000,&quot;timeUnixNano&quot;:1680198483512700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Maturity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchMaturitySwimlanes&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:685,&quot;min&quot;:685,&quot;max&quot;:685,&quot;startTimeUnixNano&quot;:1680198414507600100,&quot;timeUnixNano&quot;:1680198483512700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Maturity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchMaturitySwimlanesRadarChartData&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:152,&quot;min&quot;:152,&quot;max&quot;:152,&quot;startTimeUnixNano&quot;:1680198414684600000,&quot;timeUnixNano&quot;:1680198483512700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Maturity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchMaturitySwimlanesPassing&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,0,0,1,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:12039,&quot;min&quot;:12039,&quot;max&quot;:12039,&quot;startTimeUnixNano&quot;:1680198426565500000,&quot;timeUnixNano&quot;:1680198483512700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Tickets&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchTicketList&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:81,&quot;min&quot;:81,&quot;max&quot;:81,&quot;startTimeUnixNano&quot;:1680198439846800100,&quot;timeUnixNano&quot;:1680198483512700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Tickets&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchTicketTemplates&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:98,&quot;min&quot;:98,&quot;max&quot;:98,&quot;startTimeUnixNano&quot;:1680198439851200000,&quot;timeUnixNano&quot;:1680198483512700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Tickets&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getEscalations&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1042,&quot;min&quot;:1042,&quot;max&quot;:1042,&quot;startTimeUnixNano&quot;:1680198440796200000,&quot;timeUnixNano&quot;:1680198483512700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Tickets&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchTicketCount&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1703,&quot;min&quot;:1703,&quot;max&quot;:1703,&quot;startTimeUnixNano&quot;:1680198441455600000,&quot;timeUnixNano&quot;:1680198483512700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/TicketTrends&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSecurityTicketChangePercentBySecArea&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:984,&quot;min&quot;:984,&quot;max&quot;:984,&quot;startTimeUnixNano&quot;:1680198470083300000,&quot;timeUnixNano&quot;:1680198483512700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/TicketTrends&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TicketTrendsV2&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,1,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:2628,&quot;min&quot;:2628,&quot;max&quot;:2628,&quot;startTimeUnixNano&quot;:1680198471720300000,&quot;timeUnixNano&quot;:1680198483512700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/TicketTrends&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TicketTrendsBySecurityArea&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,0,1,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:8596,&quot;min&quot;:8596,&quot;max&quot;:8596,&quot;startTimeUnixNano&quot;:1680198477689200000,&quot;timeUnixNano&quot;:1680198483512700000}]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.newroute&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;newtab_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[]}},{&quot;name&quot;:&quot;newroute_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:455,&quot;min&quot;:455,&quot;max&quot;:455,&quot;startTimeUnixNano&quot;:1680198390595200000,&quot;timeUnixNano&quot;:1680198483512700000}]}}]}]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v1/metrics</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://front-end-collector-web.s.sonraisecurity.com/v1/metrics" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;resourceMetrics&quot;:[{&quot;resource&quot;:{&quot;attributes&quot;:[],&quot;droppedAttributesCount&quot;:0},&quot;scopeMetrics&quot;:[{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-document-load&quot;,&quot;version&quot;:&quot;0.27.1&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-fetch&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-long-task&quot;,&quot;version&quot;:&quot;0.30.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-xml-http-request&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;app_layout_error_boundary_errors_count&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;sum&quot;:{&quot;aggregationTemporality&quot;:2,&quot;isMonotonic&quot;:true,&quot;dataPoints&quot;:[]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.graphql&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;graphql_request_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSavedSearches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:800,&quot;min&quot;:800,&quot;max&quot;:800,&quot;startTimeUnixNano&quot;:1680198368030700000,&quot;timeUnixNano&quot;:1680198513515300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchSwimlanes&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:931,&quot;min&quot;:931,&quot;max&quot;:931,&quot;startTimeUnixNano&quot;:1680198368162600000,&quot;timeUnixNano&quot;:1680198513515300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAccounts&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:934,&quot;min&quot;:934,&quot;max&quot;:934,&quot;startTimeUnixNano&quot;:1680198368165500000,&quot;timeUnixNano&quot;:1680198513515300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiSeaches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:945,&quot;min&quot;:945,&quot;max&quot;:945,&quot;startTimeUnixNano&quot;:1680198368175100000,&quot;timeUnixNano&quot;:1680198513515300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSubscriptions&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:963,&quot;min&quot;:963,&quot;max&quot;:963,&quot;startTimeUnixNano&quot;:1680198368194200000,&quot;timeUnixNano&quot;:1680198513515300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchSummaryPanelData&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:165,&quot;min&quot;:165,&quot;max&quot;:165,&quot;startTimeUnixNano&quot;:1680198390467200000,&quot;timeUnixNano&quot;:1680198513515300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchCrmTicketKeyOptions&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:184,&quot;min&quot;:184,&quot;max&quot;:184,&quot;startTimeUnixNano&quot;:1680198390484400000,&quot;timeUnixNano&quot;:1680198513515300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;risk_levels_by_metatype&quot;}}],&quot;bucketCounts&quot;:[0,3,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:3,&quot;sum&quot;:264,&quot;min&quot;:60,&quot;max&quot;:104,&quot;startTimeUnixNano&quot;:1680198390564200000,&quot;timeUnixNano&quot;:1680198513515300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;counPanelAssetInventory&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:681,&quot;min&quot;:681,&quot;max&quot;:681,&quot;startTimeUnixNano&quot;:1680198390982600000,&quot;timeUnixNano&quot;:1680198513515300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;resourcesRisksPanelData&quot;}}],&quot;bucketCounts&quot;:[0,0,0,2,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:2,&quot;sum&quot;:2915,&quot;min&quot;:1155,&quot;max&quot;:1760,&quot;startTimeUnixNano&quot;:1680198391458800000,&quot;timeUnixNano&quot;:1680198513515300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchControlPoliciesOptions&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1453,&quot;min&quot;:1453,&quot;max&quot;:1453,&quot;startTimeUnixNano&quot;:1680198391753000000,&quot;timeUnixNano&quot;:1680198513515300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Maturity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchMaturitySwimlanes&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:685,&quot;min&quot;:685,&quot;max&quot;:685,&quot;startTimeUnixNano&quot;:1680198414507600100,&quot;timeUnixNano&quot;:1680198513515300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Maturity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchMaturitySwimlanesRadarChartData&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:152,&quot;min&quot;:152,&quot;max&quot;:152,&quot;startTimeUnixNano&quot;:1680198414684600000,&quot;timeUnixNano&quot;:1680198513515300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Maturity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchMaturitySwimlanesPassing&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,0,0,1,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:12039,&quot;min&quot;:12039,&quot;max&quot;:12039,&quot;startTimeUnixNano&quot;:1680198426565500000,&quot;timeUnixNano&quot;:1680198513515300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Tickets&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchTicketList&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:81,&quot;min&quot;:81,&quot;max&quot;:81,&quot;startTimeUnixNano&quot;:1680198439846800100,&quot;timeUnixNano&quot;:1680198513515300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Tickets&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchTicketTemplates&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:98,&quot;min&quot;:98,&quot;max&quot;:98,&quot;startTimeUnixNano&quot;:1680198439851200000,&quot;timeUnixNano&quot;:1680198513515300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Tickets&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getEscalations&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1042,&quot;min&quot;:1042,&quot;max&quot;:1042,&quot;startTimeUnixNano&quot;:1680198440796200000,&quot;timeUnixNano&quot;:1680198513515300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Tickets&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchTicketCount&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1703,&quot;min&quot;:1703,&quot;max&quot;:1703,&quot;startTimeUnixNano&quot;:1680198441455600000,&quot;timeUnixNano&quot;:1680198513515300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/TicketTrends&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSecurityTicketChangePercentBySecArea&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:984,&quot;min&quot;:984,&quot;max&quot;:984,&quot;startTimeUnixNano&quot;:1680198470083300000,&quot;timeUnixNano&quot;:1680198513515300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/TicketTrends&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TicketTrendsV2&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,1,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:2628,&quot;min&quot;:2628,&quot;max&quot;:2628,&quot;startTimeUnixNano&quot;:1680198471720300000,&quot;timeUnixNano&quot;:1680198513515300000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/TicketTrends&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TicketTrendsBySecurityArea&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,0,1,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:8596,&quot;min&quot;:8596,&quot;max&quot;:8596,&quot;startTimeUnixNano&quot;:1680198477689200000,&quot;timeUnixNano&quot;:1680198513515300000}]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.newroute&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;newtab_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[]}},{&quot;name&quot;:&quot;newroute_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:455,&quot;min&quot;:455,&quot;max&quot;:455,&quot;startTimeUnixNano&quot;:1680198390595200000,&quot;timeUnixNano&quot;:1680198513515300000}]}}]}]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v1/metrics</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://front-end-collector-web.s.sonraisecurity.com/v1/metrics" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;resourceMetrics&quot;:[{&quot;resource&quot;:{&quot;attributes&quot;:[],&quot;droppedAttributesCount&quot;:0},&quot;scopeMetrics&quot;:[{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-document-load&quot;,&quot;version&quot;:&quot;0.27.1&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-fetch&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-long-task&quot;,&quot;version&quot;:&quot;0.30.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-xml-http-request&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;app_layout_error_boundary_errors_count&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;sum&quot;:{&quot;aggregationTemporality&quot;:2,&quot;isMonotonic&quot;:true,&quot;dataPoints&quot;:[]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.graphql&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;graphql_request_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSavedSearches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:800,&quot;min&quot;:800,&quot;max&quot;:800,&quot;startTimeUnixNano&quot;:1680198368030700000,&quot;timeUnixNano&quot;:1680198543518600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchSwimlanes&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:931,&quot;min&quot;:931,&quot;max&quot;:931,&quot;startTimeUnixNano&quot;:1680198368162600000,&quot;timeUnixNano&quot;:1680198543518600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAccounts&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:934,&quot;min&quot;:934,&quot;max&quot;:934,&quot;startTimeUnixNano&quot;:1680198368165500000,&quot;timeUnixNano&quot;:1680198543518600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiSeaches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:945,&quot;min&quot;:945,&quot;max&quot;:945,&quot;startTimeUnixNano&quot;:1680198368175100000,&quot;timeUnixNano&quot;:1680198543518600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSubscriptions&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:963,&quot;min&quot;:963,&quot;max&quot;:963,&quot;startTimeUnixNano&quot;:1680198368194200000,&quot;timeUnixNano&quot;:1680198543518600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchSummaryPanelData&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:165,&quot;min&quot;:165,&quot;max&quot;:165,&quot;startTimeUnixNano&quot;:1680198390467200000,&quot;timeUnixNano&quot;:1680198543518600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchCrmTicketKeyOptions&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:184,&quot;min&quot;:184,&quot;max&quot;:184,&quot;startTimeUnixNano&quot;:1680198390484400000,&quot;timeUnixNano&quot;:1680198543518600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;risk_levels_by_metatype&quot;}}],&quot;bucketCounts&quot;:[0,3,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:3,&quot;sum&quot;:264,&quot;min&quot;:60,&quot;max&quot;:104,&quot;startTimeUnixNano&quot;:1680198390564200000,&quot;timeUnixNano&quot;:1680198543518600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;counPanelAssetInventory&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:681,&quot;min&quot;:681,&quot;max&quot;:681,&quot;startTimeUnixNano&quot;:1680198390982600000,&quot;timeUnixNano&quot;:1680198543518600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;resourcesRisksPanelData&quot;}}],&quot;bucketCounts&quot;:[0,0,0,2,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:2,&quot;sum&quot;:2915,&quot;min&quot;:1155,&quot;max&quot;:1760,&quot;startTimeUnixNano&quot;:1680198391458800000,&quot;timeUnixNano&quot;:1680198543518600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchControlPoliciesOptions&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1453,&quot;min&quot;:1453,&quot;max&quot;:1453,&quot;startTimeUnixNano&quot;:1680198391753000000,&quot;timeUnixNano&quot;:1680198543518600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Maturity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchMaturitySwimlanes&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:685,&quot;min&quot;:685,&quot;max&quot;:685,&quot;startTimeUnixNano&quot;:1680198414507600100,&quot;timeUnixNano&quot;:1680198543518600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Maturity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchMaturitySwimlanesRadarChartData&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:152,&quot;min&quot;:152,&quot;max&quot;:152,&quot;startTimeUnixNano&quot;:1680198414684600000,&quot;timeUnixNano&quot;:1680198543518600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Maturity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchMaturitySwimlanesPassing&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,0,0,1,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:12039,&quot;min&quot;:12039,&quot;max&quot;:12039,&quot;startTimeUnixNano&quot;:1680198426565500000,&quot;timeUnixNano&quot;:1680198543518600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Tickets&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchTicketList&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:81,&quot;min&quot;:81,&quot;max&quot;:81,&quot;startTimeUnixNano&quot;:1680198439846800100,&quot;timeUnixNano&quot;:1680198543518600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Tickets&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchTicketTemplates&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:98,&quot;min&quot;:98,&quot;max&quot;:98,&quot;startTimeUnixNano&quot;:1680198439851200000,&quot;timeUnixNano&quot;:1680198543518600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Tickets&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getEscalations&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1042,&quot;min&quot;:1042,&quot;max&quot;:1042,&quot;startTimeUnixNano&quot;:1680198440796200000,&quot;timeUnixNano&quot;:1680198543518600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Tickets&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchTicketCount&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1703,&quot;min&quot;:1703,&quot;max&quot;:1703,&quot;startTimeUnixNano&quot;:1680198441455600000,&quot;timeUnixNano&quot;:1680198543518600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/TicketTrends&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSecurityTicketChangePercentBySecArea&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:984,&quot;min&quot;:984,&quot;max&quot;:984,&quot;startTimeUnixNano&quot;:1680198470083300000,&quot;timeUnixNano&quot;:1680198543518600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/TicketTrends&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TicketTrendsV2&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,1,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:2628,&quot;min&quot;:2628,&quot;max&quot;:2628,&quot;startTimeUnixNano&quot;:1680198471720300000,&quot;timeUnixNano&quot;:1680198543518600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/TicketTrends&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TicketTrendsBySecurityArea&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,0,1,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:8596,&quot;min&quot;:8596,&quot;max&quot;:8596,&quot;startTimeUnixNano&quot;:1680198477689200000,&quot;timeUnixNano&quot;:1680198543518600000}]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.newroute&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;newtab_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[]}},{&quot;name&quot;:&quot;newroute_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:455,&quot;min&quot;:455,&quot;max&quot;:455,&quot;startTimeUnixNano&quot;:1680198390595200000,&quot;timeUnixNano&quot;:1680198543518600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Issues&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,0,0,0,0,0,1,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:60001,&quot;min&quot;:60001,&quot;max&quot;:60001,&quot;startTimeUnixNano&quot;:1680198542115300000,&quot;timeUnixNano&quot;:1680198543518600000}]}}]}]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v1/metrics</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://login.s.sonraisecurity.com/oauth/token" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;grant_type&quot;:&quot;authorization_code&quot;,&quot;redirect_uri&quot;:&quot;https://app.s.sonraisecurity.com/Login&quot;,&quot;audience&quot;:&quot;stage-graphql-server.s.sonraisecurity.com&quot;,&quot;client_id&quot;:&quot;7fQzdcMRARuhzmfP3xoR7JAjfSlttq95&quot;,&quot;code_verifier&quot;:&quot;3r8N.sPokq_bGX7FSQgC3rum3UEBjO4OnadJVAf2Wk.&quot;,&quot;code&quot;:&quot;JIJ2_Rl10sAPTnMmL-hlU70Y0yhvnrTRxihmOY9B61Szi&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">oauth/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Issues_T03_load_content_ticketRollupTitleControlPolicy" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;load_content_ticketRollupTitleControlPolicy&quot;,&quot;variables&quot;:{&quot;ids&quot;:[&quot;srn:supersonrai::ControlPolicy/659535e8-1f76-4c92-b0f3-98bd28237e0a&quot;,&quot;srn:supersonrai::ControlPolicy/eccacb7a-22f3-44f7-b227-e935e2545fd7&quot;,&quot;srn:supersonrai::ControlPolicy/89ee1ac9-0dd3-405b-b10e-db7e93c68090&quot;]},&quot;query&quot;:&quot;query load_content_ticketRollupTitleControlPolicy($ids: [String]) {\n  ControlPolicies(where: {srn: {op: IN_LIST, values: $ids}}) {\n    items {\n      ...ticketRollupTitleControlPolicy\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment ticketRollupTitleControlPolicy on Controlpolicy {\n  srn\n  title\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">ca61403b6ffe90acd00cbb0aa026fa9f</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:9b55-48a9-9136-d0eb2bb8659c/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">fbd6ed274b0fec63</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">ca61403b6ffe90acd00cbb0aa026fa9f-fbd6ed274b0fec63-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">load_content_ticketRollupTitleControlPolicy</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://front-end-collector-web.s.sonraisecurity.com/v1/metrics" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;resourceMetrics&quot;:[{&quot;resource&quot;:{&quot;attributes&quot;:[],&quot;droppedAttributesCount&quot;:0},&quot;scopeMetrics&quot;:[{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-document-load&quot;,&quot;version&quot;:&quot;0.27.1&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-fetch&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-long-task&quot;,&quot;version&quot;:&quot;0.30.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-xml-http-request&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;app_layout_error_boundary_errors_count&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;sum&quot;:{&quot;aggregationTemporality&quot;:2,&quot;isMonotonic&quot;:true,&quot;dataPoints&quot;:[]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.graphql&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;graphql_request_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSavedSearches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:800,&quot;min&quot;:800,&quot;max&quot;:800,&quot;startTimeUnixNano&quot;:1680198368030700000,&quot;timeUnixNano&quot;:1680198573511900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchSwimlanes&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:931,&quot;min&quot;:931,&quot;max&quot;:931,&quot;startTimeUnixNano&quot;:1680198368162600000,&quot;timeUnixNano&quot;:1680198573511900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAccounts&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:934,&quot;min&quot;:934,&quot;max&quot;:934,&quot;startTimeUnixNano&quot;:1680198368165500000,&quot;timeUnixNano&quot;:1680198573511900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiSeaches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:945,&quot;min&quot;:945,&quot;max&quot;:945,&quot;startTimeUnixNano&quot;:1680198368175100000,&quot;timeUnixNano&quot;:1680198573511900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Dashboards&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSubscriptions&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:963,&quot;min&quot;:963,&quot;max&quot;:963,&quot;startTimeUnixNano&quot;:1680198368194200000,&quot;timeUnixNano&quot;:1680198573511900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchSummaryPanelData&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:165,&quot;min&quot;:165,&quot;max&quot;:165,&quot;startTimeUnixNano&quot;:1680198390467200000,&quot;timeUnixNano&quot;:1680198573511900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchCrmTicketKeyOptions&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:184,&quot;min&quot;:184,&quot;max&quot;:184,&quot;startTimeUnixNano&quot;:1680198390484400000,&quot;timeUnixNano&quot;:1680198573511900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;risk_levels_by_metatype&quot;}}],&quot;bucketCounts&quot;:[0,3,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:3,&quot;sum&quot;:264,&quot;min&quot;:60,&quot;max&quot;:104,&quot;startTimeUnixNano&quot;:1680198390564200000,&quot;timeUnixNano&quot;:1680198573511900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;counPanelAssetInventory&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:681,&quot;min&quot;:681,&quot;max&quot;:681,&quot;startTimeUnixNano&quot;:1680198390982600000,&quot;timeUnixNano&quot;:1680198573511900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;resourcesRisksPanelData&quot;}}],&quot;bucketCounts&quot;:[0,0,0,2,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:2,&quot;sum&quot;:2915,&quot;min&quot;:1155,&quot;max&quot;:1760,&quot;startTimeUnixNano&quot;:1680198391458800000,&quot;timeUnixNano&quot;:1680198573511900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchControlPoliciesOptions&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1453,&quot;min&quot;:1453,&quot;max&quot;:1453,&quot;startTimeUnixNano&quot;:1680198391753000000,&quot;timeUnixNano&quot;:1680198573511900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Maturity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchMaturitySwimlanes&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:685,&quot;min&quot;:685,&quot;max&quot;:685,&quot;startTimeUnixNano&quot;:1680198414507600100,&quot;timeUnixNano&quot;:1680198573511900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Maturity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchMaturitySwimlanesRadarChartData&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:152,&quot;min&quot;:152,&quot;max&quot;:152,&quot;startTimeUnixNano&quot;:1680198414684600000,&quot;timeUnixNano&quot;:1680198573511900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Maturity&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchMaturitySwimlanesPassing&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,0,0,1,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:12039,&quot;min&quot;:12039,&quot;max&quot;:12039,&quot;startTimeUnixNano&quot;:1680198426565500000,&quot;timeUnixNano&quot;:1680198573511900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Tickets&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchTicketList&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:81,&quot;min&quot;:81,&quot;max&quot;:81,&quot;startTimeUnixNano&quot;:1680198439846800100,&quot;timeUnixNano&quot;:1680198573511900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Tickets&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchTicketTemplates&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:98,&quot;min&quot;:98,&quot;max&quot;:98,&quot;startTimeUnixNano&quot;:1680198439851200000,&quot;timeUnixNano&quot;:1680198573511900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Tickets&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getEscalations&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1042,&quot;min&quot;:1042,&quot;max&quot;:1042,&quot;startTimeUnixNano&quot;:1680198440796200000,&quot;timeUnixNano&quot;:1680198573511900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Tickets&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchTicketCount&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1703,&quot;min&quot;:1703,&quot;max&quot;:1703,&quot;startTimeUnixNano&quot;:1680198441455600000,&quot;timeUnixNano&quot;:1680198573511900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/TicketTrends&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSecurityTicketChangePercentBySecArea&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:984,&quot;min&quot;:984,&quot;max&quot;:984,&quot;startTimeUnixNano&quot;:1680198470083300000,&quot;timeUnixNano&quot;:1680198573511900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/TicketTrends&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TicketTrendsV2&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,1,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:2628,&quot;min&quot;:2628,&quot;max&quot;:2628,&quot;startTimeUnixNano&quot;:1680198471720300000,&quot;timeUnixNano&quot;:1680198573511900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/TicketTrends&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;TicketTrendsBySecurityArea&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,0,1,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:8596,&quot;min&quot;:8596,&quot;max&quot;:8596,&quot;startTimeUnixNano&quot;:1680198477689200000,&quot;timeUnixNano&quot;:1680198573511900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Issues&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;topRiskPoliciesTicketRollups&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,0,0,0,0,0,1,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:68633,&quot;min&quot;:68633,&quot;max&quot;:68633,&quot;startTimeUnixNano&quot;:1680198551023900000,&quot;timeUnixNano&quot;:1680198573511900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Issues&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;load_content_ticketRollupTitleControlPolicy&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:826,&quot;min&quot;:826,&quot;max&quot;:826,&quot;startTimeUnixNano&quot;:1680198551882700000,&quot;timeUnixNano&quot;:1680198573511900000}]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.newroute&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;newtab_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[]}},{&quot;name&quot;:&quot;newroute_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Summary&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:455,&quot;min&quot;:455,&quot;max&quot;:455,&quot;startTimeUnixNano&quot;:1680198390595200000,&quot;timeUnixNano&quot;:1680198573511900000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SecurityCenter/Issues&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,0,0,0,0,0,1,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:60001,&quot;min&quot;:60001,&quot;max&quot;:60001,&quot;startTimeUnixNano&quot;:1680198542115300000,&quot;timeUnixNano&quot;:1680198573511900000}]}}]}]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v1/metrics</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://front-end-collector-web.s.sonraisecurity.com/v1/metrics" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;resourceMetrics&quot;:[{&quot;resource&quot;:{&quot;attributes&quot;:[],&quot;droppedAttributesCount&quot;:0},&quot;scopeMetrics&quot;:[{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-document-load&quot;,&quot;version&quot;:&quot;0.27.1&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-fetch&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-long-task&quot;,&quot;version&quot;:&quot;0.30.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-xml-http-request&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;app_layout_error_boundary_errors_count&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;sum&quot;:{&quot;aggregationTemporality&quot;:2,&quot;isMonotonic&quot;:true,&quot;dataPoints&quot;:[]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.graphql&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;graphql_request_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.newroute&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;newtab_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[]}},{&quot;name&quot;:&quot;newroute_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[]}}]}]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v1/metrics</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="stage11733927_15_SwimlaneCheckup" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SwimlaneCheckup_T01_getStatsBySwimlane" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getStatsBySwimlane&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getStatsBySwimlane {\n  GroupedQuery(where: {keys: [Swimlane, Label]}) {\n    key\n    items {\n      value\n      hasGroupedResult {\n        items {\n          value\n          count\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">53a879eec578ccd24bec07c484eb741b</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:1093-4366-bed4-1a655c067b94/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">cc8c109d9862366b</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">53a879eec578ccd24bec07c484eb741b-cc8c109d9862366b-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getStatsBySwimlane</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SwimlaneCheckup_T02_fetchLatestCPEvalLogs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;fetchLatestCPEvalLogs&quot;,&quot;variables&quot;:{&quot;policySrns&quot;:[&quot;srn:supersonrai::ControlPolicy/2992c85a-b598-48bc-979e-a8f87b9dbc49&quot;,&quot;srn:supersonrai::ControlPolicy/70084518-ac96-4c5b-8a13-022a0c085ded&quot;,&quot;srn:supersonrai::ControlPolicy/9662f13b-46c2-4e94-987f-c15a6f869c76&quot;,&quot;srn:supersonrai::ControlPolicy/7ab64be6-4925-40df-8edf-5eecf52e9ab6&quot;,&quot;srn:supersonrai::ControlPolicy/ca07f1a0-b914-44da-85de-0ae41c38b310&quot;,&quot;srn:supersonrai::ControlPolicy/01bed657-134f-46b0-9412-f0720ea8a5d1&quot;,&quot;srn:supersonrai::ControlPolicy/569dddb1-208a-4289-ac96-02017793dba6&quot;,&quot;srn:supersonrai::ControlPolicy/f015dc34-e3e6-4db2-932a-182b6b5f5ae7&quot;,&quot;srn:supersonrai::ControlPolicy/d3682b01-cbdb-4548-9c03-0a625d1e9347&quot;,&quot;srn:supersonrai::ControlPolicy/a0b3e5fc-b641-4bea-b2b3-af1589da36e8&quot;,&quot;srn:supersonrai::ControlPolicy/02fee0f1-4656-4de1-91c8-9a77152938f4&quot;,&quot;srn:supersonrai::ControlPolicy/ddec1226-a23f-46a3-879d-e9ae0fdd51e7&quot;,&quot;srn:supersonrai::ControlPolicy/6a66a148-6cd0-4d53-839f-a81712d8c424&quot;,&quot;srn:supersonrai::ControlPolicy/c42d55a2-b668-46b3-9f19-57557af3a5e2&quot;,&quot;srn:supersonrai::ControlPolicy/abe977a3-d2ce-492c-939f-fecf646e7c71&quot;,&quot;srn:supersonrai::ControlPolicy/d58e4e23-d879-454c-ad1e-7f051ca50b86&quot;,&quot;srn:supersonrai::ControlPolicy/8875fc15-1e8f-4024-b745-edad91b756b7&quot;,&quot;srn:supersonrai::ControlPolicy/7fe8dab0-ae6e-4456-8c06-5f831c5fc7dc&quot;,&quot;srn:supersonrai::ControlPolicy/d6606624-14ce-42bc-8c15-c4832279359a&quot;,&quot;srn:supersonrai::ControlPolicy/820e093a-1344-4cc3-8c48-c7164afb243b&quot;,&quot;srn:supersonrai::ControlPolicy/8d93def7-b73f-4650-8214-1d19331273cd&quot;,&quot;srn:supersonrai::ControlPolicy/1d8eeb01-92c0-4270-a8ee-a7c4296272ea&quot;,&quot;srn:supersonrai::ControlPolicy/66f662df-acd5-49ad-a4bc-3fbbd3870f49&quot;,&quot;srn:supersonrai::ControlPolicy/9304c022-9600-41e7-9cfc-0676bbe9c591&quot;,&quot;srn:supersonrai::ControlPolicy/83a1ca33-12fc-4f65-89c5-e169be71e74c&quot;,&quot;srn:supersonrai::ControlPolicy/3ec7c61e-736f-4cde-807a-0ac175756ae4&quot;,&quot;srn:supersonrai::ControlPolicy/ddf5fd8e-c658-4606-9a24-4de35473557c&quot;,&quot;srn:supersonrai::ControlPolicy/f684722d-f5fb-419a-8c22-70d9fdc5d183&quot;,&quot;srn:supersonrai::ControlPolicy/38051138-ba0f-431e-a3d6-0e1fc2799d90&quot;,&quot;srn:supersonrai::ControlPolicy/646152af-3750-4d26-94ae-5dc5668fa256&quot;,&quot;srn:supersonrai::ControlPolicy/99af7c2f-8022-41de-9897-d13514c16fb4&quot;,&quot;srn:supersonrai::ControlPolicy/59cbc312-34f6-4a4e-961b-2b0d1abe4e78&quot;,&quot;srn:supersonrai::ControlPolicy/1ac48fa2-6789-4b77-89aa-df76059c3753&quot;,&quot;srn:supersonrai::ControlPolicy/59dc9836-4602-44bb-b352-53bf3a059cbf&quot;,&quot;srn:supersonrai::ControlPolicy/c55acb65-ae36-4386-8e8a-2e83b677d25b&quot;,&quot;srn:supersonrai::ControlPolicy/d68da1c0-8898-4b5b-874d-e40080034cb2&quot;,&quot;srn:supersonrai::ControlPolicy/ee0e3e38-8484-438d-8bae-7375bae6df54&quot;,&quot;srn:supersonrai::ControlPolicy/458c6986-ce57-4933-a35f-331cbd2be1f4&quot;,&quot;srn:supersonrai::ControlPolicy/ecf685ff-eb31-4f24-97d5-0f1db4738a68&quot;,&quot;srn:supersonrai::ControlPolicy/181257cc-183b-4b86-aa6c-85c6441072bb&quot;,&quot;srn:supersonrai::ControlPolicy/8cd26196-929a-49b5-af6b-de37915f2b53&quot;,&quot;srn:supersonrai::ControlPolicy/4007d909-ae91-4e1b-9e6c-a58f42647162&quot;,&quot;srn:supersonrai::ControlPolicy/dcab6cb9-cfa6-4954-8ff2-8274c1f2f180&quot;,&quot;srn:supersonrai::ControlPolicy/f493d1db-8ef2-4546-86ee-0b5b9808734f&quot;,&quot;srn:supersonrai::ControlPolicy/bcdef8ba-c217-491a-93ab-0c06bd544277&quot;,&quot;srn:supersonrai::ControlPolicy/8927da79-197b-47d3-b7af-40b98edff903&quot;,&quot;srn:supersonrai::ControlPolicy/90fceb83-3ca6-4b47-9ba6-750161078b01&quot;,&quot;srn:supersonrai::ControlPolicy/43c68e2c-bd9c-4554-a371-2d1bde4b4df1&quot;,&quot;srn:supersonrai::ControlPolicy/14637c09-5b17-4ebf-b822-07e070c3ea0a&quot;,&quot;srn:supersonrai::ControlPolicy/e2d57d19-d172-44d3-91c8-023a82566097&quot;,&quot;srn:supersonrai::ControlPolicy/900180dc-2657-439f-9d4d-7422065a503e&quot;,&quot;srn:supersonrai::ControlPolicy/27c642fb-090a-4a38-816c-b374278abc06&quot;,&quot;srn:supersonrai::ControlPolicy/18ae02b6-1496-4b44-b2cd-7a7adefcb82a&quot;,&quot;srn:supersonrai::ControlPolicy/3573b890-167a-4b99-ad60-93153522f0b3&quot;,&quot;srn:supersonrai::ControlPolicy/c1977ed1-796f-40e1-a91f-de2cd0eb9a40&quot;,&quot;srn:supersonrai::ControlPolicy/f5785ba0-2adc-4790-b4c3-25e4cfa265b1&quot;,&quot;srn:supersonrai::ControlPolicy/4957e49d-4780-493a-9d13-8eadd7031a65&quot;,&quot;srn:supersonrai::ControlPolicy/dbeadb9b-f8ec-4ca6-ab93-3ab0e8d10475&quot;,&quot;srn:supersonrai::ControlPolicy/c489901d-1f22-449a-b86a-0c68bbf1328c&quot;,&quot;srn:supersonrai::ControlPolicy/571af71b-25e3-4f17-add9-8e7353a35bb8&quot;,&quot;srn:supersonrai::ControlPolicy/f64efe6e-2a9b-4e27-aeab-395ceee22ac9&quot;,&quot;srn:supersonrai::ControlPolicy/4ecf8b19-1dc5-47cc-8740-f1794c2d9c18&quot;,&quot;srn:supersonrai::ControlPolicy/ee8be6c2-5e35-4355-b868-0c6071cf7fbd&quot;,&quot;srn:supersonrai::ControlPolicy/0a4babce-fbd3-4d87-b646-c5b7054f0280&quot;,&quot;srn:supersonrai::ControlPolicy/d2d60f20-c7ec-4704-82d8-c1653883a284&quot;,&quot;srn:supersonrai::ControlPolicy/67b0b224-2608-46c9-92f8-f82270e8184e&quot;,&quot;srn:supersonrai::ControlPolicy/10f58f2a-a096-47c1-99fe-d009f1112a3a&quot;,&quot;srn:supersonrai::ControlPolicy/00f91912-71d1-40a9-baeb-4725de640211&quot;,&quot;srn:supersonrai::ControlPolicy/9a102233-edef-427e-908c-48c60fa06f5f&quot;,&quot;srn:supersonrai::ControlPolicy/482e462d-8838-4a02-88e6-a9a7b7f22206&quot;,&quot;srn:supersonrai::ControlPolicy/19d0550d-aabd-41eb-86cc-e60e15ad4202&quot;,&quot;srn:supersonrai::ControlPolicy/d8ae74d2-4e3e-42f7-945d-5dbd06be55ab&quot;,&quot;srn:supersonrai::ControlPolicy/b3cf34f5-47b2-43c9-bb2a-242436d06b14&quot;,&quot;srn:supersonrai::ControlPolicy/e0a0fb67-6bc3-4199-97c7-c61294d82394&quot;,&quot;srn:supersonrai::ControlPolicy/28eaae05-4a75-43de-bb18-b6c604786626&quot;,&quot;srn:supersonrai::ControlPolicy/14fa6df2-b860-4890-9759-195b42637d7c&quot;,&quot;srn:supersonrai::ControlPolicy/3905b5cf-a360-47ef-8136-13495cbf5b5f&quot;,&quot;srn:supersonrai::ControlPolicy/10353af3-b8bf-424d-bbe3-62e3a6c43a8b&quot;,&quot;srn:supersonrai::ControlPolicy/720efad5-298c-45c9-b098-2ea052baa06d&quot;,&quot;srn:supersonrai::ControlPolicy/986bdc7f-2ec7-4429-bb73-7d984d13214b&quot;,&quot;srn:supersonrai::ControlPolicy/52dd18c7-6baa-48f2-9400-dfe365cdcaa1&quot;,&quot;srn:supersonrai::ControlPolicy/2cac6d88-4517-4e56-8d92-2911f0a2b36a&quot;,&quot;srn:supersonrai::ControlPolicy/09a784a5-d70a-46db-9df6-189c19a802c7&quot;,&quot;srn:supersonrai::ControlPolicy/fbbe1fff-458c-419a-8327-4ebbe9763181&quot;,&quot;srn:supersonrai::ControlPolicy/3a58c442-bc3e-4308-933b-ce8d5a6bc678&quot;,&quot;srn:supersonrai::ControlPolicy/2a11dece-cb36-43be-a423-26168bbb57e8&quot;,&quot;srn:supersonrai::ControlPolicy/1e3a8826-c8bb-4947-8ef5-9319016441c8&quot;,&quot;srn:supersonrai::ControlPolicy/7998703e-1e0c-4a10-bed3-056b53f2e3ad&quot;,&quot;srn:supersonrai::ControlPolicy/9393e9b7-2bfb-4426-9608-5aeba9048448&quot;,&quot;srn:supersonrai::ControlPolicy/113e1558-2654-441e-8067-58bd541ffdbd&quot;,&quot;srn:supersonrai::ControlPolicy/b03e2608-d7b6-451d-b78c-6e9030b44a52&quot;,&quot;srn:supersonrai::ControlPolicy/faa80be2-f94e-4522-875f-8582b6ef435c&quot;,&quot;srn:supersonrai::ControlPolicy/eb812ac4-4b38-4698-b5b9-ae506811ef77&quot;,&quot;srn:supersonrai::ControlPolicy/f8b97bab-471c-45e8-b882-b9ddc92bc078&quot;,&quot;srn:supersonrai::ControlPolicy/bad1bd6f-069d-4e32-b016-50044aa2e38a&quot;,&quot;srn:supersonrai::ControlPolicy/108d5fc8-9388-4817-abc9-d682936f3b7f&quot;,&quot;srn:supersonrai::ControlPolicy/ae39d1e1-9882-42b0-b8e6-c3d9991279f6&quot;,&quot;srn:supersonrai::ControlPolicy/e0fe2b45-3859-4916-ac48-6f372c024389&quot;,&quot;srn:supersonrai::ControlPolicy/298e54d7-fa9d-4090-a0d0-7257152c7544&quot;,&quot;srn:supersonrai::ControlPolicy/88144241-73d3-42f0-9710-f350d887ec09&quot;,&quot;srn:supersonrai::ControlPolicy/89d1d826-7ee9-487a-a96f-50913819fcba&quot;,&quot;srn:supersonrai::ControlPolicy/c5ce4e6f-3f31-4945-9c63-93c4746ac4be&quot;,&quot;srn:supersonrai::ControlPolicy/7a56a7a5-4e38-41c5-9089-01f1e5be24c9&quot;,&quot;srn:supersonrai::ControlPolicy/2c398505-f420-4535-bad8-903716941e10&quot;,&quot;srn:supersonrai::ControlPolicy/a6d1a142-e21c-4c85-945d-c99de0ae1aa6&quot;,&quot;srn:supersonrai::ControlPolicy/51818758-a378-407d-b2b1-f1fb9cf67808&quot;,&quot;srn:supersonrai::ControlPolicy/60ef19c9-c950-48e3-91c2-124d93395b14&quot;,&quot;srn:supersonrai::ControlPolicy/d8cf0d35-0cc9-4c1e-a07f-f42d64ef9900&quot;,&quot;srn:supersonrai::ControlPolicy/e10ff1a7-2951-4e41-971a-4214cc5d782a&quot;,&quot;srn:supersonrai::ControlPolicy/2c46a054-67c3-468d-a0c2-db6f7ba97a72&quot;,&quot;srn:supersonrai::ControlPolicy/90d48edd-8c38-4062-9e2f-551009b42bf1&quot;,&quot;srn:supersonrai::ControlPolicy/aec2ee16-3a29-4f94-9dd0-4663956bba15&quot;,&quot;srn:supersonrai::ControlPolicy/639f9dd0-02f5-4929-b9fc-6980fdcd3600&quot;,&quot;srn:supersonrai::ControlPolicy/4827181f-4a85-4c6e-bb94-7414f3b400f9&quot;,&quot;srn:supersonrai::ControlPolicy/645ef7ff-3c5f-46d8-9a30-1825d35684f4&quot;,&quot;srn:supersonrai::ControlPolicy/8a35abd0-16b2-499a-8e57-c80d36d281b9&quot;,&quot;srn:supersonrai::ControlPolicy/d89ffbdd-dfe3-407e-8d6e-9b52b5405632&quot;,&quot;srn:supersonrai::ControlPolicy/8b305367-4649-418a-8fa2-7c8a3dbc7e61&quot;,&quot;srn:supersonrai::ControlPolicy/917b77c9-84eb-48f7-a099-6aaa58c29cf6&quot;,&quot;srn:supersonrai::ControlPolicy/f29a8f95-37b1-4260-a85a-e40f2a72b064&quot;,&quot;srn:supersonrai::ControlPolicy/cd35e590-e1b7-4ded-8d38-69832d3acb35&quot;,&quot;srn:supersonrai::ControlPolicy/e798f370-d432-49d7-8137-fec4b5523a19&quot;,&quot;srn:supersonrai::ControlPolicy/8b1988f2-f7a2-4caa-8778-1a533a6f4e35&quot;,&quot;srn:supersonrai::ControlPolicy/6984dee5-18a8-4f77-b5ae-c08ffdec090f&quot;,&quot;srn:supersonrai::ControlPolicy/fac10498-6ba4-4796-bbbe-f4ed7012b30b&quot;,&quot;srn:supersonrai::ControlPolicy/117a9056-68ad-4e2f-95d4-bdad0cbce90f&quot;,&quot;srn:supersonrai::ControlPolicy/2b5c15d2-1ba7-4147-96f3-5130aef97c68&quot;,&quot;srn:supersonrai::ControlPolicy/e0d7ff99-d49a-453d-bd5f-93d74402865b&quot;,&quot;srn:supersonrai::ControlPolicy/89df9285-4636-413b-a75d-22a0bd82412b&quot;,&quot;srn:supersonrai::ControlPolicy/acb44b52-9943-464c-9b60-9636e62e72df&quot;,&quot;srn:supersonrai::ControlPolicy/b8de9aac-8eb5-447c-b7b0-ef0579af43f8&quot;,&quot;srn:supersonrai::ControlPolicy/74cb8fcb-e504-4024-985a-b341249f4346&quot;,&quot;srn:supersonrai::ControlPolicy/95909e4b-bb02-4f55-b4fd-656872cea2f7&quot;,&quot;srn:supersonrai::ControlPolicy/0a50164c-e223-498c-a677-87c99d6758db&quot;,&quot;srn:supersonrai::ControlPolicy/fbe645ee-6631-46ae-bfc5-a313ced2122d&quot;,&quot;srn:supersonrai::ControlPolicy/1e331300-93d7-4d17-8493-1acb5001be54&quot;,&quot;srn:supersonrai::ControlPolicy/b9a80c12-5ea4-4efa-9615-5f8be660c313&quot;,&quot;srn:supersonrai::ControlPolicy/e201287b-185d-42e8-a259-4ca69047da50&quot;,&quot;srn:Sonrai::ControlPolicy/c063ac86-a316-45c9-b321-565fe7f42cdc&quot;,&quot;srn:supersonrai::ControlPolicy/a730cdeb-2095-4032-a5dd-770ee5f2c004&quot;,&quot;srn:supersonrai::ControlPolicy/b686ade3-ef90-4bec-88b1-f9134c6cb542&quot;,&quot;srn:Sonrai::ControlPolicy/c063ac86-a316-45c9-b321-565fe7f42cdc/9313fd77-a977-40d0-be5c-6814a54c4e97/87f3aab6-8024-427b-bdda-0194188879a9&quot;,&quot;srn:Sonrai::ControlPolicy/c063ac86-a316-45c9-b321-565fe7f42cdc/9313fd77-a977-40d0-be5c-6814a54c4e97&quot;,&quot;srn:supersonrai::ControlPolicy/ba1542db-0556-4c6f-818d-1b0a6f242d92&quot;,&quot;srn:supersonrai::ControlPolicy/83b71a20-27ac-4d2c-937a-530e1190aa54&quot;,&quot;srn:supersonrai::ControlPolicy/ce9ecc92-8ddd-4e69-8b77-261fd8bc58fb&quot;,&quot;srn:supersonrai::ControlPolicy/ef896928-ef7f-43be-a552-45a2d3a54e11&quot;,&quot;srn:supersonrai::ControlPolicy/491c563c-bac8-4747-a979-bf0d9ccde67b&quot;],&quot;swimlaneSrns&quot;:[&quot;srn:stage11733927::Swimlane/0bbca8be-ed54-4677-b581-973950ecfb9c&quot;,&quot;srn:stage11733927::Swimlane/0c69d424-e054-45d7-a19f-c9b86f3a2c80&quot;,&quot;srn:stage11733927::Swimlane/ffd99cfa-b27a-4bed-99ae-7e845f793029&quot;,&quot;srn:stage11733927::Swimlane/3304300b-49c8-4372-8847-110905c9dbdb&quot;,&quot;srn:stage11733927::Swimlane/56517df8-c68c-4481-a547-8e05d48454fb&quot;,&quot;srn:stage11733927::Swimlane/aee2108a-c622-4653-a182-5e8bf1526110&quot;,&quot;srn:stage11733927::Swimlane/49a44cb4-862b-4598-9ebb-75582b9e1986&quot;,&quot;srn:stage11733927::Swimlane/d61afe67-c651-46bd-904b-9a68988ee3c3&quot;,&quot;srn:stage11733927::Swimlane/4236caae-3e01-4b87-8a50-765370a840ef&quot;,&quot;srn:stage11733927::Swimlane/b452d257-cb44-411d-9cac-0179e666deff&quot;,&quot;srn:stage11733927::Swimlane/1fbc5e7c-64ac-4f4b-a62c-14ebd47a5fde&quot;,&quot;srn:stage11733927::Swimlane/93f43210-d0bd-486d-baaa-232b79ecbe06&quot;,&quot;srn:stage11733927::Swimlane/e5d5b4dc-4e67-4fd5-999b-a782e1e83878&quot;,&quot;srn:stage11733927::Swimlane/40fd992a-4d38-47e5-8857-6ba6cc792338&quot;]},&quot;query&quot;:&quot;query fetchLatestCPEvalLogs($policySrns: [String!]!, $swimlaneSrns: [String!]!) {\n  ControlPolicyEvalLogsLatest(\n    where: {policySrns: $policySrns, swimlaneSrns: $swimlaneSrns}\n  ) {\n    items {\n      swimlaneSrn\n      policySrn\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">d812db60d4d52b86d42aaf681a12718d</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:9bb1-43f0-b114-63051fa24da0/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">ccbf41da5a09534d</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">d812db60d4d52b86d42aaf681a12718d-ccbf41da5a09534d-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">fetchLatestCPEvalLogs</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SwimlaneCheckup_T03_fetchTicketCountsForPolicies" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;fetchTicketCountsForPolicies&quot;,&quot;variables&quot;:{&quot;policySrns&quot;:[&quot;srn:supersonrai::ControlPolicy/2992c85a-b598-48bc-979e-a8f87b9dbc49&quot;,&quot;srn:supersonrai::ControlPolicy/70084518-ac96-4c5b-8a13-022a0c085ded&quot;,&quot;srn:supersonrai::ControlPolicy/9662f13b-46c2-4e94-987f-c15a6f869c76&quot;,&quot;srn:supersonrai::ControlPolicy/7ab64be6-4925-40df-8edf-5eecf52e9ab6&quot;,&quot;srn:supersonrai::ControlPolicy/ca07f1a0-b914-44da-85de-0ae41c38b310&quot;,&quot;srn:supersonrai::ControlPolicy/01bed657-134f-46b0-9412-f0720ea8a5d1&quot;,&quot;srn:supersonrai::ControlPolicy/569dddb1-208a-4289-ac96-02017793dba6&quot;,&quot;srn:supersonrai::ControlPolicy/f015dc34-e3e6-4db2-932a-182b6b5f5ae7&quot;,&quot;srn:supersonrai::ControlPolicy/d3682b01-cbdb-4548-9c03-0a625d1e9347&quot;,&quot;srn:supersonrai::ControlPolicy/a0b3e5fc-b641-4bea-b2b3-af1589da36e8&quot;,&quot;srn:supersonrai::ControlPolicy/02fee0f1-4656-4de1-91c8-9a77152938f4&quot;,&quot;srn:supersonrai::ControlPolicy/ddec1226-a23f-46a3-879d-e9ae0fdd51e7&quot;,&quot;srn:supersonrai::ControlPolicy/6a66a148-6cd0-4d53-839f-a81712d8c424&quot;,&quot;srn:supersonrai::ControlPolicy/c42d55a2-b668-46b3-9f19-57557af3a5e2&quot;,&quot;srn:supersonrai::ControlPolicy/abe977a3-d2ce-492c-939f-fecf646e7c71&quot;,&quot;srn:supersonrai::ControlPolicy/d58e4e23-d879-454c-ad1e-7f051ca50b86&quot;,&quot;srn:supersonrai::ControlPolicy/8875fc15-1e8f-4024-b745-edad91b756b7&quot;,&quot;srn:supersonrai::ControlPolicy/7fe8dab0-ae6e-4456-8c06-5f831c5fc7dc&quot;,&quot;srn:supersonrai::ControlPolicy/d6606624-14ce-42bc-8c15-c4832279359a&quot;,&quot;srn:supersonrai::ControlPolicy/820e093a-1344-4cc3-8c48-c7164afb243b&quot;,&quot;srn:supersonrai::ControlPolicy/8d93def7-b73f-4650-8214-1d19331273cd&quot;,&quot;srn:supersonrai::ControlPolicy/1d8eeb01-92c0-4270-a8ee-a7c4296272ea&quot;,&quot;srn:supersonrai::ControlPolicy/66f662df-acd5-49ad-a4bc-3fbbd3870f49&quot;,&quot;srn:supersonrai::ControlPolicy/9304c022-9600-41e7-9cfc-0676bbe9c591&quot;,&quot;srn:supersonrai::ControlPolicy/83a1ca33-12fc-4f65-89c5-e169be71e74c&quot;,&quot;srn:supersonrai::ControlPolicy/3ec7c61e-736f-4cde-807a-0ac175756ae4&quot;,&quot;srn:supersonrai::ControlPolicy/ddf5fd8e-c658-4606-9a24-4de35473557c&quot;,&quot;srn:supersonrai::ControlPolicy/f684722d-f5fb-419a-8c22-70d9fdc5d183&quot;,&quot;srn:supersonrai::ControlPolicy/38051138-ba0f-431e-a3d6-0e1fc2799d90&quot;,&quot;srn:supersonrai::ControlPolicy/646152af-3750-4d26-94ae-5dc5668fa256&quot;,&quot;srn:supersonrai::ControlPolicy/99af7c2f-8022-41de-9897-d13514c16fb4&quot;,&quot;srn:supersonrai::ControlPolicy/59cbc312-34f6-4a4e-961b-2b0d1abe4e78&quot;,&quot;srn:supersonrai::ControlPolicy/1ac48fa2-6789-4b77-89aa-df76059c3753&quot;,&quot;srn:supersonrai::ControlPolicy/59dc9836-4602-44bb-b352-53bf3a059cbf&quot;,&quot;srn:supersonrai::ControlPolicy/c55acb65-ae36-4386-8e8a-2e83b677d25b&quot;,&quot;srn:supersonrai::ControlPolicy/d68da1c0-8898-4b5b-874d-e40080034cb2&quot;,&quot;srn:supersonrai::ControlPolicy/ee0e3e38-8484-438d-8bae-7375bae6df54&quot;,&quot;srn:supersonrai::ControlPolicy/458c6986-ce57-4933-a35f-331cbd2be1f4&quot;,&quot;srn:supersonrai::ControlPolicy/ecf685ff-eb31-4f24-97d5-0f1db4738a68&quot;,&quot;srn:supersonrai::ControlPolicy/181257cc-183b-4b86-aa6c-85c6441072bb&quot;,&quot;srn:supersonrai::ControlPolicy/8cd26196-929a-49b5-af6b-de37915f2b53&quot;,&quot;srn:supersonrai::ControlPolicy/4007d909-ae91-4e1b-9e6c-a58f42647162&quot;,&quot;srn:supersonrai::ControlPolicy/dcab6cb9-cfa6-4954-8ff2-8274c1f2f180&quot;,&quot;srn:supersonrai::ControlPolicy/f493d1db-8ef2-4546-86ee-0b5b9808734f&quot;,&quot;srn:supersonrai::ControlPolicy/bcdef8ba-c217-491a-93ab-0c06bd544277&quot;,&quot;srn:supersonrai::ControlPolicy/8927da79-197b-47d3-b7af-40b98edff903&quot;,&quot;srn:supersonrai::ControlPolicy/90fceb83-3ca6-4b47-9ba6-750161078b01&quot;,&quot;srn:supersonrai::ControlPolicy/43c68e2c-bd9c-4554-a371-2d1bde4b4df1&quot;,&quot;srn:supersonrai::ControlPolicy/14637c09-5b17-4ebf-b822-07e070c3ea0a&quot;,&quot;srn:supersonrai::ControlPolicy/e2d57d19-d172-44d3-91c8-023a82566097&quot;,&quot;srn:supersonrai::ControlPolicy/900180dc-2657-439f-9d4d-7422065a503e&quot;,&quot;srn:supersonrai::ControlPolicy/27c642fb-090a-4a38-816c-b374278abc06&quot;,&quot;srn:supersonrai::ControlPolicy/18ae02b6-1496-4b44-b2cd-7a7adefcb82a&quot;,&quot;srn:supersonrai::ControlPolicy/3573b890-167a-4b99-ad60-93153522f0b3&quot;,&quot;srn:supersonrai::ControlPolicy/c1977ed1-796f-40e1-a91f-de2cd0eb9a40&quot;,&quot;srn:supersonrai::ControlPolicy/f5785ba0-2adc-4790-b4c3-25e4cfa265b1&quot;,&quot;srn:supersonrai::ControlPolicy/4957e49d-4780-493a-9d13-8eadd7031a65&quot;,&quot;srn:supersonrai::ControlPolicy/dbeadb9b-f8ec-4ca6-ab93-3ab0e8d10475&quot;,&quot;srn:supersonrai::ControlPolicy/c489901d-1f22-449a-b86a-0c68bbf1328c&quot;,&quot;srn:supersonrai::ControlPolicy/571af71b-25e3-4f17-add9-8e7353a35bb8&quot;,&quot;srn:supersonrai::ControlPolicy/f64efe6e-2a9b-4e27-aeab-395ceee22ac9&quot;,&quot;srn:supersonrai::ControlPolicy/4ecf8b19-1dc5-47cc-8740-f1794c2d9c18&quot;,&quot;srn:supersonrai::ControlPolicy/ee8be6c2-5e35-4355-b868-0c6071cf7fbd&quot;,&quot;srn:supersonrai::ControlPolicy/0a4babce-fbd3-4d87-b646-c5b7054f0280&quot;,&quot;srn:supersonrai::ControlPolicy/d2d60f20-c7ec-4704-82d8-c1653883a284&quot;,&quot;srn:supersonrai::ControlPolicy/67b0b224-2608-46c9-92f8-f82270e8184e&quot;,&quot;srn:supersonrai::ControlPolicy/10f58f2a-a096-47c1-99fe-d009f1112a3a&quot;,&quot;srn:supersonrai::ControlPolicy/00f91912-71d1-40a9-baeb-4725de640211&quot;,&quot;srn:supersonrai::ControlPolicy/9a102233-edef-427e-908c-48c60fa06f5f&quot;,&quot;srn:supersonrai::ControlPolicy/482e462d-8838-4a02-88e6-a9a7b7f22206&quot;,&quot;srn:supersonrai::ControlPolicy/19d0550d-aabd-41eb-86cc-e60e15ad4202&quot;,&quot;srn:supersonrai::ControlPolicy/d8ae74d2-4e3e-42f7-945d-5dbd06be55ab&quot;,&quot;srn:supersonrai::ControlPolicy/b3cf34f5-47b2-43c9-bb2a-242436d06b14&quot;,&quot;srn:supersonrai::ControlPolicy/e0a0fb67-6bc3-4199-97c7-c61294d82394&quot;,&quot;srn:supersonrai::ControlPolicy/28eaae05-4a75-43de-bb18-b6c604786626&quot;,&quot;srn:supersonrai::ControlPolicy/14fa6df2-b860-4890-9759-195b42637d7c&quot;,&quot;srn:supersonrai::ControlPolicy/3905b5cf-a360-47ef-8136-13495cbf5b5f&quot;,&quot;srn:supersonrai::ControlPolicy/10353af3-b8bf-424d-bbe3-62e3a6c43a8b&quot;,&quot;srn:supersonrai::ControlPolicy/720efad5-298c-45c9-b098-2ea052baa06d&quot;,&quot;srn:supersonrai::ControlPolicy/986bdc7f-2ec7-4429-bb73-7d984d13214b&quot;,&quot;srn:supersonrai::ControlPolicy/52dd18c7-6baa-48f2-9400-dfe365cdcaa1&quot;,&quot;srn:supersonrai::ControlPolicy/2cac6d88-4517-4e56-8d92-2911f0a2b36a&quot;,&quot;srn:supersonrai::ControlPolicy/09a784a5-d70a-46db-9df6-189c19a802c7&quot;,&quot;srn:supersonrai::ControlPolicy/fbbe1fff-458c-419a-8327-4ebbe9763181&quot;,&quot;srn:supersonrai::ControlPolicy/3a58c442-bc3e-4308-933b-ce8d5a6bc678&quot;,&quot;srn:supersonrai::ControlPolicy/2a11dece-cb36-43be-a423-26168bbb57e8&quot;,&quot;srn:supersonrai::ControlPolicy/1e3a8826-c8bb-4947-8ef5-9319016441c8&quot;,&quot;srn:supersonrai::ControlPolicy/7998703e-1e0c-4a10-bed3-056b53f2e3ad&quot;,&quot;srn:supersonrai::ControlPolicy/9393e9b7-2bfb-4426-9608-5aeba9048448&quot;,&quot;srn:supersonrai::ControlPolicy/113e1558-2654-441e-8067-58bd541ffdbd&quot;,&quot;srn:supersonrai::ControlPolicy/b03e2608-d7b6-451d-b78c-6e9030b44a52&quot;,&quot;srn:supersonrai::ControlPolicy/faa80be2-f94e-4522-875f-8582b6ef435c&quot;,&quot;srn:supersonrai::ControlPolicy/eb812ac4-4b38-4698-b5b9-ae506811ef77&quot;,&quot;srn:supersonrai::ControlPolicy/f8b97bab-471c-45e8-b882-b9ddc92bc078&quot;,&quot;srn:supersonrai::ControlPolicy/bad1bd6f-069d-4e32-b016-50044aa2e38a&quot;,&quot;srn:supersonrai::ControlPolicy/108d5fc8-9388-4817-abc9-d682936f3b7f&quot;,&quot;srn:supersonrai::ControlPolicy/ae39d1e1-9882-42b0-b8e6-c3d9991279f6&quot;,&quot;srn:supersonrai::ControlPolicy/e0fe2b45-3859-4916-ac48-6f372c024389&quot;,&quot;srn:supersonrai::ControlPolicy/298e54d7-fa9d-4090-a0d0-7257152c7544&quot;,&quot;srn:supersonrai::ControlPolicy/88144241-73d3-42f0-9710-f350d887ec09&quot;,&quot;srn:supersonrai::ControlPolicy/89d1d826-7ee9-487a-a96f-50913819fcba&quot;,&quot;srn:supersonrai::ControlPolicy/c5ce4e6f-3f31-4945-9c63-93c4746ac4be&quot;,&quot;srn:supersonrai::ControlPolicy/7a56a7a5-4e38-41c5-9089-01f1e5be24c9&quot;,&quot;srn:supersonrai::ControlPolicy/2c398505-f420-4535-bad8-903716941e10&quot;,&quot;srn:supersonrai::ControlPolicy/a6d1a142-e21c-4c85-945d-c99de0ae1aa6&quot;,&quot;srn:supersonrai::ControlPolicy/51818758-a378-407d-b2b1-f1fb9cf67808&quot;,&quot;srn:supersonrai::ControlPolicy/60ef19c9-c950-48e3-91c2-124d93395b14&quot;,&quot;srn:supersonrai::ControlPolicy/d8cf0d35-0cc9-4c1e-a07f-f42d64ef9900&quot;,&quot;srn:supersonrai::ControlPolicy/e10ff1a7-2951-4e41-971a-4214cc5d782a&quot;,&quot;srn:supersonrai::ControlPolicy/2c46a054-67c3-468d-a0c2-db6f7ba97a72&quot;,&quot;srn:supersonrai::ControlPolicy/90d48edd-8c38-4062-9e2f-551009b42bf1&quot;,&quot;srn:supersonrai::ControlPolicy/aec2ee16-3a29-4f94-9dd0-4663956bba15&quot;,&quot;srn:supersonrai::ControlPolicy/639f9dd0-02f5-4929-b9fc-6980fdcd3600&quot;,&quot;srn:supersonrai::ControlPolicy/4827181f-4a85-4c6e-bb94-7414f3b400f9&quot;,&quot;srn:supersonrai::ControlPolicy/645ef7ff-3c5f-46d8-9a30-1825d35684f4&quot;,&quot;srn:supersonrai::ControlPolicy/8a35abd0-16b2-499a-8e57-c80d36d281b9&quot;,&quot;srn:supersonrai::ControlPolicy/d89ffbdd-dfe3-407e-8d6e-9b52b5405632&quot;,&quot;srn:supersonrai::ControlPolicy/8b305367-4649-418a-8fa2-7c8a3dbc7e61&quot;,&quot;srn:supersonrai::ControlPolicy/917b77c9-84eb-48f7-a099-6aaa58c29cf6&quot;,&quot;srn:supersonrai::ControlPolicy/f29a8f95-37b1-4260-a85a-e40f2a72b064&quot;,&quot;srn:supersonrai::ControlPolicy/cd35e590-e1b7-4ded-8d38-69832d3acb35&quot;,&quot;srn:supersonrai::ControlPolicy/e798f370-d432-49d7-8137-fec4b5523a19&quot;,&quot;srn:supersonrai::ControlPolicy/8b1988f2-f7a2-4caa-8778-1a533a6f4e35&quot;,&quot;srn:supersonrai::ControlPolicy/6984dee5-18a8-4f77-b5ae-c08ffdec090f&quot;,&quot;srn:supersonrai::ControlPolicy/fac10498-6ba4-4796-bbbe-f4ed7012b30b&quot;,&quot;srn:supersonrai::ControlPolicy/117a9056-68ad-4e2f-95d4-bdad0cbce90f&quot;,&quot;srn:supersonrai::ControlPolicy/2b5c15d2-1ba7-4147-96f3-5130aef97c68&quot;,&quot;srn:supersonrai::ControlPolicy/e0d7ff99-d49a-453d-bd5f-93d74402865b&quot;,&quot;srn:supersonrai::ControlPolicy/89df9285-4636-413b-a75d-22a0bd82412b&quot;,&quot;srn:supersonrai::ControlPolicy/acb44b52-9943-464c-9b60-9636e62e72df&quot;,&quot;srn:supersonrai::ControlPolicy/b8de9aac-8eb5-447c-b7b0-ef0579af43f8&quot;,&quot;srn:supersonrai::ControlPolicy/74cb8fcb-e504-4024-985a-b341249f4346&quot;,&quot;srn:supersonrai::ControlPolicy/95909e4b-bb02-4f55-b4fd-656872cea2f7&quot;,&quot;srn:supersonrai::ControlPolicy/0a50164c-e223-498c-a677-87c99d6758db&quot;,&quot;srn:supersonrai::ControlPolicy/fbe645ee-6631-46ae-bfc5-a313ced2122d&quot;,&quot;srn:supersonrai::ControlPolicy/1e331300-93d7-4d17-8493-1acb5001be54&quot;,&quot;srn:supersonrai::ControlPolicy/b9a80c12-5ea4-4efa-9615-5f8be660c313&quot;,&quot;srn:supersonrai::ControlPolicy/e201287b-185d-42e8-a259-4ca69047da50&quot;,&quot;srn:Sonrai::ControlPolicy/c063ac86-a316-45c9-b321-565fe7f42cdc&quot;,&quot;srn:supersonrai::ControlPolicy/a730cdeb-2095-4032-a5dd-770ee5f2c004&quot;,&quot;srn:supersonrai::ControlPolicy/b686ade3-ef90-4bec-88b1-f9134c6cb542&quot;,&quot;srn:Sonrai::ControlPolicy/c063ac86-a316-45c9-b321-565fe7f42cdc/9313fd77-a977-40d0-be5c-6814a54c4e97/87f3aab6-8024-427b-bdda-0194188879a9&quot;,&quot;srn:Sonrai::ControlPolicy/c063ac86-a316-45c9-b321-565fe7f42cdc/9313fd77-a977-40d0-be5c-6814a54c4e97&quot;,&quot;srn:supersonrai::ControlPolicy/ba1542db-0556-4c6f-818d-1b0a6f242d92&quot;,&quot;srn:supersonrai::ControlPolicy/83b71a20-27ac-4d2c-937a-530e1190aa54&quot;,&quot;srn:supersonrai::ControlPolicy/ce9ecc92-8ddd-4e69-8b77-261fd8bc58fb&quot;,&quot;srn:supersonrai::ControlPolicy/ef896928-ef7f-43be-a552-45a2d3a54e11&quot;,&quot;srn:supersonrai::ControlPolicy/491c563c-bac8-4747-a979-bf0d9ccde67b&quot;],&quot;swimlaneSrns&quot;:[&quot;srn:stage11733927::Swimlane/0bbca8be-ed54-4677-b581-973950ecfb9c&quot;,&quot;srn:stage11733927::Swimlane/0c69d424-e054-45d7-a19f-c9b86f3a2c80&quot;,&quot;srn:stage11733927::Swimlane/ffd99cfa-b27a-4bed-99ae-7e845f793029&quot;,&quot;srn:stage11733927::Swimlane/3304300b-49c8-4372-8847-110905c9dbdb&quot;,&quot;srn:stage11733927::Swimlane/56517df8-c68c-4481-a547-8e05d48454fb&quot;,&quot;srn:stage11733927::Swimlane/aee2108a-c622-4653-a182-5e8bf1526110&quot;,&quot;srn:stage11733927::Swimlane/49a44cb4-862b-4598-9ebb-75582b9e1986&quot;,&quot;srn:stage11733927::Swimlane/d61afe67-c651-46bd-904b-9a68988ee3c3&quot;,&quot;srn:stage11733927::Swimlane/4236caae-3e01-4b87-8a50-765370a840ef&quot;,&quot;srn:stage11733927::Swimlane/b452d257-cb44-411d-9cac-0179e666deff&quot;,&quot;srn:stage11733927::Swimlane/1fbc5e7c-64ac-4f4b-a62c-14ebd47a5fde&quot;,&quot;srn:stage11733927::Swimlane/93f43210-d0bd-486d-baaa-232b79ecbe06&quot;,&quot;srn:stage11733927::Swimlane/e5d5b4dc-4e67-4fd5-999b-a782e1e83878&quot;,&quot;srn:stage11733927::Swimlane/40fd992a-4d38-47e5-8857-6ba6cc792338&quot;]},&quot;query&quot;:&quot;query fetchTicketCountsForPolicies($policySrns: [String!]!, $swimlaneSrns: [String!]!) {\n  TicketRollups(\n    where: {swimlaneSrn: {op: IN_LIST, values: $swimlaneSrns}, ticketKey: {op: IN_LIST, values: $policySrns}, status: {op: IN_LIST, values: [\&quot;NEW\&quot;, \&quot;IN_PROGRESS\&quot;]}}\n  ) {\n    items {\n      count\n      policySrn: ticketKey\n      swimlaneSrn\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">120fff6b6aa0a2dbdb1fa3a686bc0328</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:01db-4753-b2c9-5bfd7a8cf26c/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">1772b5e9c7a6f5f9</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">120fff6b6aa0a2dbdb1fa3a686bc0328-1772b5e9c7a6f5f9-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">fetchTicketCountsForPolicies</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SwimlaneCheckup_T04_fetchLatestCPEvalLogs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;fetchLatestCPEvalLogs&quot;,&quot;variables&quot;:{&quot;policySrns&quot;:[&quot;srn:supersonrai::ControlPolicy/2992c85a-b598-48bc-979e-a8f87b9dbc49&quot;,&quot;srn:supersonrai::ControlPolicy/70084518-ac96-4c5b-8a13-022a0c085ded&quot;,&quot;srn:supersonrai::ControlPolicy/9662f13b-46c2-4e94-987f-c15a6f869c76&quot;,&quot;srn:supersonrai::ControlPolicy/7ab64be6-4925-40df-8edf-5eecf52e9ab6&quot;,&quot;srn:supersonrai::ControlPolicy/ca07f1a0-b914-44da-85de-0ae41c38b310&quot;,&quot;srn:supersonrai::ControlPolicy/01bed657-134f-46b0-9412-f0720ea8a5d1&quot;,&quot;srn:supersonrai::ControlPolicy/569dddb1-208a-4289-ac96-02017793dba6&quot;,&quot;srn:supersonrai::ControlPolicy/f015dc34-e3e6-4db2-932a-182b6b5f5ae7&quot;,&quot;srn:supersonrai::ControlPolicy/d3682b01-cbdb-4548-9c03-0a625d1e9347&quot;,&quot;srn:supersonrai::ControlPolicy/a0b3e5fc-b641-4bea-b2b3-af1589da36e8&quot;,&quot;srn:supersonrai::ControlPolicy/02fee0f1-4656-4de1-91c8-9a77152938f4&quot;,&quot;srn:supersonrai::ControlPolicy/ddec1226-a23f-46a3-879d-e9ae0fdd51e7&quot;,&quot;srn:supersonrai::ControlPolicy/6a66a148-6cd0-4d53-839f-a81712d8c424&quot;,&quot;srn:supersonrai::ControlPolicy/c42d55a2-b668-46b3-9f19-57557af3a5e2&quot;,&quot;srn:supersonrai::ControlPolicy/abe977a3-d2ce-492c-939f-fecf646e7c71&quot;,&quot;srn:supersonrai::ControlPolicy/d58e4e23-d879-454c-ad1e-7f051ca50b86&quot;,&quot;srn:supersonrai::ControlPolicy/8875fc15-1e8f-4024-b745-edad91b756b7&quot;,&quot;srn:supersonrai::ControlPolicy/7fe8dab0-ae6e-4456-8c06-5f831c5fc7dc&quot;,&quot;srn:supersonrai::ControlPolicy/d6606624-14ce-42bc-8c15-c4832279359a&quot;,&quot;srn:supersonrai::ControlPolicy/820e093a-1344-4cc3-8c48-c7164afb243b&quot;,&quot;srn:supersonrai::ControlPolicy/8d93def7-b73f-4650-8214-1d19331273cd&quot;,&quot;srn:supersonrai::ControlPolicy/1d8eeb01-92c0-4270-a8ee-a7c4296272ea&quot;,&quot;srn:supersonrai::ControlPolicy/66f662df-acd5-49ad-a4bc-3fbbd3870f49&quot;,&quot;srn:supersonrai::ControlPolicy/9304c022-9600-41e7-9cfc-0676bbe9c591&quot;,&quot;srn:supersonrai::ControlPolicy/83a1ca33-12fc-4f65-89c5-e169be71e74c&quot;,&quot;srn:supersonrai::ControlPolicy/3ec7c61e-736f-4cde-807a-0ac175756ae4&quot;,&quot;srn:supersonrai::ControlPolicy/ddf5fd8e-c658-4606-9a24-4de35473557c&quot;,&quot;srn:supersonrai::ControlPolicy/f684722d-f5fb-419a-8c22-70d9fdc5d183&quot;,&quot;srn:supersonrai::ControlPolicy/38051138-ba0f-431e-a3d6-0e1fc2799d90&quot;,&quot;srn:supersonrai::ControlPolicy/646152af-3750-4d26-94ae-5dc5668fa256&quot;,&quot;srn:supersonrai::ControlPolicy/99af7c2f-8022-41de-9897-d13514c16fb4&quot;,&quot;srn:supersonrai::ControlPolicy/59cbc312-34f6-4a4e-961b-2b0d1abe4e78&quot;,&quot;srn:supersonrai::ControlPolicy/1ac48fa2-6789-4b77-89aa-df76059c3753&quot;,&quot;srn:supersonrai::ControlPolicy/59dc9836-4602-44bb-b352-53bf3a059cbf&quot;,&quot;srn:supersonrai::ControlPolicy/c55acb65-ae36-4386-8e8a-2e83b677d25b&quot;,&quot;srn:supersonrai::ControlPolicy/d68da1c0-8898-4b5b-874d-e40080034cb2&quot;,&quot;srn:supersonrai::ControlPolicy/ee0e3e38-8484-438d-8bae-7375bae6df54&quot;,&quot;srn:supersonrai::ControlPolicy/458c6986-ce57-4933-a35f-331cbd2be1f4&quot;,&quot;srn:supersonrai::ControlPolicy/ecf685ff-eb31-4f24-97d5-0f1db4738a68&quot;,&quot;srn:supersonrai::ControlPolicy/181257cc-183b-4b86-aa6c-85c6441072bb&quot;,&quot;srn:supersonrai::ControlPolicy/8cd26196-929a-49b5-af6b-de37915f2b53&quot;,&quot;srn:supersonrai::ControlPolicy/4007d909-ae91-4e1b-9e6c-a58f42647162&quot;,&quot;srn:supersonrai::ControlPolicy/dcab6cb9-cfa6-4954-8ff2-8274c1f2f180&quot;,&quot;srn:supersonrai::ControlPolicy/f493d1db-8ef2-4546-86ee-0b5b9808734f&quot;,&quot;srn:supersonrai::ControlPolicy/bcdef8ba-c217-491a-93ab-0c06bd544277&quot;,&quot;srn:supersonrai::ControlPolicy/8927da79-197b-47d3-b7af-40b98edff903&quot;,&quot;srn:supersonrai::ControlPolicy/90fceb83-3ca6-4b47-9ba6-750161078b01&quot;,&quot;srn:supersonrai::ControlPolicy/43c68e2c-bd9c-4554-a371-2d1bde4b4df1&quot;,&quot;srn:supersonrai::ControlPolicy/14637c09-5b17-4ebf-b822-07e070c3ea0a&quot;,&quot;srn:supersonrai::ControlPolicy/e2d57d19-d172-44d3-91c8-023a82566097&quot;,&quot;srn:supersonrai::ControlPolicy/900180dc-2657-439f-9d4d-7422065a503e&quot;,&quot;srn:supersonrai::ControlPolicy/27c642fb-090a-4a38-816c-b374278abc06&quot;,&quot;srn:supersonrai::ControlPolicy/18ae02b6-1496-4b44-b2cd-7a7adefcb82a&quot;,&quot;srn:supersonrai::ControlPolicy/3573b890-167a-4b99-ad60-93153522f0b3&quot;,&quot;srn:supersonrai::ControlPolicy/c1977ed1-796f-40e1-a91f-de2cd0eb9a40&quot;,&quot;srn:supersonrai::ControlPolicy/f5785ba0-2adc-4790-b4c3-25e4cfa265b1&quot;,&quot;srn:supersonrai::ControlPolicy/4957e49d-4780-493a-9d13-8eadd7031a65&quot;,&quot;srn:supersonrai::ControlPolicy/dbeadb9b-f8ec-4ca6-ab93-3ab0e8d10475&quot;,&quot;srn:supersonrai::ControlPolicy/c489901d-1f22-449a-b86a-0c68bbf1328c&quot;,&quot;srn:supersonrai::ControlPolicy/571af71b-25e3-4f17-add9-8e7353a35bb8&quot;,&quot;srn:supersonrai::ControlPolicy/f64efe6e-2a9b-4e27-aeab-395ceee22ac9&quot;,&quot;srn:supersonrai::ControlPolicy/4ecf8b19-1dc5-47cc-8740-f1794c2d9c18&quot;,&quot;srn:supersonrai::ControlPolicy/ee8be6c2-5e35-4355-b868-0c6071cf7fbd&quot;,&quot;srn:supersonrai::ControlPolicy/0a4babce-fbd3-4d87-b646-c5b7054f0280&quot;,&quot;srn:supersonrai::ControlPolicy/d2d60f20-c7ec-4704-82d8-c1653883a284&quot;,&quot;srn:supersonrai::ControlPolicy/67b0b224-2608-46c9-92f8-f82270e8184e&quot;,&quot;srn:supersonrai::ControlPolicy/10f58f2a-a096-47c1-99fe-d009f1112a3a&quot;,&quot;srn:supersonrai::ControlPolicy/00f91912-71d1-40a9-baeb-4725de640211&quot;,&quot;srn:supersonrai::ControlPolicy/9a102233-edef-427e-908c-48c60fa06f5f&quot;,&quot;srn:supersonrai::ControlPolicy/482e462d-8838-4a02-88e6-a9a7b7f22206&quot;,&quot;srn:supersonrai::ControlPolicy/19d0550d-aabd-41eb-86cc-e60e15ad4202&quot;,&quot;srn:supersonrai::ControlPolicy/d8ae74d2-4e3e-42f7-945d-5dbd06be55ab&quot;,&quot;srn:supersonrai::ControlPolicy/b3cf34f5-47b2-43c9-bb2a-242436d06b14&quot;,&quot;srn:supersonrai::ControlPolicy/e0a0fb67-6bc3-4199-97c7-c61294d82394&quot;,&quot;srn:supersonrai::ControlPolicy/28eaae05-4a75-43de-bb18-b6c604786626&quot;,&quot;srn:supersonrai::ControlPolicy/14fa6df2-b860-4890-9759-195b42637d7c&quot;,&quot;srn:supersonrai::ControlPolicy/3905b5cf-a360-47ef-8136-13495cbf5b5f&quot;,&quot;srn:supersonrai::ControlPolicy/10353af3-b8bf-424d-bbe3-62e3a6c43a8b&quot;,&quot;srn:supersonrai::ControlPolicy/720efad5-298c-45c9-b098-2ea052baa06d&quot;,&quot;srn:supersonrai::ControlPolicy/986bdc7f-2ec7-4429-bb73-7d984d13214b&quot;,&quot;srn:supersonrai::ControlPolicy/52dd18c7-6baa-48f2-9400-dfe365cdcaa1&quot;,&quot;srn:supersonrai::ControlPolicy/2cac6d88-4517-4e56-8d92-2911f0a2b36a&quot;,&quot;srn:supersonrai::ControlPolicy/09a784a5-d70a-46db-9df6-189c19a802c7&quot;,&quot;srn:supersonrai::ControlPolicy/fbbe1fff-458c-419a-8327-4ebbe9763181&quot;,&quot;srn:supersonrai::ControlPolicy/3a58c442-bc3e-4308-933b-ce8d5a6bc678&quot;,&quot;srn:supersonrai::ControlPolicy/2a11dece-cb36-43be-a423-26168bbb57e8&quot;,&quot;srn:supersonrai::ControlPolicy/1e3a8826-c8bb-4947-8ef5-9319016441c8&quot;,&quot;srn:supersonrai::ControlPolicy/7998703e-1e0c-4a10-bed3-056b53f2e3ad&quot;,&quot;srn:supersonrai::ControlPolicy/9393e9b7-2bfb-4426-9608-5aeba9048448&quot;,&quot;srn:supersonrai::ControlPolicy/113e1558-2654-441e-8067-58bd541ffdbd&quot;,&quot;srn:supersonrai::ControlPolicy/b03e2608-d7b6-451d-b78c-6e9030b44a52&quot;,&quot;srn:supersonrai::ControlPolicy/faa80be2-f94e-4522-875f-8582b6ef435c&quot;,&quot;srn:supersonrai::ControlPolicy/eb812ac4-4b38-4698-b5b9-ae506811ef77&quot;,&quot;srn:supersonrai::ControlPolicy/f8b97bab-471c-45e8-b882-b9ddc92bc078&quot;,&quot;srn:supersonrai::ControlPolicy/bad1bd6f-069d-4e32-b016-50044aa2e38a&quot;,&quot;srn:supersonrai::ControlPolicy/108d5fc8-9388-4817-abc9-d682936f3b7f&quot;,&quot;srn:supersonrai::ControlPolicy/ae39d1e1-9882-42b0-b8e6-c3d9991279f6&quot;,&quot;srn:supersonrai::ControlPolicy/e0fe2b45-3859-4916-ac48-6f372c024389&quot;,&quot;srn:supersonrai::ControlPolicy/298e54d7-fa9d-4090-a0d0-7257152c7544&quot;,&quot;srn:supersonrai::ControlPolicy/88144241-73d3-42f0-9710-f350d887ec09&quot;,&quot;srn:supersonrai::ControlPolicy/89d1d826-7ee9-487a-a96f-50913819fcba&quot;,&quot;srn:supersonrai::ControlPolicy/c5ce4e6f-3f31-4945-9c63-93c4746ac4be&quot;,&quot;srn:supersonrai::ControlPolicy/7a56a7a5-4e38-41c5-9089-01f1e5be24c9&quot;,&quot;srn:supersonrai::ControlPolicy/2c398505-f420-4535-bad8-903716941e10&quot;,&quot;srn:supersonrai::ControlPolicy/a6d1a142-e21c-4c85-945d-c99de0ae1aa6&quot;,&quot;srn:supersonrai::ControlPolicy/51818758-a378-407d-b2b1-f1fb9cf67808&quot;,&quot;srn:supersonrai::ControlPolicy/60ef19c9-c950-48e3-91c2-124d93395b14&quot;,&quot;srn:supersonrai::ControlPolicy/d8cf0d35-0cc9-4c1e-a07f-f42d64ef9900&quot;,&quot;srn:supersonrai::ControlPolicy/e10ff1a7-2951-4e41-971a-4214cc5d782a&quot;,&quot;srn:supersonrai::ControlPolicy/2c46a054-67c3-468d-a0c2-db6f7ba97a72&quot;,&quot;srn:supersonrai::ControlPolicy/90d48edd-8c38-4062-9e2f-551009b42bf1&quot;,&quot;srn:supersonrai::ControlPolicy/aec2ee16-3a29-4f94-9dd0-4663956bba15&quot;,&quot;srn:supersonrai::ControlPolicy/639f9dd0-02f5-4929-b9fc-6980fdcd3600&quot;,&quot;srn:supersonrai::ControlPolicy/4827181f-4a85-4c6e-bb94-7414f3b400f9&quot;,&quot;srn:supersonrai::ControlPolicy/645ef7ff-3c5f-46d8-9a30-1825d35684f4&quot;,&quot;srn:supersonrai::ControlPolicy/8a35abd0-16b2-499a-8e57-c80d36d281b9&quot;,&quot;srn:supersonrai::ControlPolicy/d89ffbdd-dfe3-407e-8d6e-9b52b5405632&quot;,&quot;srn:supersonrai::ControlPolicy/8b305367-4649-418a-8fa2-7c8a3dbc7e61&quot;,&quot;srn:supersonrai::ControlPolicy/917b77c9-84eb-48f7-a099-6aaa58c29cf6&quot;,&quot;srn:supersonrai::ControlPolicy/f29a8f95-37b1-4260-a85a-e40f2a72b064&quot;,&quot;srn:supersonrai::ControlPolicy/cd35e590-e1b7-4ded-8d38-69832d3acb35&quot;,&quot;srn:supersonrai::ControlPolicy/e798f370-d432-49d7-8137-fec4b5523a19&quot;,&quot;srn:supersonrai::ControlPolicy/8b1988f2-f7a2-4caa-8778-1a533a6f4e35&quot;,&quot;srn:supersonrai::ControlPolicy/6984dee5-18a8-4f77-b5ae-c08ffdec090f&quot;,&quot;srn:supersonrai::ControlPolicy/fac10498-6ba4-4796-bbbe-f4ed7012b30b&quot;,&quot;srn:supersonrai::ControlPolicy/117a9056-68ad-4e2f-95d4-bdad0cbce90f&quot;,&quot;srn:supersonrai::ControlPolicy/2b5c15d2-1ba7-4147-96f3-5130aef97c68&quot;,&quot;srn:supersonrai::ControlPolicy/e0d7ff99-d49a-453d-bd5f-93d74402865b&quot;,&quot;srn:supersonrai::ControlPolicy/89df9285-4636-413b-a75d-22a0bd82412b&quot;,&quot;srn:supersonrai::ControlPolicy/acb44b52-9943-464c-9b60-9636e62e72df&quot;,&quot;srn:supersonrai::ControlPolicy/b8de9aac-8eb5-447c-b7b0-ef0579af43f8&quot;,&quot;srn:supersonrai::ControlPolicy/74cb8fcb-e504-4024-985a-b341249f4346&quot;,&quot;srn:supersonrai::ControlPolicy/95909e4b-bb02-4f55-b4fd-656872cea2f7&quot;,&quot;srn:supersonrai::ControlPolicy/0a50164c-e223-498c-a677-87c99d6758db&quot;,&quot;srn:supersonrai::ControlPolicy/fbe645ee-6631-46ae-bfc5-a313ced2122d&quot;,&quot;srn:supersonrai::ControlPolicy/1e331300-93d7-4d17-8493-1acb5001be54&quot;,&quot;srn:supersonrai::ControlPolicy/b9a80c12-5ea4-4efa-9615-5f8be660c313&quot;,&quot;srn:supersonrai::ControlPolicy/e201287b-185d-42e8-a259-4ca69047da50&quot;,&quot;srn:Sonrai::ControlPolicy/c063ac86-a316-45c9-b321-565fe7f42cdc&quot;,&quot;srn:supersonrai::ControlPolicy/a730cdeb-2095-4032-a5dd-770ee5f2c004&quot;,&quot;srn:supersonrai::ControlPolicy/b686ade3-ef90-4bec-88b1-f9134c6cb542&quot;,&quot;srn:Sonrai::ControlPolicy/c063ac86-a316-45c9-b321-565fe7f42cdc/9313fd77-a977-40d0-be5c-6814a54c4e97/87f3aab6-8024-427b-bdda-0194188879a9&quot;,&quot;srn:Sonrai::ControlPolicy/c063ac86-a316-45c9-b321-565fe7f42cdc/9313fd77-a977-40d0-be5c-6814a54c4e97&quot;,&quot;srn:supersonrai::ControlPolicy/ba1542db-0556-4c6f-818d-1b0a6f242d92&quot;,&quot;srn:supersonrai::ControlPolicy/83b71a20-27ac-4d2c-937a-530e1190aa54&quot;,&quot;srn:supersonrai::ControlPolicy/ce9ecc92-8ddd-4e69-8b77-261fd8bc58fb&quot;,&quot;srn:supersonrai::ControlPolicy/ef896928-ef7f-43be-a552-45a2d3a54e11&quot;,&quot;srn:supersonrai::ControlPolicy/491c563c-bac8-4747-a979-bf0d9ccde67b&quot;],&quot;swimlaneSrns&quot;:[&quot;srn:stage11733927::Swimlane/eb046ec8-f31c-481a-8577-a9d088bcd7e8&quot;,&quot;srn:stage11733927::Swimlane/b3c77842-5f65-424d-acd9-f15dd023b5fd&quot;,&quot;srn:stage11733927::Swimlane/6cb632fe-951d-4481-8663-76188ff0024c&quot;,&quot;srn:stage11733927::Swimlane/60757a12-aa4a-4e35-8418-c6e9b26145e0&quot;]},&quot;query&quot;:&quot;query fetchLatestCPEvalLogs($policySrns: [String!]!, $swimlaneSrns: [String!]!) {\n  ControlPolicyEvalLogsLatest(\n    where: {policySrns: $policySrns, swimlaneSrns: $swimlaneSrns}\n  ) {\n    items {\n      swimlaneSrn\n      policySrn\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">d3075e70644a91a3a1c869948e823d2e</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:5537-4f86-bd1d-33d72f2859e5/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">1948677613284a14</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">d3075e70644a91a3a1c869948e823d2e-1948677613284a14-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">fetchLatestCPEvalLogs</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SwimlaneCheckup_T05_fetchTicketCountsForPolicies" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;fetchTicketCountsForPolicies&quot;,&quot;variables&quot;:{&quot;policySrns&quot;:[&quot;srn:supersonrai::ControlPolicy/2992c85a-b598-48bc-979e-a8f87b9dbc49&quot;,&quot;srn:supersonrai::ControlPolicy/70084518-ac96-4c5b-8a13-022a0c085ded&quot;,&quot;srn:supersonrai::ControlPolicy/9662f13b-46c2-4e94-987f-c15a6f869c76&quot;,&quot;srn:supersonrai::ControlPolicy/7ab64be6-4925-40df-8edf-5eecf52e9ab6&quot;,&quot;srn:supersonrai::ControlPolicy/ca07f1a0-b914-44da-85de-0ae41c38b310&quot;,&quot;srn:supersonrai::ControlPolicy/01bed657-134f-46b0-9412-f0720ea8a5d1&quot;,&quot;srn:supersonrai::ControlPolicy/569dddb1-208a-4289-ac96-02017793dba6&quot;,&quot;srn:supersonrai::ControlPolicy/f015dc34-e3e6-4db2-932a-182b6b5f5ae7&quot;,&quot;srn:supersonrai::ControlPolicy/d3682b01-cbdb-4548-9c03-0a625d1e9347&quot;,&quot;srn:supersonrai::ControlPolicy/a0b3e5fc-b641-4bea-b2b3-af1589da36e8&quot;,&quot;srn:supersonrai::ControlPolicy/02fee0f1-4656-4de1-91c8-9a77152938f4&quot;,&quot;srn:supersonrai::ControlPolicy/ddec1226-a23f-46a3-879d-e9ae0fdd51e7&quot;,&quot;srn:supersonrai::ControlPolicy/6a66a148-6cd0-4d53-839f-a81712d8c424&quot;,&quot;srn:supersonrai::ControlPolicy/c42d55a2-b668-46b3-9f19-57557af3a5e2&quot;,&quot;srn:supersonrai::ControlPolicy/abe977a3-d2ce-492c-939f-fecf646e7c71&quot;,&quot;srn:supersonrai::ControlPolicy/d58e4e23-d879-454c-ad1e-7f051ca50b86&quot;,&quot;srn:supersonrai::ControlPolicy/8875fc15-1e8f-4024-b745-edad91b756b7&quot;,&quot;srn:supersonrai::ControlPolicy/7fe8dab0-ae6e-4456-8c06-5f831c5fc7dc&quot;,&quot;srn:supersonrai::ControlPolicy/d6606624-14ce-42bc-8c15-c4832279359a&quot;,&quot;srn:supersonrai::ControlPolicy/820e093a-1344-4cc3-8c48-c7164afb243b&quot;,&quot;srn:supersonrai::ControlPolicy/8d93def7-b73f-4650-8214-1d19331273cd&quot;,&quot;srn:supersonrai::ControlPolicy/1d8eeb01-92c0-4270-a8ee-a7c4296272ea&quot;,&quot;srn:supersonrai::ControlPolicy/66f662df-acd5-49ad-a4bc-3fbbd3870f49&quot;,&quot;srn:supersonrai::ControlPolicy/9304c022-9600-41e7-9cfc-0676bbe9c591&quot;,&quot;srn:supersonrai::ControlPolicy/83a1ca33-12fc-4f65-89c5-e169be71e74c&quot;,&quot;srn:supersonrai::ControlPolicy/3ec7c61e-736f-4cde-807a-0ac175756ae4&quot;,&quot;srn:supersonrai::ControlPolicy/ddf5fd8e-c658-4606-9a24-4de35473557c&quot;,&quot;srn:supersonrai::ControlPolicy/f684722d-f5fb-419a-8c22-70d9fdc5d183&quot;,&quot;srn:supersonrai::ControlPolicy/38051138-ba0f-431e-a3d6-0e1fc2799d90&quot;,&quot;srn:supersonrai::ControlPolicy/646152af-3750-4d26-94ae-5dc5668fa256&quot;,&quot;srn:supersonrai::ControlPolicy/99af7c2f-8022-41de-9897-d13514c16fb4&quot;,&quot;srn:supersonrai::ControlPolicy/59cbc312-34f6-4a4e-961b-2b0d1abe4e78&quot;,&quot;srn:supersonrai::ControlPolicy/1ac48fa2-6789-4b77-89aa-df76059c3753&quot;,&quot;srn:supersonrai::ControlPolicy/59dc9836-4602-44bb-b352-53bf3a059cbf&quot;,&quot;srn:supersonrai::ControlPolicy/c55acb65-ae36-4386-8e8a-2e83b677d25b&quot;,&quot;srn:supersonrai::ControlPolicy/d68da1c0-8898-4b5b-874d-e40080034cb2&quot;,&quot;srn:supersonrai::ControlPolicy/ee0e3e38-8484-438d-8bae-7375bae6df54&quot;,&quot;srn:supersonrai::ControlPolicy/458c6986-ce57-4933-a35f-331cbd2be1f4&quot;,&quot;srn:supersonrai::ControlPolicy/ecf685ff-eb31-4f24-97d5-0f1db4738a68&quot;,&quot;srn:supersonrai::ControlPolicy/181257cc-183b-4b86-aa6c-85c6441072bb&quot;,&quot;srn:supersonrai::ControlPolicy/8cd26196-929a-49b5-af6b-de37915f2b53&quot;,&quot;srn:supersonrai::ControlPolicy/4007d909-ae91-4e1b-9e6c-a58f42647162&quot;,&quot;srn:supersonrai::ControlPolicy/dcab6cb9-cfa6-4954-8ff2-8274c1f2f180&quot;,&quot;srn:supersonrai::ControlPolicy/f493d1db-8ef2-4546-86ee-0b5b9808734f&quot;,&quot;srn:supersonrai::ControlPolicy/bcdef8ba-c217-491a-93ab-0c06bd544277&quot;,&quot;srn:supersonrai::ControlPolicy/8927da79-197b-47d3-b7af-40b98edff903&quot;,&quot;srn:supersonrai::ControlPolicy/90fceb83-3ca6-4b47-9ba6-750161078b01&quot;,&quot;srn:supersonrai::ControlPolicy/43c68e2c-bd9c-4554-a371-2d1bde4b4df1&quot;,&quot;srn:supersonrai::ControlPolicy/14637c09-5b17-4ebf-b822-07e070c3ea0a&quot;,&quot;srn:supersonrai::ControlPolicy/e2d57d19-d172-44d3-91c8-023a82566097&quot;,&quot;srn:supersonrai::ControlPolicy/900180dc-2657-439f-9d4d-7422065a503e&quot;,&quot;srn:supersonrai::ControlPolicy/27c642fb-090a-4a38-816c-b374278abc06&quot;,&quot;srn:supersonrai::ControlPolicy/18ae02b6-1496-4b44-b2cd-7a7adefcb82a&quot;,&quot;srn:supersonrai::ControlPolicy/3573b890-167a-4b99-ad60-93153522f0b3&quot;,&quot;srn:supersonrai::ControlPolicy/c1977ed1-796f-40e1-a91f-de2cd0eb9a40&quot;,&quot;srn:supersonrai::ControlPolicy/f5785ba0-2adc-4790-b4c3-25e4cfa265b1&quot;,&quot;srn:supersonrai::ControlPolicy/4957e49d-4780-493a-9d13-8eadd7031a65&quot;,&quot;srn:supersonrai::ControlPolicy/dbeadb9b-f8ec-4ca6-ab93-3ab0e8d10475&quot;,&quot;srn:supersonrai::ControlPolicy/c489901d-1f22-449a-b86a-0c68bbf1328c&quot;,&quot;srn:supersonrai::ControlPolicy/571af71b-25e3-4f17-add9-8e7353a35bb8&quot;,&quot;srn:supersonrai::ControlPolicy/f64efe6e-2a9b-4e27-aeab-395ceee22ac9&quot;,&quot;srn:supersonrai::ControlPolicy/4ecf8b19-1dc5-47cc-8740-f1794c2d9c18&quot;,&quot;srn:supersonrai::ControlPolicy/ee8be6c2-5e35-4355-b868-0c6071cf7fbd&quot;,&quot;srn:supersonrai::ControlPolicy/0a4babce-fbd3-4d87-b646-c5b7054f0280&quot;,&quot;srn:supersonrai::ControlPolicy/d2d60f20-c7ec-4704-82d8-c1653883a284&quot;,&quot;srn:supersonrai::ControlPolicy/67b0b224-2608-46c9-92f8-f82270e8184e&quot;,&quot;srn:supersonrai::ControlPolicy/10f58f2a-a096-47c1-99fe-d009f1112a3a&quot;,&quot;srn:supersonrai::ControlPolicy/00f91912-71d1-40a9-baeb-4725de640211&quot;,&quot;srn:supersonrai::ControlPolicy/9a102233-edef-427e-908c-48c60fa06f5f&quot;,&quot;srn:supersonrai::ControlPolicy/482e462d-8838-4a02-88e6-a9a7b7f22206&quot;,&quot;srn:supersonrai::ControlPolicy/19d0550d-aabd-41eb-86cc-e60e15ad4202&quot;,&quot;srn:supersonrai::ControlPolicy/d8ae74d2-4e3e-42f7-945d-5dbd06be55ab&quot;,&quot;srn:supersonrai::ControlPolicy/b3cf34f5-47b2-43c9-bb2a-242436d06b14&quot;,&quot;srn:supersonrai::ControlPolicy/e0a0fb67-6bc3-4199-97c7-c61294d82394&quot;,&quot;srn:supersonrai::ControlPolicy/28eaae05-4a75-43de-bb18-b6c604786626&quot;,&quot;srn:supersonrai::ControlPolicy/14fa6df2-b860-4890-9759-195b42637d7c&quot;,&quot;srn:supersonrai::ControlPolicy/3905b5cf-a360-47ef-8136-13495cbf5b5f&quot;,&quot;srn:supersonrai::ControlPolicy/10353af3-b8bf-424d-bbe3-62e3a6c43a8b&quot;,&quot;srn:supersonrai::ControlPolicy/720efad5-298c-45c9-b098-2ea052baa06d&quot;,&quot;srn:supersonrai::ControlPolicy/986bdc7f-2ec7-4429-bb73-7d984d13214b&quot;,&quot;srn:supersonrai::ControlPolicy/52dd18c7-6baa-48f2-9400-dfe365cdcaa1&quot;,&quot;srn:supersonrai::ControlPolicy/2cac6d88-4517-4e56-8d92-2911f0a2b36a&quot;,&quot;srn:supersonrai::ControlPolicy/09a784a5-d70a-46db-9df6-189c19a802c7&quot;,&quot;srn:supersonrai::ControlPolicy/fbbe1fff-458c-419a-8327-4ebbe9763181&quot;,&quot;srn:supersonrai::ControlPolicy/3a58c442-bc3e-4308-933b-ce8d5a6bc678&quot;,&quot;srn:supersonrai::ControlPolicy/2a11dece-cb36-43be-a423-26168bbb57e8&quot;,&quot;srn:supersonrai::ControlPolicy/1e3a8826-c8bb-4947-8ef5-9319016441c8&quot;,&quot;srn:supersonrai::ControlPolicy/7998703e-1e0c-4a10-bed3-056b53f2e3ad&quot;,&quot;srn:supersonrai::ControlPolicy/9393e9b7-2bfb-4426-9608-5aeba9048448&quot;,&quot;srn:supersonrai::ControlPolicy/113e1558-2654-441e-8067-58bd541ffdbd&quot;,&quot;srn:supersonrai::ControlPolicy/b03e2608-d7b6-451d-b78c-6e9030b44a52&quot;,&quot;srn:supersonrai::ControlPolicy/faa80be2-f94e-4522-875f-8582b6ef435c&quot;,&quot;srn:supersonrai::ControlPolicy/eb812ac4-4b38-4698-b5b9-ae506811ef77&quot;,&quot;srn:supersonrai::ControlPolicy/f8b97bab-471c-45e8-b882-b9ddc92bc078&quot;,&quot;srn:supersonrai::ControlPolicy/bad1bd6f-069d-4e32-b016-50044aa2e38a&quot;,&quot;srn:supersonrai::ControlPolicy/108d5fc8-9388-4817-abc9-d682936f3b7f&quot;,&quot;srn:supersonrai::ControlPolicy/ae39d1e1-9882-42b0-b8e6-c3d9991279f6&quot;,&quot;srn:supersonrai::ControlPolicy/e0fe2b45-3859-4916-ac48-6f372c024389&quot;,&quot;srn:supersonrai::ControlPolicy/298e54d7-fa9d-4090-a0d0-7257152c7544&quot;,&quot;srn:supersonrai::ControlPolicy/88144241-73d3-42f0-9710-f350d887ec09&quot;,&quot;srn:supersonrai::ControlPolicy/89d1d826-7ee9-487a-a96f-50913819fcba&quot;,&quot;srn:supersonrai::ControlPolicy/c5ce4e6f-3f31-4945-9c63-93c4746ac4be&quot;,&quot;srn:supersonrai::ControlPolicy/7a56a7a5-4e38-41c5-9089-01f1e5be24c9&quot;,&quot;srn:supersonrai::ControlPolicy/2c398505-f420-4535-bad8-903716941e10&quot;,&quot;srn:supersonrai::ControlPolicy/a6d1a142-e21c-4c85-945d-c99de0ae1aa6&quot;,&quot;srn:supersonrai::ControlPolicy/51818758-a378-407d-b2b1-f1fb9cf67808&quot;,&quot;srn:supersonrai::ControlPolicy/60ef19c9-c950-48e3-91c2-124d93395b14&quot;,&quot;srn:supersonrai::ControlPolicy/d8cf0d35-0cc9-4c1e-a07f-f42d64ef9900&quot;,&quot;srn:supersonrai::ControlPolicy/e10ff1a7-2951-4e41-971a-4214cc5d782a&quot;,&quot;srn:supersonrai::ControlPolicy/2c46a054-67c3-468d-a0c2-db6f7ba97a72&quot;,&quot;srn:supersonrai::ControlPolicy/90d48edd-8c38-4062-9e2f-551009b42bf1&quot;,&quot;srn:supersonrai::ControlPolicy/aec2ee16-3a29-4f94-9dd0-4663956bba15&quot;,&quot;srn:supersonrai::ControlPolicy/639f9dd0-02f5-4929-b9fc-6980fdcd3600&quot;,&quot;srn:supersonrai::ControlPolicy/4827181f-4a85-4c6e-bb94-7414f3b400f9&quot;,&quot;srn:supersonrai::ControlPolicy/645ef7ff-3c5f-46d8-9a30-1825d35684f4&quot;,&quot;srn:supersonrai::ControlPolicy/8a35abd0-16b2-499a-8e57-c80d36d281b9&quot;,&quot;srn:supersonrai::ControlPolicy/d89ffbdd-dfe3-407e-8d6e-9b52b5405632&quot;,&quot;srn:supersonrai::ControlPolicy/8b305367-4649-418a-8fa2-7c8a3dbc7e61&quot;,&quot;srn:supersonrai::ControlPolicy/917b77c9-84eb-48f7-a099-6aaa58c29cf6&quot;,&quot;srn:supersonrai::ControlPolicy/f29a8f95-37b1-4260-a85a-e40f2a72b064&quot;,&quot;srn:supersonrai::ControlPolicy/cd35e590-e1b7-4ded-8d38-69832d3acb35&quot;,&quot;srn:supersonrai::ControlPolicy/e798f370-d432-49d7-8137-fec4b5523a19&quot;,&quot;srn:supersonrai::ControlPolicy/8b1988f2-f7a2-4caa-8778-1a533a6f4e35&quot;,&quot;srn:supersonrai::ControlPolicy/6984dee5-18a8-4f77-b5ae-c08ffdec090f&quot;,&quot;srn:supersonrai::ControlPolicy/fac10498-6ba4-4796-bbbe-f4ed7012b30b&quot;,&quot;srn:supersonrai::ControlPolicy/117a9056-68ad-4e2f-95d4-bdad0cbce90f&quot;,&quot;srn:supersonrai::ControlPolicy/2b5c15d2-1ba7-4147-96f3-5130aef97c68&quot;,&quot;srn:supersonrai::ControlPolicy/e0d7ff99-d49a-453d-bd5f-93d74402865b&quot;,&quot;srn:supersonrai::ControlPolicy/89df9285-4636-413b-a75d-22a0bd82412b&quot;,&quot;srn:supersonrai::ControlPolicy/acb44b52-9943-464c-9b60-9636e62e72df&quot;,&quot;srn:supersonrai::ControlPolicy/b8de9aac-8eb5-447c-b7b0-ef0579af43f8&quot;,&quot;srn:supersonrai::ControlPolicy/74cb8fcb-e504-4024-985a-b341249f4346&quot;,&quot;srn:supersonrai::ControlPolicy/95909e4b-bb02-4f55-b4fd-656872cea2f7&quot;,&quot;srn:supersonrai::ControlPolicy/0a50164c-e223-498c-a677-87c99d6758db&quot;,&quot;srn:supersonrai::ControlPolicy/fbe645ee-6631-46ae-bfc5-a313ced2122d&quot;,&quot;srn:supersonrai::ControlPolicy/1e331300-93d7-4d17-8493-1acb5001be54&quot;,&quot;srn:supersonrai::ControlPolicy/b9a80c12-5ea4-4efa-9615-5f8be660c313&quot;,&quot;srn:supersonrai::ControlPolicy/e201287b-185d-42e8-a259-4ca69047da50&quot;,&quot;srn:Sonrai::ControlPolicy/c063ac86-a316-45c9-b321-565fe7f42cdc&quot;,&quot;srn:supersonrai::ControlPolicy/a730cdeb-2095-4032-a5dd-770ee5f2c004&quot;,&quot;srn:supersonrai::ControlPolicy/b686ade3-ef90-4bec-88b1-f9134c6cb542&quot;,&quot;srn:Sonrai::ControlPolicy/c063ac86-a316-45c9-b321-565fe7f42cdc/9313fd77-a977-40d0-be5c-6814a54c4e97/87f3aab6-8024-427b-bdda-0194188879a9&quot;,&quot;srn:Sonrai::ControlPolicy/c063ac86-a316-45c9-b321-565fe7f42cdc/9313fd77-a977-40d0-be5c-6814a54c4e97&quot;,&quot;srn:supersonrai::ControlPolicy/ba1542db-0556-4c6f-818d-1b0a6f242d92&quot;,&quot;srn:supersonrai::ControlPolicy/83b71a20-27ac-4d2c-937a-530e1190aa54&quot;,&quot;srn:supersonrai::ControlPolicy/ce9ecc92-8ddd-4e69-8b77-261fd8bc58fb&quot;,&quot;srn:supersonrai::ControlPolicy/ef896928-ef7f-43be-a552-45a2d3a54e11&quot;,&quot;srn:supersonrai::ControlPolicy/491c563c-bac8-4747-a979-bf0d9ccde67b&quot;],&quot;swimlaneSrns&quot;:[&quot;srn:stage11733927::Swimlane/eb046ec8-f31c-481a-8577-a9d088bcd7e8&quot;,&quot;srn:stage11733927::Swimlane/b3c77842-5f65-424d-acd9-f15dd023b5fd&quot;,&quot;srn:stage11733927::Swimlane/6cb632fe-951d-4481-8663-76188ff0024c&quot;,&quot;srn:stage11733927::Swimlane/60757a12-aa4a-4e35-8418-c6e9b26145e0&quot;]},&quot;query&quot;:&quot;query fetchTicketCountsForPolicies($policySrns: [String!]!, $swimlaneSrns: [String!]!) {\n  TicketRollups(\n    where: {swimlaneSrn: {op: IN_LIST, values: $swimlaneSrns}, ticketKey: {op: IN_LIST, values: $policySrns}, status: {op: IN_LIST, values: [\&quot;NEW\&quot;, \&quot;IN_PROGRESS\&quot;]}}\n  ) {\n    items {\n      count\n      policySrn: ticketKey\n      swimlaneSrn\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">52c9b5eb81fe97e81649423b85c8ad53</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:e226-41c4-aff8-47adec1f3896/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">34f682fe012f246c</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">52c9b5eb81fe97e81649423b85c8ad53-34f682fe012f246c-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">fetchTicketCountsForPolicies</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SwimlaneCheckup_T06_fetchLatestCPEvalLogs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;fetchLatestCPEvalLogs&quot;,&quot;variables&quot;:{&quot;policySrns&quot;:[&quot;srn:supersonrai::ControlPolicy/b8de9aac-8eb5-447c-b7b0-ef0579af43f8&quot;,&quot;srn:supersonrai::ControlPolicy/74cb8fcb-e504-4024-985a-b341249f4346&quot;,&quot;srn:supersonrai::ControlPolicy/95909e4b-bb02-4f55-b4fd-656872cea2f7&quot;,&quot;srn:supersonrai::ControlPolicy/0a50164c-e223-498c-a677-87c99d6758db&quot;,&quot;srn:supersonrai::ControlPolicy/fbe645ee-6631-46ae-bfc5-a313ced2122d&quot;,&quot;srn:supersonrai::ControlPolicy/1e331300-93d7-4d17-8493-1acb5001be54&quot;,&quot;srn:supersonrai::ControlPolicy/b9a80c12-5ea4-4efa-9615-5f8be660c313&quot;,&quot;srn:supersonrai::ControlPolicy/e201287b-185d-42e8-a259-4ca69047da50&quot;,&quot;srn:Sonrai::ControlPolicy/c063ac86-a316-45c9-b321-565fe7f42cdc&quot;,&quot;srn:supersonrai::ControlPolicy/a730cdeb-2095-4032-a5dd-770ee5f2c004&quot;,&quot;srn:supersonrai::ControlPolicy/b686ade3-ef90-4bec-88b1-f9134c6cb542&quot;,&quot;srn:Sonrai::ControlPolicy/c063ac86-a316-45c9-b321-565fe7f42cdc/9313fd77-a977-40d0-be5c-6814a54c4e97/87f3aab6-8024-427b-bdda-0194188879a9&quot;,&quot;srn:Sonrai::ControlPolicy/c063ac86-a316-45c9-b321-565fe7f42cdc/9313fd77-a977-40d0-be5c-6814a54c4e97&quot;,&quot;srn:supersonrai::ControlPolicy/ba1542db-0556-4c6f-818d-1b0a6f242d92&quot;,&quot;srn:supersonrai::ControlPolicy/83b71a20-27ac-4d2c-937a-530e1190aa54&quot;,&quot;srn:supersonrai::ControlPolicy/ce9ecc92-8ddd-4e69-8b77-261fd8bc58fb&quot;,&quot;srn:supersonrai::ControlPolicy/ef896928-ef7f-43be-a552-45a2d3a54e11&quot;,&quot;srn:supersonrai::ControlPolicy/491c563c-bac8-4747-a979-bf0d9ccde67b&quot;],&quot;swimlaneSrns&quot;:[&quot;srn:stage11733927::Swimlane/2e0fc915-74d7-4938-bb0e-ecac2193c9a0&quot;]},&quot;query&quot;:&quot;query fetchLatestCPEvalLogs($policySrns: [String!]!, $swimlaneSrns: [String!]!) {\n  ControlPolicyEvalLogsLatest(\n    where: {policySrns: $policySrns, swimlaneSrns: $swimlaneSrns}\n  ) {\n    items {\n      swimlaneSrn\n      policySrn\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">5244144fdef4821af20a6f09d3327f52</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:0240-4f0b-9a6c-09a3d2742ff2/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">c82e284ba0fa3950</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">5244144fdef4821af20a6f09d3327f52-c82e284ba0fa3950-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">fetchLatestCPEvalLogs</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SwimlaneCheckup_T07_fetchTicketCountsForPolicies" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;fetchTicketCountsForPolicies&quot;,&quot;variables&quot;:{&quot;policySrns&quot;:[&quot;srn:supersonrai::ControlPolicy/b8de9aac-8eb5-447c-b7b0-ef0579af43f8&quot;,&quot;srn:supersonrai::ControlPolicy/74cb8fcb-e504-4024-985a-b341249f4346&quot;,&quot;srn:supersonrai::ControlPolicy/95909e4b-bb02-4f55-b4fd-656872cea2f7&quot;,&quot;srn:supersonrai::ControlPolicy/0a50164c-e223-498c-a677-87c99d6758db&quot;,&quot;srn:supersonrai::ControlPolicy/fbe645ee-6631-46ae-bfc5-a313ced2122d&quot;,&quot;srn:supersonrai::ControlPolicy/1e331300-93d7-4d17-8493-1acb5001be54&quot;,&quot;srn:supersonrai::ControlPolicy/b9a80c12-5ea4-4efa-9615-5f8be660c313&quot;,&quot;srn:supersonrai::ControlPolicy/e201287b-185d-42e8-a259-4ca69047da50&quot;,&quot;srn:Sonrai::ControlPolicy/c063ac86-a316-45c9-b321-565fe7f42cdc&quot;,&quot;srn:supersonrai::ControlPolicy/a730cdeb-2095-4032-a5dd-770ee5f2c004&quot;,&quot;srn:supersonrai::ControlPolicy/b686ade3-ef90-4bec-88b1-f9134c6cb542&quot;,&quot;srn:Sonrai::ControlPolicy/c063ac86-a316-45c9-b321-565fe7f42cdc/9313fd77-a977-40d0-be5c-6814a54c4e97/87f3aab6-8024-427b-bdda-0194188879a9&quot;,&quot;srn:Sonrai::ControlPolicy/c063ac86-a316-45c9-b321-565fe7f42cdc/9313fd77-a977-40d0-be5c-6814a54c4e97&quot;,&quot;srn:supersonrai::ControlPolicy/ba1542db-0556-4c6f-818d-1b0a6f242d92&quot;,&quot;srn:supersonrai::ControlPolicy/83b71a20-27ac-4d2c-937a-530e1190aa54&quot;,&quot;srn:supersonrai::ControlPolicy/ce9ecc92-8ddd-4e69-8b77-261fd8bc58fb&quot;,&quot;srn:supersonrai::ControlPolicy/ef896928-ef7f-43be-a552-45a2d3a54e11&quot;,&quot;srn:supersonrai::ControlPolicy/491c563c-bac8-4747-a979-bf0d9ccde67b&quot;],&quot;swimlaneSrns&quot;:[&quot;srn:stage11733927::Swimlane/2e0fc915-74d7-4938-bb0e-ecac2193c9a0&quot;]},&quot;query&quot;:&quot;query fetchTicketCountsForPolicies($policySrns: [String!]!, $swimlaneSrns: [String!]!) {\n  TicketRollups(\n    where: {swimlaneSrn: {op: IN_LIST, values: $swimlaneSrns}, ticketKey: {op: IN_LIST, values: $policySrns}, status: {op: IN_LIST, values: [\&quot;NEW\&quot;, \&quot;IN_PROGRESS\&quot;]}}\n  ) {\n    items {\n      count\n      policySrn: ticketKey\n      swimlaneSrn\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">ff57c580b3bbcc55d0280664de236fe3</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:bb1f-4077-ac42-e22db741862d/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">23adb500a504579c</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">ff57c580b3bbcc55d0280664de236fe3-23adb500a504579c-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">fetchTicketCountsForPolicies</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://front-end-collector-web.s.sonraisecurity.com/v1/metrics" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;resourceMetrics&quot;:[{&quot;resource&quot;:{&quot;attributes&quot;:[],&quot;droppedAttributesCount&quot;:0},&quot;scopeMetrics&quot;:[{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-document-load&quot;,&quot;version&quot;:&quot;0.27.1&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-fetch&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-long-task&quot;,&quot;version&quot;:&quot;0.30.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-xml-http-request&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;app_layout_error_boundary_errors_count&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;sum&quot;:{&quot;aggregationTemporality&quot;:2,&quot;isMonotonic&quot;:true,&quot;dataPoints&quot;:[]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.graphql&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;graphql_request_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStatsBySwimlane&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1003,&quot;min&quot;:1003,&quot;max&quot;:1003,&quot;startTimeUnixNano&quot;:1680198646508500000,&quot;timeUnixNano&quot;:1680198663516600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchLatestCPEvalLogs&quot;}}],&quot;bucketCounts&quot;:[0,2,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:3,&quot;sum&quot;:3921,&quot;min&quot;:98,&quot;max&quot;:3345,&quot;startTimeUnixNano&quot;:1680198649104000000,&quot;timeUnixNano&quot;:1680198663516600000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchTicketCountsForPolicies&quot;}}],&quot;bucketCounts&quot;:[0,1,0,1,0,0,1,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:3,&quot;sum&quot;:7301,&quot;min&quot;:460,&quot;max&quot;:5184,&quot;startTimeUnixNano&quot;:1680198650944800000,&quot;timeUnixNano&quot;:1680198663516600000}]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.newroute&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;newtab_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[]}},{&quot;name&quot;:&quot;newroute_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:184,&quot;min&quot;:184,&quot;max&quot;:184,&quot;startTimeUnixNano&quot;:1680198645606400000,&quot;timeUnixNano&quot;:1680198663516600000}]}}]}]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v1/metrics</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SwimlaneCheckup_T08_getSonraiSeaches" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getSonraiSeaches&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getSonraiSeaches {\n  SavedQueries {\n    items(limit: -1) {\n      name\n      query\n      variables {\n        items {\n          defaultValue\n          name\n          __typename\n        }\n        __typename\n      }\n      srn\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">00dc635b9eccc55319640412802788b5</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:332e-463c-88bc-e2a014176ecd/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">0cb8b803e839f482</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">00dc635b9eccc55319640412802788b5-0cb8b803e839f482-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getSonraiSeaches</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SwimlaneCheckup_T09_getSavedSearches" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getSavedSearches&quot;,&quot;variables&quot;:{&quot;includeDetails&quot;:true},&quot;query&quot;:&quot;query getSavedSearches($includeDetails: Boolean = true) {\n  Searches {\n    items(limit: -1) {\n      name\n      description\n      query\n      createdDate\n      createdBy\n      sid\n      srn\n      lastModified\n      rootQueryName\n      resourceId\n      containedByWidget @include(if: $includeDetails) {\n        count\n        items(limit: -1) {\n          title\n          type\n          srn\n          containedBy {\n            items {\n              name\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      containedByControlPolicy @include(if: $includeDetails) {\n        count\n        items(limit: -1) {\n          title\n          srn\n          __typename\n        }\n        __typename\n      }\n      ownedByOrganization @include(if: $includeDetails) {\n        items {\n          sid\n          name\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">a9bf76cc535a65df1cf2a3091d638979</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:5211-4748-acbf-eb7060f80f24/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">738f2aae29a171c6</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">a9bf76cc535a65df1cf2a3091d638979-738f2aae29a171c6-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getSavedSearches</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SwimlaneCheckup_T10_fetchSwimlanes" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;fetchSwimlanes&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query fetchSwimlanes {\n  Swimlanes {\n    items(limit: -1) {\n      description\n      label\n      title\n      srn\n      defaultImportance\n      createdBy\n      sid\n      preventionEnabled\n      lastModified\n      createdDate\n      name\n      accounts\n      names\n      resourceIds\n      tags\n      resourceId\n      environments\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">7f755cab1402f5a55cb5c58dc324e407</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:f935-423b-9eb7-433a2d895482/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">883ad0f12b7ba7a3</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">7f755cab1402f5a55cb5c58dc324e407-883ad0f12b7ba7a3-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">fetchSwimlanes</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SwimlaneCheckup_T11_getAccounts" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getAccounts&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getAccounts {\n  Accounts {\n    items(limit: -1) {\n      name\n      srn\n      friendlyName\n      account\n      cloudType\n      type\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">db39a96fd4ad319df64d4002116aeed2</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:640c-4405-a9c8-8b26466e2990/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">2bf34a10a1379dc9</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">db39a96fd4ad319df64d4002116aeed2-2bf34a10a1379dc9-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getAccounts</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SwimlaneCheckup_t12_getAccounts" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getSubscriptions&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getSubscriptions {\n  Subscriptions {\n    items(limit: -1) {\n      friendlyName\n      name\n      srn\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">e7ee54e6485ee3c692082617df973f24</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:4320-4cdd-a4da-f97dc75af9e9/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">79e11d24ed2a7174</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">e7ee54e6485ee3c692082617df973f24-79e11d24ed2a7174-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getSubscriptions</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="stage11733927_16_Objective" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Objective_T01_getObjectives" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getObjectives&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getObjectives {\n  SonraiObjectives {\n    items {\n      srn\n      resourceId\n      name\n      description\n      createdBy\n      definedControlFrameworks {\n        controlFrameworkSrn\n        controlFrameworkOrder\n        __typename\n      }\n      appliedControlFrameworks {\n        items {\n          srn\n          swimlaneSRNs\n          contains {\n            items {\n              srn\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">615cc12d80dff9299960f20ee04605ff</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="cache-control" elementType="Header">
                  <stringProp name="Header.name">cache-control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">a945861d4cf90349</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:3a26-41b0-ae78-9fc0a5c06ebc/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">615cc12d80dff9299960f20ee04605ff-a945861d4cf90349-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getObjectives</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="swimlanes" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://jaeger-collector-web.s.sonraisecurity.com/jaeger.api_v2.CollectorService/PostSpans" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x0;&#x0;&#x0;&#x5;,&#xd;
©&#xd;
&#xd;
Ø&#x3;&#xd;
&#x10;G®êÛ&#x11;&#x13;&#x9b;QÊøs&#x9d;]o&#x84;2&#x12;&#x8;&#x98;²w&#xb;&#x11;Òr±&#x1a;	new route2&#xb;&#x8;&#x9e;&#x98;&#x97;¡&#x6;&#x10;&#x95;®Û&quot;:&#x5;&#x10;&#x80;É³VB(&#xd;
&#x6;userId&#x1a;&#x1e;auth0|640b315a3dbd33596a1c2217B&#x16;&#xd;
&#x5;orgId&#x1a;&#xd;stage11733927B&#x15;&#xd;
&#xb;app-version&#x1a;&#x6;2.18.1B&#x11;&#xd;
&#x5;tabId&#x1a;&#x8;d7d14c46B0&#xd;
&#x14;window.location.host&#x1a;&#x18;app.s.sonraisecurity.comB3&#xd;
&#x18;window.location.pathname&#x1a;&#x17;/App/SwimlaneManagementB&#x19;&#xd;
&#x11;window.innerWidth&#x1a;&#x4;1728B&#x1a;&#xd;
&#x12;window.innerHeight&#x1a;&#x4;1001B&#x16;&#xd;
&#xc;browser.name&#x1a;&#x6;chromeB&#x1a;&#xd;
&#xf;browser.version&#x1a;&#x7;110.0.0B&#x14;&#xd;
&#xd;
browser.os&#x1a;&#x6;Mac OSB&#xe;&#xd;
&#x6;newtab&#x1a;&#x4;trueB&#x13;&#xd;
&#xd;
didTimeout&#x1a;&#x5;falseB&#x15;&#xd;
&#xc;navCancelled&#x1a;&#x5;falseR&#xb;&#xd;
	front-end&#xd;
Ë&#x6;&#xd;
&#x10;¾$n3&#x8b;&#x8c;&#x95;8&#x16;Q¾&#x97;VÈõ&#x99;&#x12;&#x8;oÛFîï&#x92;&#x7f;c&#x1a;&#x8;longtask2&#xc;&#x8;&#x9e;&#x98;&#x97;¡&#x6;&#x10;µ&#x8b;¼&#x87;&#x1;:&#x5;&#x10;À&#x95;&#x8c;FB(&#xd;
&#x6;userId&#x1a;&#x1e;auth0|640b315a3dbd33596a1c2217B&#x16;&#xd;
&#x5;orgId&#x1a;&#xd;stage11733927B&#x15;&#xd;
&#xb;app-version&#x1a;&#x6;2.18.1B&#x11;&#xd;
&#x5;tabId&#x1a;&#x8;d7d14c46B0&#xd;
&#x14;window.location.host&#x1a;&#x18;app.s.sonraisecurity.comB3&#xd;
&#x18;window.location.pathname&#x1a;&#x17;/App/SwimlaneManagementB&#x19;&#xd;
&#x11;window.innerWidth&#x1a;&#x4;1728B&#x1a;&#xd;
&#x12;window.innerHeight&#x1a;&#x4;1001B&#x16;&#xd;
&#xc;browser.name&#x1a;&#x6;chromeB&#x1a;&#xd;
&#xf;browser.version&#x1a;&#x7;110.0.0B&#x14;&#xd;
&#xd;
browser.os&#x1a;&#x6;Mac OSB&#x16;&#xd;
	component&#x1a;	long-taskB&#x15;&#xd;
&#xd;longtask.name&#x1a;&#x4;selfB&#x1f;&#xd;
&#x13;longtask.entry_type&#x1a;&#x8;longtaskB&#x18;&#xd;
&#x11;longtask.duration&#x1a;&#x3;147B$&#xd;
&#x19;longtask.attribution.name&#x1a;&#x7;unknownB2&#xd;
&#x1f;longtask.attribution.entry_type&#x1a;&#xf;taskattributionB$&#xd;
&#x1f;longtask.attribution.start_time&#x1a;&#x1;0B&quot;&#xd;
&#x1d;longtask.attribution.duration&#x1a;&#x1;0B-&#xd;
#longtask.attribution.container_type&#x1a;&#x6;windowB$&#xd;
&quot;longtask.attribution.container_srcB#&#xd;
!longtask.attribution.container_idB%&#xd;
#longtask.attribution.container_nameR&#xb;&#xd;
	front-end</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">jaeger.api_v2.CollectorService/PostSpans</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-User-Agent" elementType="Header">
                  <stringProp name="Header.name">X-User-Agent</stringProp>
                  <stringProp name="Header.value">grpc-web-javascript/0.1</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/grpc-web+proto</stringProp>
                </elementProp>
                <elementProp name="X-Grpc-Web" elementType="Header">
                  <stringProp name="Header.name">X-Grpc-Web</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://front-end-collector-web.s.sonraisecurity.com/v1/metrics" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;resourceMetrics&quot;:[{&quot;resource&quot;:{&quot;attributes&quot;:[],&quot;droppedAttributesCount&quot;:0},&quot;scopeMetrics&quot;:[{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-document-load&quot;,&quot;version&quot;:&quot;0.27.1&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-fetch&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-long-task&quot;,&quot;version&quot;:&quot;0.30.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-xml-http-request&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;app_layout_error_boundary_errors_count&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;sum&quot;:{&quot;aggregationTemporality&quot;:2,&quot;isMonotonic&quot;:true,&quot;dataPoints&quot;:[]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.graphql&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;graphql_request_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStatsBySwimlane&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1003,&quot;min&quot;:1003,&quot;max&quot;:1003,&quot;startTimeUnixNano&quot;:1680198646508500000,&quot;timeUnixNano&quot;:1680198693518800100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchLatestCPEvalLogs&quot;}}],&quot;bucketCounts&quot;:[0,2,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:3,&quot;sum&quot;:3921,&quot;min&quot;:98,&quot;max&quot;:3345,&quot;startTimeUnixNano&quot;:1680198649104000000,&quot;timeUnixNano&quot;:1680198693518800100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchTicketCountsForPolicies&quot;}}],&quot;bucketCounts&quot;:[0,1,0,1,0,0,1,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:3,&quot;sum&quot;:7301,&quot;min&quot;:460,&quot;max&quot;:5184,&quot;startTimeUnixNano&quot;:1680198650944800000,&quot;timeUnixNano&quot;:1680198693518800100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAccounts&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:419,&quot;min&quot;:419,&quot;max&quot;:419,&quot;startTimeUnixNano&quot;:1680198668642900000,&quot;timeUnixNano&quot;:1680198693518800100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSavedSearches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:756,&quot;min&quot;:756,&quot;max&quot;:756,&quot;startTimeUnixNano&quot;:1680198668979200000,&quot;timeUnixNano&quot;:1680198693518800100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchSwimlanes&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:861,&quot;min&quot;:861,&quot;max&quot;:861,&quot;startTimeUnixNano&quot;:1680198669084600000,&quot;timeUnixNano&quot;:1680198693518800100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiSeaches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:871,&quot;min&quot;:871,&quot;max&quot;:871,&quot;startTimeUnixNano&quot;:1680198669093300000,&quot;timeUnixNano&quot;:1680198693518800100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSubscriptions&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:874,&quot;min&quot;:874,&quot;max&quot;:874,&quot;startTimeUnixNano&quot;:1680198669097600000,&quot;timeUnixNano&quot;:1680198693518800100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ObjectivesManager&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getObjectives&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:4351,&quot;min&quot;:4351,&quot;max&quot;:4351,&quot;startTimeUnixNano&quot;:1680198675829700000,&quot;timeUnixNano&quot;:1680198693518800100}]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.newroute&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;newtab_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[]}},{&quot;name&quot;:&quot;newroute_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:184,&quot;min&quot;:184,&quot;max&quot;:184,&quot;startTimeUnixNano&quot;:1680198645606400000,&quot;timeUnixNano&quot;:1680198693518800100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ObjectivesManager&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:4524,&quot;min&quot;:4524,&quot;max&quot;:4524,&quot;startTimeUnixNano&quot;:1680198675857500000,&quot;timeUnixNano&quot;:1680198693518800100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneManagement&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:181,&quot;min&quot;:181,&quot;max&quot;:181,&quot;startTimeUnixNano&quot;:1680198686254200000,&quot;timeUnixNano&quot;:1680198693518800100}]}}]}]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v1/metrics</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="stage11733927_17_MonitoredResourcces" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MonitoredResource_T01_getTags" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getTags&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getTags {\n  Tags {\n    count\n    group {\n      key {\n        key\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">b8469b3a905042aec0ed34d19aa01884</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:d3b6-4937-9e28-1058ad56a918/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">ba13af1dd05e81c2</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">b8469b3a905042aec0ed34d19aa01884-ba13af1dd05e81c2-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getTags</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MonitoredResource_T02_getAllMonitoredResources" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getAllMonitoredResources&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getAllMonitoredResources {\n  Resources(where: {and: [{sonraiConfig: {value: CHANGEDETECTION}}]}) {\n    items {\n      name\n      account\n      cloudType\n      lastAlertDate\n      importance\n      region\n      label\n      friendlyName\n      country\n      highestAlertSeverity\n      srn\n      active\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">8976298bb0ab294d1687f91152274e22</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:6f10-4b3f-805c-ec4a3f6669cd/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">57c956362723e740</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">8976298bb0ab294d1687f91152274e22-57c956362723e740-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getAllMonitoredResources</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="stage11733927_18_Policies" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Policies_T01_getControlPolicies" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getControlPolicies&quot;,&quot;variables&quot;:{&quot;filter&quot;:{}},&quot;query&quot;:&quot;query getControlPolicies($filter: ControlpolicyFilter) {\n  ControlPolicies(where: $filter) {\n    items(limit: -1) {\n      srn\n      title\n      createdDate\n      controlPolicyMetaTypes\n      alertingLevel\n      createdBy\n      description\n      alertingLevelNumeric\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">1d61f843b66f77c86d2593150e55a928</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:ee3f-4ab4-abd0-88e34e0f27cd/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">83442ceef1ccc88e</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">1d61f843b66f77c86d2593150e55a928-83442ceef1ccc88e-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getControlPolicies</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://front-end-collector-web.s.sonraisecurity.com/v1/metrics" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;resourceMetrics&quot;:[{&quot;resource&quot;:{&quot;attributes&quot;:[],&quot;droppedAttributesCount&quot;:0},&quot;scopeMetrics&quot;:[{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-document-load&quot;,&quot;version&quot;:&quot;0.27.1&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-fetch&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-long-task&quot;,&quot;version&quot;:&quot;0.30.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-xml-http-request&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;app_layout_error_boundary_errors_count&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;sum&quot;:{&quot;aggregationTemporality&quot;:2,&quot;isMonotonic&quot;:true,&quot;dataPoints&quot;:[]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.graphql&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;graphql_request_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStatsBySwimlane&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1003,&quot;min&quot;:1003,&quot;max&quot;:1003,&quot;startTimeUnixNano&quot;:1680198646508500000,&quot;timeUnixNano&quot;:1680198723511700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchLatestCPEvalLogs&quot;}}],&quot;bucketCounts&quot;:[0,2,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:3,&quot;sum&quot;:3921,&quot;min&quot;:98,&quot;max&quot;:3345,&quot;startTimeUnixNano&quot;:1680198649104000000,&quot;timeUnixNano&quot;:1680198723511700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchTicketCountsForPolicies&quot;}}],&quot;bucketCounts&quot;:[0,1,0,1,0,0,1,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:3,&quot;sum&quot;:7301,&quot;min&quot;:460,&quot;max&quot;:5184,&quot;startTimeUnixNano&quot;:1680198650944800000,&quot;timeUnixNano&quot;:1680198723511700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAccounts&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:419,&quot;min&quot;:419,&quot;max&quot;:419,&quot;startTimeUnixNano&quot;:1680198668642900000,&quot;timeUnixNano&quot;:1680198723511700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSavedSearches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:756,&quot;min&quot;:756,&quot;max&quot;:756,&quot;startTimeUnixNano&quot;:1680198668979200000,&quot;timeUnixNano&quot;:1680198723511700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchSwimlanes&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:861,&quot;min&quot;:861,&quot;max&quot;:861,&quot;startTimeUnixNano&quot;:1680198669084600000,&quot;timeUnixNano&quot;:1680198723511700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiSeaches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:871,&quot;min&quot;:871,&quot;max&quot;:871,&quot;startTimeUnixNano&quot;:1680198669093300000,&quot;timeUnixNano&quot;:1680198723511700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSubscriptions&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:874,&quot;min&quot;:874,&quot;max&quot;:874,&quot;startTimeUnixNano&quot;:1680198669097600000,&quot;timeUnixNano&quot;:1680198723511700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ObjectivesManager&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getObjectives&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:4351,&quot;min&quot;:4351,&quot;max&quot;:4351,&quot;startTimeUnixNano&quot;:1680198675829700000,&quot;timeUnixNano&quot;:1680198723511700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/MonitoredResources&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAllMonitoredResources&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:420,&quot;min&quot;:420,&quot;max&quot;:420,&quot;startTimeUnixNano&quot;:1680198701862900000,&quot;timeUnixNano&quot;:1680198723511700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/MonitoredResources&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getTags&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1995,&quot;min&quot;:1995,&quot;max&quot;:1995,&quot;startTimeUnixNano&quot;:1680198703437600000,&quot;timeUnixNano&quot;:1680198723511700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ControlCenter/Policies/ListPolicy&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getControlPolicies&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1530,&quot;min&quot;:1530,&quot;max&quot;:1530,&quot;startTimeUnixNano&quot;:1680198715069100000,&quot;timeUnixNano&quot;:1680198723511700000}]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.newroute&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;newtab_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[]}},{&quot;name&quot;:&quot;newroute_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:184,&quot;min&quot;:184,&quot;max&quot;:184,&quot;startTimeUnixNano&quot;:1680198645606400000,&quot;timeUnixNano&quot;:1680198723511700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ObjectivesManager&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:4524,&quot;min&quot;:4524,&quot;max&quot;:4524,&quot;startTimeUnixNano&quot;:1680198675857500000,&quot;timeUnixNano&quot;:1680198723511700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneManagement&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:181,&quot;min&quot;:181,&quot;max&quot;:181,&quot;startTimeUnixNano&quot;:1680198686254200000,&quot;timeUnixNano&quot;:1680198723511700000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ControlCenter/Policies/ListPolicy&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,1,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:2663,&quot;min&quot;:2663,&quot;max&quot;:2663,&quot;startTimeUnixNano&quot;:1680198715295500000,&quot;timeUnixNano&quot;:1680198723511700000}]}}]}]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v1/metrics</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="escalations" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://front-end-collector-web.s.sonraisecurity.com/v1/metrics" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;resourceMetrics&quot;:[{&quot;resource&quot;:{&quot;attributes&quot;:[],&quot;droppedAttributesCount&quot;:0},&quot;scopeMetrics&quot;:[{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-document-load&quot;,&quot;version&quot;:&quot;0.27.1&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-fetch&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-long-task&quot;,&quot;version&quot;:&quot;0.30.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-xml-http-request&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;app_layout_error_boundary_errors_count&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;sum&quot;:{&quot;aggregationTemporality&quot;:2,&quot;isMonotonic&quot;:true,&quot;dataPoints&quot;:[]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.graphql&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;graphql_request_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStatsBySwimlane&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1003,&quot;min&quot;:1003,&quot;max&quot;:1003,&quot;startTimeUnixNano&quot;:1680198646508500000,&quot;timeUnixNano&quot;:1680198753513100000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchLatestCPEvalLogs&quot;}}],&quot;bucketCounts&quot;:[0,2,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:3,&quot;sum&quot;:3921,&quot;min&quot;:98,&quot;max&quot;:3345,&quot;startTimeUnixNano&quot;:1680198649104000000,&quot;timeUnixNano&quot;:1680198753513100000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchTicketCountsForPolicies&quot;}}],&quot;bucketCounts&quot;:[0,1,0,1,0,0,1,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:3,&quot;sum&quot;:7301,&quot;min&quot;:460,&quot;max&quot;:5184,&quot;startTimeUnixNano&quot;:1680198650944800000,&quot;timeUnixNano&quot;:1680198753513100000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAccounts&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:419,&quot;min&quot;:419,&quot;max&quot;:419,&quot;startTimeUnixNano&quot;:1680198668642900000,&quot;timeUnixNano&quot;:1680198753513100000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSavedSearches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:756,&quot;min&quot;:756,&quot;max&quot;:756,&quot;startTimeUnixNano&quot;:1680198668979200000,&quot;timeUnixNano&quot;:1680198753513100000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchSwimlanes&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:861,&quot;min&quot;:861,&quot;max&quot;:861,&quot;startTimeUnixNano&quot;:1680198669084600000,&quot;timeUnixNano&quot;:1680198753513100000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiSeaches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:871,&quot;min&quot;:871,&quot;max&quot;:871,&quot;startTimeUnixNano&quot;:1680198669093300000,&quot;timeUnixNano&quot;:1680198753513100000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSubscriptions&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:874,&quot;min&quot;:874,&quot;max&quot;:874,&quot;startTimeUnixNano&quot;:1680198669097600000,&quot;timeUnixNano&quot;:1680198753513100000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ObjectivesManager&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getObjectives&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:4351,&quot;min&quot;:4351,&quot;max&quot;:4351,&quot;startTimeUnixNano&quot;:1680198675829700000,&quot;timeUnixNano&quot;:1680198753513100000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/MonitoredResources&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAllMonitoredResources&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:420,&quot;min&quot;:420,&quot;max&quot;:420,&quot;startTimeUnixNano&quot;:1680198701862900000,&quot;timeUnixNano&quot;:1680198753513100000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/MonitoredResources&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getTags&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1995,&quot;min&quot;:1995,&quot;max&quot;:1995,&quot;startTimeUnixNano&quot;:1680198703437600000,&quot;timeUnixNano&quot;:1680198753513100000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ControlCenter/Policies/ListPolicy&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getControlPolicies&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1530,&quot;min&quot;:1530,&quot;max&quot;:1530,&quot;startTimeUnixNano&quot;:1680198715069100000,&quot;timeUnixNano&quot;:1680198753513100000}]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.newroute&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;newtab_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[]}},{&quot;name&quot;:&quot;newroute_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:184,&quot;min&quot;:184,&quot;max&quot;:184,&quot;startTimeUnixNano&quot;:1680198645606400000,&quot;timeUnixNano&quot;:1680198753513100000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ObjectivesManager&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:4524,&quot;min&quot;:4524,&quot;max&quot;:4524,&quot;startTimeUnixNano&quot;:1680198675857500000,&quot;timeUnixNano&quot;:1680198753513100000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneManagement&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:181,&quot;min&quot;:181,&quot;max&quot;:181,&quot;startTimeUnixNano&quot;:1680198686254200000,&quot;timeUnixNano&quot;:1680198753513100000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ControlCenter/Policies/ListPolicy&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,1,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:2663,&quot;min&quot;:2663,&quot;max&quot;:2663,&quot;startTimeUnixNano&quot;:1680198715295500000,&quot;timeUnixNano&quot;:1680198753513100000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ControlCenter&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:328,&quot;min&quot;:328,&quot;max&quot;:328,&quot;startTimeUnixNano&quot;:1680198729194800000,&quot;timeUnixNano&quot;:1680198753513100000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Escalation&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:172,&quot;min&quot;:172,&quot;max&quot;:172,&quot;startTimeUnixNano&quot;:1680198748699600100,&quot;timeUnixNano&quot;:1680198753513100000}]}}]}]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v1/metrics</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://jaeger-collector-web.s.sonraisecurity.com/jaeger.api_v2.CollectorService/PostSpans" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x0;&#x0;&#x0;&#x8;a&#xd;
Þ&#x10;&#xd;
Ñ&#x3;&#xd;
&#x10;±&#x10;ô&#x85;DTy&#xb;&#x88;$ã/6(é&#x80;&#x12;&#x8;&#x14;Ë]J»&#x14;Òh&#x1a;	new route2&#xc;&#x8;Ü&#x98;&#x97;¡&#x6;&#x10;Õø½û&#x1;:&#x5;&#x10;&#x80;&#x86;&#x82;RB(&#xd;
&#x6;userId&#x1a;&#x1e;auth0|640b315a3dbd33596a1c2217B&#x16;&#xd;
&#x5;orgId&#x1a;&#xd;stage11733927B&#x15;&#xd;
&#xb;app-version&#x1a;&#x6;2.18.1B&#x11;&#xd;
&#x5;tabId&#x1a;&#x8;d7d14c46B0&#xd;
&#x14;window.location.host&#x1a;&#x18;app.s.sonraisecurity.comB+&#xd;
&#x18;window.location.pathname&#x1a;&#xf;/App/EscalationB&#x19;&#xd;
&#x11;window.innerWidth&#x1a;&#x4;1728B&#x1a;&#xd;
&#x12;window.innerHeight&#x1a;&#x4;1001B&#x16;&#xd;
&#xc;browser.name&#x1a;&#x6;chromeB&#x1a;&#xd;
&#xf;browser.version&#x1a;&#x7;110.0.0B&#x14;&#xd;
&#xd;
browser.os&#x1a;&#x6;Mac OSB&#xe;&#xd;
&#x6;newtab&#x1a;&#x4;trueB&#x13;&#xd;
&#xd;
didTimeout&#x1a;&#x5;falseB&#x15;&#xd;
&#xc;navCancelled&#x1a;&#x5;falseR&#xb;&#xd;
	front-end&#xd;
Â&#x6;&#xd;
&#x10;¾&#x8f;&#x5;Â&#xe;eú¨g &#x3;&#x16;ãp&#x1d;û&#x12;&#x8;,`\Â»ð&#x10;Ó&#x1a;&#x8;longtask2&#xc;&#x8;Ü&#x98;&#x97;¡&#x6;&#x10;&#x95;&#x99;ÌÍ&#x2;:&#x5;&#x10;À&#x90;¸*B(&#xd;
&#x6;userId&#x1a;&#x1e;auth0|640b315a3dbd33596a1c2217B&#x16;&#xd;
&#x5;orgId&#x1a;&#xd;stage11733927B&#x15;&#xd;
&#xb;app-version&#x1a;&#x6;2.18.1B&#x11;&#xd;
&#x5;tabId&#x1a;&#x8;d7d14c46B0&#xd;
&#x14;window.location.host&#x1a;&#x18;app.s.sonraisecurity.comB+&#xd;
&#x18;window.location.pathname&#x1a;&#xf;/App/EscalationB&#x19;&#xd;
&#x11;window.innerWidth&#x1a;&#x4;1728B&#x1a;&#xd;
&#x12;window.innerHeight&#x1a;&#x4;1001B&#x16;&#xd;
&#xc;browser.name&#x1a;&#x6;chromeB&#x1a;&#xd;
&#xf;browser.version&#x1a;&#x7;110.0.0B&#x14;&#xd;
&#xd;
browser.os&#x1a;&#x6;Mac OSB&#x16;&#xd;
	component&#x1a;	long-taskB&#x15;&#xd;
&#xd;longtask.name&#x1a;&#x4;selfB&#x1f;&#xd;
&#x13;longtask.entry_type&#x1a;&#x8;longtaskB&#x17;&#xd;
&#x11;longtask.duration&#x1a;&#x2;89B$&#xd;
&#x19;longtask.attribution.name&#x1a;&#x7;unknownB2&#xd;
&#x1f;longtask.attribution.entry_type&#x1a;&#xf;taskattributionB$&#xd;
&#x1f;longtask.attribution.start_time&#x1a;&#x1;0B&quot;&#xd;
&#x1d;longtask.attribution.duration&#x1a;&#x1;0B-&#xd;
#longtask.attribution.container_type&#x1a;&#x6;windowB$&#xd;
&quot;longtask.attribution.container_srcB#&#xd;
!longtask.attribution.container_idB%&#xd;
#longtask.attribution.container_nameR&#xb;&#xd;
	front-end&#xd;
Â&#x6;&#xd;
&#x10;&#xf;E«&apos;s½«&#x90;&#x8a;eëÐd&#x0;È_&#x12;&#x8;òvù|&#x7;&#x5;ýø&#x1a;&#x8;longtask2&#xc;&#x8;Ü&#x98;&#x97;¡&#x6;&#x10;õ&#x8f;&#x8b;ü&#x2;:&#x5;&#x10;&#x80;ñ&#x8c;&apos;B(&#xd;
&#x6;userId&#x1a;&#x1e;auth0|640b315a3dbd33596a1c2217B&#x16;&#xd;
&#x5;orgId&#x1a;&#xd;stage11733927B&#x15;&#xd;
&#xb;app-version&#x1a;&#x6;2.18.1B&#x11;&#xd;
&#x5;tabId&#x1a;&#x8;d7d14c46B0&#xd;
&#x14;window.location.host&#x1a;&#x18;app.s.sonraisecurity.comB+&#xd;
&#x18;window.location.pathname&#x1a;&#xf;/App/EscalationB&#x19;&#xd;
&#x11;window.innerWidth&#x1a;&#x4;1728B&#x1a;&#xd;
&#x12;window.innerHeight&#x1a;&#x4;1001B&#x16;&#xd;
&#xc;browser.name&#x1a;&#x6;chromeB&#x1a;&#xd;
&#xf;browser.version&#x1a;&#x7;110.0.0B&#x14;&#xd;
&#xd;
browser.os&#x1a;&#x6;Mac OSB&#x16;&#xd;
	component&#x1a;	long-taskB&#x15;&#xd;
&#xd;longtask.name&#x1a;&#x4;selfB&#x1f;&#xd;
&#x13;longtask.entry_type&#x1a;&#x8;longtaskB&#x17;&#xd;
&#x11;longtask.duration&#x1a;&#x2;82B$&#xd;
&#x19;longtask.attribution.name&#x1a;&#x7;unknownB2&#xd;
&#x1f;longtask.attribution.entry_type&#x1a;&#xf;taskattributionB$&#xd;
&#x1f;longtask.attribution.start_time&#x1a;&#x1;0B&quot;&#xd;
&#x1d;longtask.attribution.duration&#x1a;&#x1;0B-&#xd;
#longtask.attribution.container_type&#x1a;&#x6;windowB$&#xd;
&quot;longtask.attribution.container_srcB#&#xd;
!longtask.attribution.container_idB%&#xd;
#longtask.attribution.container_nameR&#xb;&#xd;
	front-end</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">jaeger.api_v2.CollectorService/PostSpans</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-User-Agent" elementType="Header">
                  <stringProp name="Header.name">X-User-Agent</stringProp>
                  <stringProp name="Header.value">grpc-web-javascript/0.1</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/grpc-web+proto</stringProp>
                </elementProp>
                <elementProp name="X-Grpc-Web" elementType="Header">
                  <stringProp name="Header.name">X-Grpc-Web</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="stage11733927_19_Bots" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Bots_T01_getBots" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getBots&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getBots {\n  Bots {\n    items {\n      title\n      description\n      type\n      isCustom\n      url\n      status\n      cloud\n      operation\n      lastSync\n      version\n      srn\n      resourceId\n      blob\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">29ccc22cec1cd3e7a46f998b50fe9ccc</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:17ab-41fc-b3e7-345adcc87e3d/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">ea5f6393ba2f732b</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">29ccc22cec1cd3e7a46f998b50fe9ccc-ea5f6393ba2f732b-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getBots</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Bots_T02_fetchPlatformAccounts" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;fetchPlatformAccounts&quot;,&quot;variables&quot;:{&quot;accountLimit&quot;:11,&quot;discoveryLimit&quot;:11,&quot;dcLimit&quot;:11,&quot;rbLimit&quot;:11,&quot;auditLimit&quot;:1},&quot;query&quot;:&quot;query fetchPlatformAccounts($discoveryLimit: Int, $dcLimit: Int, $rbLimit: Int, $auditLimit: Int, $accountLimit: Int) {\n  PlatformAccounts(\n    where: {cloudType: {op: NEQ, value: \&quot;sonraiSaaS\&quot;}, jobLimits: {discoveryLimit: $discoveryLimit, dataClassificationLimit: $dcLimit, remediationBotLimit: $rbLimit}}\n  ) {\n    items {\n      name\n      cloudType\n      srn\n      sid\n      status\n      lastModified\n      createdDate @formatDateTime(epochMilli: true)\n      containsCloudAccount(where: {auditStatusLimit: {limit: $auditLimit}}) {\n        count\n        items(limit: $accountLimit) {\n          name\n          srn\n          blob\n          cloudType\n          createdDate\n          lastModified\n          auditStatus {\n            auditLocation\n            status\n            createdAt\n            updatedAt\n            duration\n            name\n            type\n            __typename\n          }\n          scanConfig {\n            fullyEnabled\n            error\n            scanTypes {\n              configured\n              enabled\n              profileSrn\n              schedule\n              nextScanTime\n              scanType\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      jobs {\n        __typename\n        ... on DiscoveryJobStatus {\n          id\n          type\n          cloudAccountBlob\n          cloudAccountId\n          status\n          createdAt\n          startedAt\n          finishedAt\n          __typename\n        }\n        ... on DataClassificationJobStatus {\n          id\n          type\n          cloudAccountBlob\n          cloudAccountId\n          targetSrn\n          status\n          createdAt\n          startedAt\n          finishedAt\n          __typename\n        }\n        ... on RemediationBotStatus {\n          id\n          type\n          cloudAccountBlob\n          cloudAccountId\n          status\n          createdAt\n          srn\n          targetSrn\n          ticketSrn\n          startedAt\n          finishedAt\n          __typename\n        }\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">55b846b3952884d2ed1369f69f967c2a</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:a3d4-4f75-9d0a-3142ddf21fcc/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">1f9a8f6d88a0b2be</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">55b846b3952884d2ed1369f69f967c2a-1f9a8f6d88a0b2be-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">fetchPlatformAccounts</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="stage11733927_20_Integrations" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Integrations_T01_getIntegrations" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getIntegrations&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getIntegrations {\n  Integrations {\n    items {\n      srn\n      resourceId\n      orgName\n      title\n      description\n      createdDate\n      createdBy\n      type\n      email {\n        emailList {\n          email\n          active\n          deactivateSource\n          __typename\n        }\n        __typename\n      }\n      configs {\n        srn\n        createdDate\n        createdBy\n        type\n        status\n        slack {\n          channels\n          actionTypes\n          slackFilter {\n            ticketKey\n            ticketType\n            allKeys\n            allTypes\n            severityNumeric\n            __typename\n          }\n          __typename\n        }\n        jira {\n          ProjectKey\n          PutLabels\n          __typename\n        }\n        email {\n          actionTypes\n          emailFilter {\n            ticketKey\n            ticketType\n            allKeys\n            allTypes\n            severityNumeric\n            __typename\n          }\n          __typename\n        }\n        azureSentinel {\n          actionTypes\n          __typename\n        }\n        assignment {\n          srn\n          SwimlaneSRN\n          orgName\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">f5cfc1995fc54dd740791dcadd0d9429</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="cache-control" elementType="Header">
                  <stringProp name="Header.name">cache-control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">5eb633de286df0d8</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:1158-4c46-ab86-3edff246710a/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">f5cfc1995fc54dd740791dcadd0d9429-5eb633de286df0d8-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getIntegrations</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://front-end-collector-web.s.sonraisecurity.com/v1/metrics" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;resourceMetrics&quot;:[{&quot;resource&quot;:{&quot;attributes&quot;:[],&quot;droppedAttributesCount&quot;:0},&quot;scopeMetrics&quot;:[{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-document-load&quot;,&quot;version&quot;:&quot;0.27.1&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-fetch&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-long-task&quot;,&quot;version&quot;:&quot;0.30.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-xml-http-request&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;app_layout_error_boundary_errors_count&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;sum&quot;:{&quot;aggregationTemporality&quot;:2,&quot;isMonotonic&quot;:true,&quot;dataPoints&quot;:[]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.graphql&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;graphql_request_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStatsBySwimlane&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1003,&quot;min&quot;:1003,&quot;max&quot;:1003,&quot;startTimeUnixNano&quot;:1680198646508500000,&quot;timeUnixNano&quot;:1680198783512800000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchLatestCPEvalLogs&quot;}}],&quot;bucketCounts&quot;:[0,2,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:3,&quot;sum&quot;:3921,&quot;min&quot;:98,&quot;max&quot;:3345,&quot;startTimeUnixNano&quot;:1680198649104000000,&quot;timeUnixNano&quot;:1680198783512800000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchTicketCountsForPolicies&quot;}}],&quot;bucketCounts&quot;:[0,1,0,1,0,0,1,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:3,&quot;sum&quot;:7301,&quot;min&quot;:460,&quot;max&quot;:5184,&quot;startTimeUnixNano&quot;:1680198650944800000,&quot;timeUnixNano&quot;:1680198783512800000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAccounts&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:419,&quot;min&quot;:419,&quot;max&quot;:419,&quot;startTimeUnixNano&quot;:1680198668642900000,&quot;timeUnixNano&quot;:1680198783512800000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSavedSearches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:756,&quot;min&quot;:756,&quot;max&quot;:756,&quot;startTimeUnixNano&quot;:1680198668979200000,&quot;timeUnixNano&quot;:1680198783512800000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchSwimlanes&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:861,&quot;min&quot;:861,&quot;max&quot;:861,&quot;startTimeUnixNano&quot;:1680198669084600000,&quot;timeUnixNano&quot;:1680198783512800000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiSeaches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:871,&quot;min&quot;:871,&quot;max&quot;:871,&quot;startTimeUnixNano&quot;:1680198669093300000,&quot;timeUnixNano&quot;:1680198783512800000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSubscriptions&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:874,&quot;min&quot;:874,&quot;max&quot;:874,&quot;startTimeUnixNano&quot;:1680198669097600000,&quot;timeUnixNano&quot;:1680198783512800000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ObjectivesManager&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getObjectives&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:4351,&quot;min&quot;:4351,&quot;max&quot;:4351,&quot;startTimeUnixNano&quot;:1680198675829700000,&quot;timeUnixNano&quot;:1680198783512800000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/MonitoredResources&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAllMonitoredResources&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:420,&quot;min&quot;:420,&quot;max&quot;:420,&quot;startTimeUnixNano&quot;:1680198701862900000,&quot;timeUnixNano&quot;:1680198783512800000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/MonitoredResources&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getTags&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1995,&quot;min&quot;:1995,&quot;max&quot;:1995,&quot;startTimeUnixNano&quot;:1680198703437600000,&quot;timeUnixNano&quot;:1680198783512800000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ControlCenter/Policies/ListPolicy&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getControlPolicies&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1530,&quot;min&quot;:1530,&quot;max&quot;:1530,&quot;startTimeUnixNano&quot;:1680198715069100000,&quot;timeUnixNano&quot;:1680198783512800000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/BotManagement&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchPlatformAccounts&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:493,&quot;min&quot;:493,&quot;max&quot;:493,&quot;startTimeUnixNano&quot;:1680198760765200100,&quot;timeUnixNano&quot;:1680198783512800000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/BotManagement&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getBots&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:498,&quot;min&quot;:498,&quot;max&quot;:498,&quot;startTimeUnixNano&quot;:1680198760769600000,&quot;timeUnixNano&quot;:1680198783512800000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/PlatformSettings&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getIntegrations&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:451,&quot;min&quot;:451,&quot;max&quot;:451,&quot;startTimeUnixNano&quot;:1680198776327700000,&quot;timeUnixNano&quot;:1680198783512800000}]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.newroute&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;newtab_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[]}},{&quot;name&quot;:&quot;newroute_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:184,&quot;min&quot;:184,&quot;max&quot;:184,&quot;startTimeUnixNano&quot;:1680198645606400000,&quot;timeUnixNano&quot;:1680198783512800000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ObjectivesManager&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:4524,&quot;min&quot;:4524,&quot;max&quot;:4524,&quot;startTimeUnixNano&quot;:1680198675857500000,&quot;timeUnixNano&quot;:1680198783512800000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneManagement&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:181,&quot;min&quot;:181,&quot;max&quot;:181,&quot;startTimeUnixNano&quot;:1680198686254200000,&quot;timeUnixNano&quot;:1680198783512800000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ControlCenter/Policies/ListPolicy&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,1,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:2663,&quot;min&quot;:2663,&quot;max&quot;:2663,&quot;startTimeUnixNano&quot;:1680198715295500000,&quot;timeUnixNano&quot;:1680198783512800000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ControlCenter&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:328,&quot;min&quot;:328,&quot;max&quot;:328,&quot;startTimeUnixNano&quot;:1680198729194800000,&quot;timeUnixNano&quot;:1680198783512800000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Escalation&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:172,&quot;min&quot;:172,&quot;max&quot;:172,&quot;startTimeUnixNano&quot;:1680198748699600100,&quot;timeUnixNano&quot;:1680198783512800000}]}}]}]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v1/metrics</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="stage11733927_21_classifiers" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Classifiers_T01_getCustomClassifiers" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getCustomClassifiers&quot;,&quot;variables&quot;:{&quot;srnList&quot;:[]},&quot;query&quot;:&quot;query getCustomClassifiers($srnList: [String!]!) {\n  GetCustomClassifiers(srnList: $srnList) {\n    items {\n      params {\n        regexes\n        aliases\n        proximity\n        where\n        disallowed_aliases\n        __typename\n      }\n      srn\n      type\n      atomName\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">1f0d5102448b1a60ae22f14dd5cd3a31</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:b2b4-4df8-b498-0fc7fe6f0cf9/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">1c44f83338a1ba27</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">1f0d5102448b1a60ae22f14dd5cd3a31-1c44f83338a1ba27-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getCustomClassifiers</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="stage11733927_22_Users" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Users_T01_getInvites" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getInvites&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getInvites {\n  SonraiInvites {\n    items {\n      srn\n      email\n      dateSent\n      isPending\n      expiry\n      pendingRoleAssignments {\n        items {\n          srn\n          role {\n            items {\n              srn\n              name\n              __typename\n            }\n            __typename\n          }\n          scope\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">87194bd0a1dc8bd35eb3e5c3d4a23ee6</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:1671-436d-ade4-b167a4ee49b9/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">93b91dc6ef8c15c8</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">87194bd0a1dc8bd35eb3e5c3d4a23ee6-93b91dc6ef8c15c8-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getInvites</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://front-end-collector-web.s.sonraisecurity.com/v1/metrics" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;resourceMetrics&quot;:[{&quot;resource&quot;:{&quot;attributes&quot;:[],&quot;droppedAttributesCount&quot;:0},&quot;scopeMetrics&quot;:[{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-document-load&quot;,&quot;version&quot;:&quot;0.27.1&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-fetch&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-long-task&quot;,&quot;version&quot;:&quot;0.30.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-xml-http-request&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;app_layout_error_boundary_errors_count&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;sum&quot;:{&quot;aggregationTemporality&quot;:2,&quot;isMonotonic&quot;:true,&quot;dataPoints&quot;:[]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.graphql&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;graphql_request_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStatsBySwimlane&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1003,&quot;min&quot;:1003,&quot;max&quot;:1003,&quot;startTimeUnixNano&quot;:1680198646508500000,&quot;timeUnixNano&quot;:1680198813512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchLatestCPEvalLogs&quot;}}],&quot;bucketCounts&quot;:[0,2,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:3,&quot;sum&quot;:3921,&quot;min&quot;:98,&quot;max&quot;:3345,&quot;startTimeUnixNano&quot;:1680198649104000000,&quot;timeUnixNano&quot;:1680198813512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchTicketCountsForPolicies&quot;}}],&quot;bucketCounts&quot;:[0,1,0,1,0,0,1,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:3,&quot;sum&quot;:7301,&quot;min&quot;:460,&quot;max&quot;:5184,&quot;startTimeUnixNano&quot;:1680198650944800000,&quot;timeUnixNano&quot;:1680198813512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAccounts&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:419,&quot;min&quot;:419,&quot;max&quot;:419,&quot;startTimeUnixNano&quot;:1680198668642900000,&quot;timeUnixNano&quot;:1680198813512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSavedSearches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:756,&quot;min&quot;:756,&quot;max&quot;:756,&quot;startTimeUnixNano&quot;:1680198668979200000,&quot;timeUnixNano&quot;:1680198813512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchSwimlanes&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:861,&quot;min&quot;:861,&quot;max&quot;:861,&quot;startTimeUnixNano&quot;:1680198669084600000,&quot;timeUnixNano&quot;:1680198813512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiSeaches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:871,&quot;min&quot;:871,&quot;max&quot;:871,&quot;startTimeUnixNano&quot;:1680198669093300000,&quot;timeUnixNano&quot;:1680198813512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSubscriptions&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:874,&quot;min&quot;:874,&quot;max&quot;:874,&quot;startTimeUnixNano&quot;:1680198669097600000,&quot;timeUnixNano&quot;:1680198813512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ObjectivesManager&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getObjectives&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:4351,&quot;min&quot;:4351,&quot;max&quot;:4351,&quot;startTimeUnixNano&quot;:1680198675829700000,&quot;timeUnixNano&quot;:1680198813512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/MonitoredResources&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAllMonitoredResources&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:420,&quot;min&quot;:420,&quot;max&quot;:420,&quot;startTimeUnixNano&quot;:1680198701862900000,&quot;timeUnixNano&quot;:1680198813512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/MonitoredResources&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getTags&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1995,&quot;min&quot;:1995,&quot;max&quot;:1995,&quot;startTimeUnixNano&quot;:1680198703437600000,&quot;timeUnixNano&quot;:1680198813512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ControlCenter/Policies/ListPolicy&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getControlPolicies&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1530,&quot;min&quot;:1530,&quot;max&quot;:1530,&quot;startTimeUnixNano&quot;:1680198715069100000,&quot;timeUnixNano&quot;:1680198813512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/BotManagement&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchPlatformAccounts&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:493,&quot;min&quot;:493,&quot;max&quot;:493,&quot;startTimeUnixNano&quot;:1680198760765200100,&quot;timeUnixNano&quot;:1680198813512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/BotManagement&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getBots&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:498,&quot;min&quot;:498,&quot;max&quot;:498,&quot;startTimeUnixNano&quot;:1680198760769600000,&quot;timeUnixNano&quot;:1680198813512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/PlatformSettings&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getIntegrations&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:451,&quot;min&quot;:451,&quot;max&quot;:451,&quot;startTimeUnixNano&quot;:1680198776327700000,&quot;timeUnixNano&quot;:1680198813512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/DataClassifierManagement&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getCustomClassifiers&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:179,&quot;min&quot;:179,&quot;max&quot;:179,&quot;startTimeUnixNano&quot;:1680198796953700000,&quot;timeUnixNano&quot;:1680198813512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/UserManagement&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getInvites&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:313,&quot;min&quot;:313,&quot;max&quot;:313,&quot;startTimeUnixNano&quot;:1680198807181100000,&quot;timeUnixNano&quot;:1680198813512000000}]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.newroute&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;newtab_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[]}},{&quot;name&quot;:&quot;newroute_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:184,&quot;min&quot;:184,&quot;max&quot;:184,&quot;startTimeUnixNano&quot;:1680198645606400000,&quot;timeUnixNano&quot;:1680198813512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ObjectivesManager&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:4524,&quot;min&quot;:4524,&quot;max&quot;:4524,&quot;startTimeUnixNano&quot;:1680198675857500000,&quot;timeUnixNano&quot;:1680198813512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneManagement&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:181,&quot;min&quot;:181,&quot;max&quot;:181,&quot;startTimeUnixNano&quot;:1680198686254200000,&quot;timeUnixNano&quot;:1680198813512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ControlCenter/Policies/ListPolicy&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,1,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:2663,&quot;min&quot;:2663,&quot;max&quot;:2663,&quot;startTimeUnixNano&quot;:1680198715295500000,&quot;timeUnixNano&quot;:1680198813512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ControlCenter&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:328,&quot;min&quot;:328,&quot;max&quot;:328,&quot;startTimeUnixNano&quot;:1680198729194800000,&quot;timeUnixNano&quot;:1680198813512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Escalation&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:172,&quot;min&quot;:172,&quot;max&quot;:172,&quot;startTimeUnixNano&quot;:1680198748699600100,&quot;timeUnixNano&quot;:1680198813512000000}]}}]}]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v1/metrics</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="stage11733927_23_Collectors" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://front-end-collector-web.s.sonraisecurity.com/v1/metrics" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;resourceMetrics&quot;:[{&quot;resource&quot;:{&quot;attributes&quot;:[],&quot;droppedAttributesCount&quot;:0},&quot;scopeMetrics&quot;:[{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-document-load&quot;,&quot;version&quot;:&quot;0.27.1&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-fetch&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-long-task&quot;,&quot;version&quot;:&quot;0.30.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-xml-http-request&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;app_layout_error_boundary_errors_count&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;sum&quot;:{&quot;aggregationTemporality&quot;:2,&quot;isMonotonic&quot;:true,&quot;dataPoints&quot;:[]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.graphql&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;graphql_request_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStatsBySwimlane&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1003,&quot;min&quot;:1003,&quot;max&quot;:1003,&quot;startTimeUnixNano&quot;:1680198646508500000,&quot;timeUnixNano&quot;:1680198843512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchLatestCPEvalLogs&quot;}}],&quot;bucketCounts&quot;:[0,2,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:3,&quot;sum&quot;:3921,&quot;min&quot;:98,&quot;max&quot;:3345,&quot;startTimeUnixNano&quot;:1680198649104000000,&quot;timeUnixNano&quot;:1680198843512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchTicketCountsForPolicies&quot;}}],&quot;bucketCounts&quot;:[0,1,0,1,0,0,1,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:3,&quot;sum&quot;:7301,&quot;min&quot;:460,&quot;max&quot;:5184,&quot;startTimeUnixNano&quot;:1680198650944800000,&quot;timeUnixNano&quot;:1680198843512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAccounts&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:419,&quot;min&quot;:419,&quot;max&quot;:419,&quot;startTimeUnixNano&quot;:1680198668642900000,&quot;timeUnixNano&quot;:1680198843512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSavedSearches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:756,&quot;min&quot;:756,&quot;max&quot;:756,&quot;startTimeUnixNano&quot;:1680198668979200000,&quot;timeUnixNano&quot;:1680198843512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchSwimlanes&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:861,&quot;min&quot;:861,&quot;max&quot;:861,&quot;startTimeUnixNano&quot;:1680198669084600000,&quot;timeUnixNano&quot;:1680198843512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiSeaches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:871,&quot;min&quot;:871,&quot;max&quot;:871,&quot;startTimeUnixNano&quot;:1680198669093300000,&quot;timeUnixNano&quot;:1680198843512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSubscriptions&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:874,&quot;min&quot;:874,&quot;max&quot;:874,&quot;startTimeUnixNano&quot;:1680198669097600000,&quot;timeUnixNano&quot;:1680198843512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ObjectivesManager&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getObjectives&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:4351,&quot;min&quot;:4351,&quot;max&quot;:4351,&quot;startTimeUnixNano&quot;:1680198675829700000,&quot;timeUnixNano&quot;:1680198843512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/MonitoredResources&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAllMonitoredResources&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:420,&quot;min&quot;:420,&quot;max&quot;:420,&quot;startTimeUnixNano&quot;:1680198701862900000,&quot;timeUnixNano&quot;:1680198843512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/MonitoredResources&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getTags&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1995,&quot;min&quot;:1995,&quot;max&quot;:1995,&quot;startTimeUnixNano&quot;:1680198703437600000,&quot;timeUnixNano&quot;:1680198843512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ControlCenter/Policies/ListPolicy&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getControlPolicies&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1530,&quot;min&quot;:1530,&quot;max&quot;:1530,&quot;startTimeUnixNano&quot;:1680198715069100000,&quot;timeUnixNano&quot;:1680198843512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/BotManagement&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchPlatformAccounts&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:493,&quot;min&quot;:493,&quot;max&quot;:493,&quot;startTimeUnixNano&quot;:1680198760765200100,&quot;timeUnixNano&quot;:1680198843512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/BotManagement&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getBots&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:498,&quot;min&quot;:498,&quot;max&quot;:498,&quot;startTimeUnixNano&quot;:1680198760769600000,&quot;timeUnixNano&quot;:1680198843512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/PlatformSettings&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getIntegrations&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:451,&quot;min&quot;:451,&quot;max&quot;:451,&quot;startTimeUnixNano&quot;:1680198776327700000,&quot;timeUnixNano&quot;:1680198843512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/DataClassifierManagement&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getCustomClassifiers&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:179,&quot;min&quot;:179,&quot;max&quot;:179,&quot;startTimeUnixNano&quot;:1680198796953700000,&quot;timeUnixNano&quot;:1680198843512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/UserManagement&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getInvites&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:313,&quot;min&quot;:313,&quot;max&quot;:313,&quot;startTimeUnixNano&quot;:1680198807181100000,&quot;timeUnixNano&quot;:1680198843512000000}]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.newroute&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;newtab_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[]}},{&quot;name&quot;:&quot;newroute_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:184,&quot;min&quot;:184,&quot;max&quot;:184,&quot;startTimeUnixNano&quot;:1680198645606400000,&quot;timeUnixNano&quot;:1680198843512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ObjectivesManager&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:4524,&quot;min&quot;:4524,&quot;max&quot;:4524,&quot;startTimeUnixNano&quot;:1680198675857500000,&quot;timeUnixNano&quot;:1680198843512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneManagement&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:181,&quot;min&quot;:181,&quot;max&quot;:181,&quot;startTimeUnixNano&quot;:1680198686254200000,&quot;timeUnixNano&quot;:1680198843512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ControlCenter/Policies/ListPolicy&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,1,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:2663,&quot;min&quot;:2663,&quot;max&quot;:2663,&quot;startTimeUnixNano&quot;:1680198715295500000,&quot;timeUnixNano&quot;:1680198843512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ControlCenter&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:328,&quot;min&quot;:328,&quot;max&quot;:328,&quot;startTimeUnixNano&quot;:1680198729194800000,&quot;timeUnixNano&quot;:1680198843512000000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Escalation&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:172,&quot;min&quot;:172,&quot;max&quot;:172,&quot;startTimeUnixNano&quot;:1680198748699600100,&quot;timeUnixNano&quot;:1680198843512000000}]}}]}]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v1/metrics</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Collectors_T01_getNotifications" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getNotifications&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getNotifications {\n  Notifications(\n    where: {and: [{createdDate: {op: LT, variable: \&quot;now\&quot;}}, {createdDate: {withMods: [{op: ADD, value: {minutes: 60}}], op: GT, variable: \&quot;now\&quot;}}]}\n  ) {\n    count\n    items(limit: 50, orderBy: {createdDate: {order: DESC}}) {\n      msg\n      msgKey\n      msgData\n      createdDate\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">7a55c88a656a6af9526a410a49077cc1</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:7e46-4650-834f-33634f7d2c52/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">f1a7d8af58951076</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">7a55c88a656a6af9526a410a49077cc1-f1a7d8af58951076-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getNotifications</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="stage11733927_24_Accounts" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Accounts_T01_getSaasCollector" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getSaasCollector&quot;,&quot;variables&quot;:{&quot;includeCloudAccounts&quot;:false},&quot;query&quot;:&quot;query getSaasCollector($includeCloudAccounts: Boolean = false) {\n  PlatformAccounts(where: {cloudType: {op: EQ, value: \&quot;sonraiSaaS\&quot;}}) {\n    items {\n      sid\n      srn\n      name\n      cloudType\n      containsCloudAccount @include(if: $includeCloudAccounts) {\n        count\n        items(limit: -1) {\n          name\n          srn\n          sid\n          blob\n          cloudType\n          createdDate\n          lastModified\n          auditStatus {\n            auditLocation\n            status\n            createdAt\n            updatedAt\n            duration\n            name\n            type\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">4eb3fd81c829826d3e5f2126ddcc784e</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:cd77-4f6c-ac1f-91f3751fb877/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">8d361d8b268cfbc9</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">4eb3fd81c829826d3e5f2126ddcc784e-8d361d8b268cfbc9-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getSaasCollector</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Accounts_T02_onboardingManagerGetSaasCollector" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;onboardingManagerGetSaasCollector&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query onboardingManagerGetSaasCollector {\n  PlatformAccounts(where: {cloudType: {op: EQ, value: \&quot;sonraiSaaS\&quot;}}) {\n    items {\n      sid\n      srn\n      name\n      cloudType\n      containsCloudAccount {\n        count\n        items(limit: -1) {\n          name\n          srn\n          sid\n          blob\n          cloudType\n          createdDate\n          lastModified\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">3a4a713a1690d0f413c33887af0043b2</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:250c-4682-9402-75914c55a433/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">417c47d69e2fa290</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">3a4a713a1690d0f413c33887af0043b2-417c47d69e2fa290-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">onboardingManagerGetSaasCollector</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Accounts_T03_getSaasCollectorPaged" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getSaasCollectorPaged&quot;,&quot;variables&quot;:{&quot;limit&quot;:25,&quot;offset&quot;:0,&quot;freeTextFilter&quot;:null},&quot;query&quot;:&quot;query getSaasCollectorPaged($limit: Int = -1, $offset: Int = 0, $freeTextFilter: PlatformcloudaccountFilter) {\n  PlatformAccounts(where: {cloudType: {op: EQ, value: \&quot;sonraiSaaS\&quot;}}) {\n    items {\n      sid\n      srn\n      name\n      cloudType\n      containsCloudAccount(where: $freeTextFilter) {\n        items(limit: $limit, offset: $offset) {\n          name\n          srn\n          sid\n          blob\n          cloudType\n          createdDate\n          lastModified\n          scanConfig {\n            fullyEnabled\n            error\n            scanTypes {\n              configured\n              enabled\n              profileSrn\n              schedule\n              nextScanTime\n              scanType\n              __typename\n            }\n            __typename\n          }\n          auditStatus {\n            auditLocation\n            status\n            createdAt\n            updatedAt\n            duration\n            name\n            type\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">321cde6a7c72d7bd3c3b30962d9e6414</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:82b0-4a9e-b4fb-123ec6678a80/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">0823d94fb71dc7e4</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">321cde6a7c72d7bd3c3b30962d9e6414-0823d94fb71dc7e4-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getSaasCollectorPaged</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Accounts_T04_getSaasCollectorRowCount" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getSaasCollectorRowCount&quot;,&quot;variables&quot;:{&quot;freeTextFilter&quot;:null},&quot;query&quot;:&quot;query getSaasCollectorRowCount($freeTextFilter: PlatformcloudaccountFilter) {\n  PlatformAccounts(where: {cloudType: {op: EQ, value: \&quot;sonraiSaaS\&quot;}}) {\n    items {\n      sid\n      srn\n      name\n      cloudType\n      containsCloudAccount(where: $freeTextFilter) {\n        count\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">5e1c49881c9c7d980d9568420a6097bc</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:2d10-418a-93f7-e3b23b9bc673/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">5fab124323593df8</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">5e1c49881c9c7d980d9568420a6097bc-5fab124323593df8-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">getSaasCollectorRowCount</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Settings" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://front-end-collector-web.s.sonraisecurity.com/v1/metrics" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;resourceMetrics&quot;:[{&quot;resource&quot;:{&quot;attributes&quot;:[],&quot;droppedAttributesCount&quot;:0},&quot;scopeMetrics&quot;:[{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-document-load&quot;,&quot;version&quot;:&quot;0.27.1&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-fetch&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-long-task&quot;,&quot;version&quot;:&quot;0.30.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-xml-http-request&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;app_layout_error_boundary_errors_count&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;sum&quot;:{&quot;aggregationTemporality&quot;:2,&quot;isMonotonic&quot;:true,&quot;dataPoints&quot;:[]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.graphql&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;graphql_request_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStatsBySwimlane&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1003,&quot;min&quot;:1003,&quot;max&quot;:1003,&quot;startTimeUnixNano&quot;:1680198646508500000,&quot;timeUnixNano&quot;:1680198873512200000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchLatestCPEvalLogs&quot;}}],&quot;bucketCounts&quot;:[0,2,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:3,&quot;sum&quot;:3921,&quot;min&quot;:98,&quot;max&quot;:3345,&quot;startTimeUnixNano&quot;:1680198649104000000,&quot;timeUnixNano&quot;:1680198873512200000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchTicketCountsForPolicies&quot;}}],&quot;bucketCounts&quot;:[0,1,0,1,0,0,1,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:3,&quot;sum&quot;:7301,&quot;min&quot;:460,&quot;max&quot;:5184,&quot;startTimeUnixNano&quot;:1680198650944800000,&quot;timeUnixNano&quot;:1680198873512200000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAccounts&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:419,&quot;min&quot;:419,&quot;max&quot;:419,&quot;startTimeUnixNano&quot;:1680198668642900000,&quot;timeUnixNano&quot;:1680198873512200000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSavedSearches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:756,&quot;min&quot;:756,&quot;max&quot;:756,&quot;startTimeUnixNano&quot;:1680198668979200000,&quot;timeUnixNano&quot;:1680198873512200000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchSwimlanes&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:861,&quot;min&quot;:861,&quot;max&quot;:861,&quot;startTimeUnixNano&quot;:1680198669084600000,&quot;timeUnixNano&quot;:1680198873512200000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiSeaches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:871,&quot;min&quot;:871,&quot;max&quot;:871,&quot;startTimeUnixNano&quot;:1680198669093300000,&quot;timeUnixNano&quot;:1680198873512200000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSubscriptions&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:874,&quot;min&quot;:874,&quot;max&quot;:874,&quot;startTimeUnixNano&quot;:1680198669097600000,&quot;timeUnixNano&quot;:1680198873512200000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ObjectivesManager&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getObjectives&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:4351,&quot;min&quot;:4351,&quot;max&quot;:4351,&quot;startTimeUnixNano&quot;:1680198675829700000,&quot;timeUnixNano&quot;:1680198873512200000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/MonitoredResources&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAllMonitoredResources&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:420,&quot;min&quot;:420,&quot;max&quot;:420,&quot;startTimeUnixNano&quot;:1680198701862900000,&quot;timeUnixNano&quot;:1680198873512200000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/MonitoredResources&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getTags&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1995,&quot;min&quot;:1995,&quot;max&quot;:1995,&quot;startTimeUnixNano&quot;:1680198703437600000,&quot;timeUnixNano&quot;:1680198873512200000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ControlCenter/Policies/ListPolicy&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getControlPolicies&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1530,&quot;min&quot;:1530,&quot;max&quot;:1530,&quot;startTimeUnixNano&quot;:1680198715069100000,&quot;timeUnixNano&quot;:1680198873512200000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/BotManagement&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchPlatformAccounts&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:493,&quot;min&quot;:493,&quot;max&quot;:493,&quot;startTimeUnixNano&quot;:1680198760765200100,&quot;timeUnixNano&quot;:1680198873512200000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/BotManagement&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getBots&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:498,&quot;min&quot;:498,&quot;max&quot;:498,&quot;startTimeUnixNano&quot;:1680198760769600000,&quot;timeUnixNano&quot;:1680198873512200000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/PlatformSettings&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getIntegrations&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:451,&quot;min&quot;:451,&quot;max&quot;:451,&quot;startTimeUnixNano&quot;:1680198776327700000,&quot;timeUnixNano&quot;:1680198873512200000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/DataClassifierManagement&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getCustomClassifiers&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:179,&quot;min&quot;:179,&quot;max&quot;:179,&quot;startTimeUnixNano&quot;:1680198796953700000,&quot;timeUnixNano&quot;:1680198873512200000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/UserManagement&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getInvites&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:313,&quot;min&quot;:313,&quot;max&quot;:313,&quot;startTimeUnixNano&quot;:1680198807181100000,&quot;timeUnixNano&quot;:1680198873512200000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/DeployV2&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getNotifications&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:190,&quot;min&quot;:190,&quot;max&quot;:190,&quot;startTimeUnixNano&quot;:1680198844999300000,&quot;timeUnixNano&quot;:1680198873512200000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Accounts&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSaasCollector&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:147,&quot;min&quot;:147,&quot;max&quot;:147,&quot;startTimeUnixNano&quot;:1680198859525600000,&quot;timeUnixNano&quot;:1680198873512200000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Accounts&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;onboardingManagerGetSaasCollector&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:255,&quot;min&quot;:255,&quot;max&quot;:255,&quot;startTimeUnixNano&quot;:1680198859760700000,&quot;timeUnixNano&quot;:1680198873512200000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Accounts&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSaasCollectorRowCount&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:246,&quot;min&quot;:246,&quot;max&quot;:246,&quot;startTimeUnixNano&quot;:1680198859791100000,&quot;timeUnixNano&quot;:1680198873512200000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Accounts&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSaasCollectorPaged&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:532,&quot;min&quot;:532,&quot;max&quot;:532,&quot;startTimeUnixNano&quot;:1680198860077400000,&quot;timeUnixNano&quot;:1680198873512200000}]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.newroute&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;newtab_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[]}},{&quot;name&quot;:&quot;newroute_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:184,&quot;min&quot;:184,&quot;max&quot;:184,&quot;startTimeUnixNano&quot;:1680198645606400000,&quot;timeUnixNano&quot;:1680198873512200000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ObjectivesManager&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:4524,&quot;min&quot;:4524,&quot;max&quot;:4524,&quot;startTimeUnixNano&quot;:1680198675857500000,&quot;timeUnixNano&quot;:1680198873512200000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneManagement&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:181,&quot;min&quot;:181,&quot;max&quot;:181,&quot;startTimeUnixNano&quot;:1680198686254200000,&quot;timeUnixNano&quot;:1680198873512200000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ControlCenter/Policies/ListPolicy&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,1,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:2663,&quot;min&quot;:2663,&quot;max&quot;:2663,&quot;startTimeUnixNano&quot;:1680198715295500000,&quot;timeUnixNano&quot;:1680198873512200000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ControlCenter&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:328,&quot;min&quot;:328,&quot;max&quot;:328,&quot;startTimeUnixNano&quot;:1680198729194800000,&quot;timeUnixNano&quot;:1680198873512200000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Escalation&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:172,&quot;min&quot;:172,&quot;max&quot;:172,&quot;startTimeUnixNano&quot;:1680198748699600100,&quot;timeUnixNano&quot;:1680198873512200000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/DeployV2&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:136,&quot;min&quot;:136,&quot;max&quot;:136,&quot;startTimeUnixNano&quot;:1680198844809400000,&quot;timeUnixNano&quot;:1680198873512200000},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Accounts&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:87,&quot;min&quot;:87,&quot;max&quot;:87,&quot;startTimeUnixNano&quot;:1680198859374500000,&quot;timeUnixNano&quot;:1680198873512200000}]}}]}]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v1/metrics</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="stage11733927_25_Scanstatus" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ScanStatus_T01_scan_profiles" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;scan_profiles&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query scan_profiles {\n  Profiles(where: {type: {value: SCAN}}) {\n    count\n    items {\n      profileSrn: srn\n      altTitle: name\n      title: description\n      createdBySrn: createdBy\n      scan {\n        profileCollectorId: collectorId\n        accounts: accounts\n        __typename\n      }\n      createdDate\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">6ac7889736ed7336c78c9899e502c2de</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:0a00-4ed8-977b-c475d627c023/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">dbee6ac3424c52d4</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">6ac7889736ed7336c78c9899e502c2de-dbee6ac3424c52d4-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">scan_profiles</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ScanStatus_T02_job_definitions_by_profile" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;job_definitions_by_profile&quot;,&quot;variables&quot;:{&quot;scanProfileSrns&quot;:[&quot;srn:stage11733927::Profile/d673f740-cb0d-4ad7-8ee6-f1a42b6e5169&quot;,&quot;srn:stage11733927::Profile/febe9ddf-495e-4f19-8e14-b34177811b86&quot;,&quot;srn:stage11733927::Profile/3aa12012-20f5-4a2d-8996-998f90792b3b&quot;,&quot;srn:stage11733927::Profile/b5adc838-66e5-477f-aa56-ac1b42474cae&quot;,&quot;srn:stage11733927::Profile/70cd296a-ecf4-41ce-b939-e874972aa701&quot;,&quot;srn:stage11733927::Profile/bd04a025-b6a9-42e3-bec0-dd7809ae7536&quot;,&quot;srn:stage11733927::Profile/582dea77-a3a9-490a-b943-dee4be170811&quot;,&quot;srn:stage11733927::Profile/11e26bf3-6140-4b0d-8b4d-ddf6afb6ab16&quot;,&quot;srn:stage11733927::Profile/d7165e7f-f3a4-498c-baa9-6c577d5df1ef&quot;,&quot;srn:stage11733927::Profile/2700f943-7f1a-43c9-8018-05d40ac07bfb&quot;,&quot;srn:stage11733927::Profile/817da2b7-90ae-4351-bf2c-1567fdb93e36&quot;,&quot;srn:stage11733927::Profile/9d0b01c4-4ad2-49d1-af9d-cd21c8151b67&quot;,&quot;srn:stage11733927::Profile/5551e77b-9209-4683-a609-d9017a58dae5&quot;,&quot;srn:stage11733927::Profile/a4911daa-366c-42e5-b2bc-14bbd14504a1&quot;,&quot;srn:stage11733927::Profile/450aafff-2991-4937-bcaf-eb322ceeadc5&quot;,&quot;srn:stage11733927::Profile/0d341bdc-192a-4c20-9687-f73254cc14b2&quot;]},&quot;query&quot;:&quot;query job_definitions_by_profile($scanProfileSrns: [String!]) {\n  JobDefinitions(\n    where: {source: {sourceSrn: {op: IN_LIST, values: $scanProfileSrns}}}\n  ) {\n    items {\n      sources {\n        items {\n          profileSrn: sourceSrn\n          __typename\n        }\n        __typename\n      }\n      lastJob {\n        lastJobStatus: status\n        lastJobStartTime: startTime\n        lastJobEndTime: endTime\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">740c3280c168f0e41c90af929af4b4b8</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:0eee-4c3e-93cb-a2c72c0b3e5b/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">e1c47689364e3b8e</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">740c3280c168f0e41c90af929af4b4b8-e1c47689364e3b8e-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">job_definitions_by_profile</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ScanStatus_T03_collectors" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;collectors&quot;,&quot;variables&quot;:{&quot;collectorSrns&quot;:[&quot;srn:stage11733927::PlatformAccount/ea5e256f-a869-43b8-a974-7afade1388bc&quot;,&quot;srn:stage11733927::PlatformAccount/ea5e256f-a869-43b8-a974-7afade1388bc&quot;,&quot;srn:stage11733927::PlatformAccount/ea5e256f-a869-43b8-a974-7afade1388bc&quot;,&quot;srn:stage11733927::PlatformAccount/64179c9b-b915-4604-82c4-ff71246378d5&quot;,&quot;srn:stage11733927::PlatformAccount/64179c9b-b915-4604-82c4-ff71246378d5&quot;,&quot;srn:stage11733927::PlatformAccount/64179c9b-b915-4604-82c4-ff71246378d5&quot;,&quot;srn:stage11733927::PlatformAccount/cc8648fd-b7f4-4d54-b843-0cfb69a8ba93&quot;,&quot;srn:stage11733927::PlatformAccount/1dc40650-4b23-40af-9aff-668362f25ef8&quot;,&quot;srn:stage11733927::PlatformAccount/1dc40650-4b23-40af-9aff-668362f25ef8&quot;,&quot;srn:stage11733927::PlatformAccount/ea5e256f-a869-43b8-a974-7afade1388bc&quot;,&quot;srn:stage11733927::PlatformAccount/ea5e256f-a869-43b8-a974-7afade1388bc&quot;,&quot;srn:stage11733927::PlatformAccount/2ca8c1b1-7b7f-4494-97dd-d0b0db1d9e5f&quot;,&quot;srn:stage11733927::PlatformAccount/d9d2ef21-9aaa-4bde-aac8-b442de0bcb14&quot;,&quot;srn:stage11733927::PlatformAccount/169c85dd-4e60-4c71-943a-5a7d690ae707&quot;,&quot;srn:stage11733927::PlatformAccount/d6252f3-0aeb-4eb9-bf1e-1cf15d83d27d&quot;,&quot;srn:stage11733927::PlatformAccount/64179c9b-b915-4604-82c4-ff71246378d5&quot;]},&quot;query&quot;:&quot;query collectors($collectorSrns: [String!]) {\n  PlatformAccounts(where: {srn: {op: IN_LIST, values: $collectorSrns}}) {\n    items {\n      collectorSrn: srn\n      collectorName: name\n      cloud: cloudType\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">1fdd230bd04f131ac124a5a3893608be</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:df16-4c51-92d4-5eb24ea837da/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">ca11b633d49a90d3</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">1fdd230bd04f131ac124a5a3893608be-ca11b633d49a90d3-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">collectors</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ScanStatus_T04_accounts" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;accounts&quot;,&quot;variables&quot;:{&quot;accountIds&quot;:[&quot;577945324761&quot;,&quot;577945324761&quot;,&quot;577945324761&quot;,&quot;284563492725&quot;,&quot;380873608913&quot;,&quot;GCPProject|deirdres-project&quot;,&quot;577945324761&quot;,&quot;577945324761&quot;,&quot;577945324761&quot;,&quot;577945324761&quot;,&quot;GCPProject|sj-crew-2&quot;,&quot;777841547793&quot;,&quot;531734574008&quot;,&quot;380873608913&quot;]},&quot;query&quot;:&quot;query accounts($accountIds: [String!]!) {\n  Accounts(where: {account: {op: IN_LIST, values: $accountIds}}) {\n    items {\n      name\n      account\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">c024cef1553b71399a2ad8adae521416</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:4919-41cc-b2fe-c875719df641/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">06b27f6a9f08183e</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">c024cef1553b71399a2ad8adae521416-06b27f6a9f08183e-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">accounts</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ScanStatus_T05_jobs_by_profile" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;jobs_by_profile&quot;,&quot;variables&quot;:{&quot;scanProfileSrns&quot;:[&quot;srn:stage11733927::Profile/d673f740-cb0d-4ad7-8ee6-f1a42b6e5169&quot;,&quot;srn:stage11733927::Profile/febe9ddf-495e-4f19-8e14-b34177811b86&quot;,&quot;srn:stage11733927::Profile/3aa12012-20f5-4a2d-8996-998f90792b3b&quot;,&quot;srn:stage11733927::Profile/b5adc838-66e5-477f-aa56-ac1b42474cae&quot;,&quot;srn:stage11733927::Profile/d7165e7f-f3a4-498c-baa9-6c577d5df1ef&quot;,&quot;srn:stage11733927::Profile/2700f943-7f1a-43c9-8018-05d40ac07bfb&quot;,&quot;srn:stage11733927::Profile/817da2b7-90ae-4351-bf2c-1567fdb93e36&quot;,&quot;srn:stage11733927::Profile/5551e77b-9209-4683-a609-d9017a58dae5&quot;,&quot;srn:stage11733927::Profile/a4911daa-366c-42e5-b2bc-14bbd14504a1&quot;,&quot;srn:stage11733927::Profile/450aafff-2991-4937-bcaf-eb322ceeadc5&quot;]},&quot;query&quot;:&quot;query jobs_by_profile($scanProfileSrns: [String!]) {\n  Jobs(where: {sourceSrn: {op: IN_LIST, values: $scanProfileSrns}}) {\n    items {\n      profileSrn: sourceSrn\n      lastJobStatus: status\n      lastJobStartTime: startTime\n      lastJobEndTime: endTime\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-b3-traceid" elementType="Header">
                  <stringProp name="Header.name">x-b3-traceid</stringProp>
                  <stringProp name="Header.value">67896c09030f00400615d5f38d26b910</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
                <elementProp name="sonraisecurity-com-org" elementType="Header">
                  <stringProp name="Header.name">sonraisecurity-com-org</stringProp>
                  <stringProp name="Header.value">stage11733927</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-sonrai-request-id" elementType="Header">
                  <stringProp name="Header.name">x-sonrai-request-id</stringProp>
                  <stringProp name="Header.value">r:3cb9-412b-a693-52ab2fe70f78/t:d7d14c46/u:640b315a3dbd33596a1c2217</stringProp>
                </elementProp>
                <elementProp name="x-b3-spanid" elementType="Header">
                  <stringProp name="Header.name">x-b3-spanid</stringProp>
                  <stringProp name="Header.value">01e0913c938537b3</stringProp>
                </elementProp>
                <elementProp name="b3" elementType="Header">
                  <stringProp name="Header.name">b3</stringProp>
                  <stringProp name="Header.value">67896c09030f00400615d5f38d26b910-01e0913c938537b3-1</stringProp>
                </elementProp>
                <elementProp name="x-b3-sampled" elementType="Header">
                  <stringProp name="Header.name">x-b3-sampled</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="query-name" elementType="Header">
                  <stringProp name="Header.name">query-name</stringProp>
                  <stringProp name="Header.value">jobs_by_profile</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://front-end-collector-web.s.sonraisecurity.com/v1/metrics" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;resourceMetrics&quot;:[{&quot;resource&quot;:{&quot;attributes&quot;:[],&quot;droppedAttributesCount&quot;:0},&quot;scopeMetrics&quot;:[{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-document-load&quot;,&quot;version&quot;:&quot;0.27.1&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-fetch&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-long-task&quot;,&quot;version&quot;:&quot;0.30.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;@opentelemetry/instrumentation-xml-http-request&quot;,&quot;version&quot;:&quot;0.27.0&quot;},&quot;metrics&quot;:[]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;app_layout_error_boundary_errors_count&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;sum&quot;:{&quot;aggregationTemporality&quot;:2,&quot;isMonotonic&quot;:true,&quot;dataPoints&quot;:[]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.graphql&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;graphql_request_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getStatsBySwimlane&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1003,&quot;min&quot;:1003,&quot;max&quot;:1003,&quot;startTimeUnixNano&quot;:1680198646508500000,&quot;timeUnixNano&quot;:1680198903512400100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchLatestCPEvalLogs&quot;}}],&quot;bucketCounts&quot;:[0,2,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:3,&quot;sum&quot;:3921,&quot;min&quot;:98,&quot;max&quot;:3345,&quot;startTimeUnixNano&quot;:1680198649104000000,&quot;timeUnixNano&quot;:1680198903512400100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchTicketCountsForPolicies&quot;}}],&quot;bucketCounts&quot;:[0,1,0,1,0,0,1,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:3,&quot;sum&quot;:7301,&quot;min&quot;:460,&quot;max&quot;:5184,&quot;startTimeUnixNano&quot;:1680198650944800000,&quot;timeUnixNano&quot;:1680198903512400100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAccounts&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:419,&quot;min&quot;:419,&quot;max&quot;:419,&quot;startTimeUnixNano&quot;:1680198668642900000,&quot;timeUnixNano&quot;:1680198903512400100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSavedSearches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:756,&quot;min&quot;:756,&quot;max&quot;:756,&quot;startTimeUnixNano&quot;:1680198668979200000,&quot;timeUnixNano&quot;:1680198903512400100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchSwimlanes&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:861,&quot;min&quot;:861,&quot;max&quot;:861,&quot;startTimeUnixNano&quot;:1680198669084600000,&quot;timeUnixNano&quot;:1680198903512400100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSonraiSeaches&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:871,&quot;min&quot;:871,&quot;max&quot;:871,&quot;startTimeUnixNano&quot;:1680198669093300000,&quot;timeUnixNano&quot;:1680198903512400100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSubscriptions&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:874,&quot;min&quot;:874,&quot;max&quot;:874,&quot;startTimeUnixNano&quot;:1680198669097600000,&quot;timeUnixNano&quot;:1680198903512400100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ObjectivesManager&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getObjectives&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:4351,&quot;min&quot;:4351,&quot;max&quot;:4351,&quot;startTimeUnixNano&quot;:1680198675829700000,&quot;timeUnixNano&quot;:1680198903512400100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/MonitoredResources&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getAllMonitoredResources&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:420,&quot;min&quot;:420,&quot;max&quot;:420,&quot;startTimeUnixNano&quot;:1680198701862900000,&quot;timeUnixNano&quot;:1680198903512400100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/MonitoredResources&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getTags&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1995,&quot;min&quot;:1995,&quot;max&quot;:1995,&quot;startTimeUnixNano&quot;:1680198703437600000,&quot;timeUnixNano&quot;:1680198903512400100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ControlCenter/Policies/ListPolicy&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getControlPolicies&quot;}}],&quot;bucketCounts&quot;:[0,0,0,1,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:1530,&quot;min&quot;:1530,&quot;max&quot;:1530,&quot;startTimeUnixNano&quot;:1680198715069100000,&quot;timeUnixNano&quot;:1680198903512400100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/BotManagement&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;fetchPlatformAccounts&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:493,&quot;min&quot;:493,&quot;max&quot;:493,&quot;startTimeUnixNano&quot;:1680198760765200100,&quot;timeUnixNano&quot;:1680198903512400100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/BotManagement&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getBots&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:498,&quot;min&quot;:498,&quot;max&quot;:498,&quot;startTimeUnixNano&quot;:1680198760769600000,&quot;timeUnixNano&quot;:1680198903512400100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/PlatformSettings&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getIntegrations&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:451,&quot;min&quot;:451,&quot;max&quot;:451,&quot;startTimeUnixNano&quot;:1680198776327700000,&quot;timeUnixNano&quot;:1680198903512400100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/DataClassifierManagement&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getCustomClassifiers&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:179,&quot;min&quot;:179,&quot;max&quot;:179,&quot;startTimeUnixNano&quot;:1680198796953700000,&quot;timeUnixNano&quot;:1680198903512400100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/UserManagement&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getInvites&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:313,&quot;min&quot;:313,&quot;max&quot;:313,&quot;startTimeUnixNano&quot;:1680198807181100000,&quot;timeUnixNano&quot;:1680198903512400100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/DeployV2&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getNotifications&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:190,&quot;min&quot;:190,&quot;max&quot;:190,&quot;startTimeUnixNano&quot;:1680198844999300000,&quot;timeUnixNano&quot;:1680198903512400100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Accounts&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSaasCollector&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:147,&quot;min&quot;:147,&quot;max&quot;:147,&quot;startTimeUnixNano&quot;:1680198859525600000,&quot;timeUnixNano&quot;:1680198903512400100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Accounts&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;onboardingManagerGetSaasCollector&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:255,&quot;min&quot;:255,&quot;max&quot;:255,&quot;startTimeUnixNano&quot;:1680198859760700000,&quot;timeUnixNano&quot;:1680198903512400100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Accounts&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSaasCollectorRowCount&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:246,&quot;min&quot;:246,&quot;max&quot;:246,&quot;startTimeUnixNano&quot;:1680198859791100000,&quot;timeUnixNano&quot;:1680198903512400100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Accounts&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;getSaasCollectorPaged&quot;}}],&quot;bucketCounts&quot;:[0,0,1,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:532,&quot;min&quot;:532,&quot;max&quot;:532,&quot;startTimeUnixNano&quot;:1680198860077400000,&quot;timeUnixNano&quot;:1680198903512400100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/WorkloadProtection/HostScanning&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;scan_profiles&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:391,&quot;min&quot;:391,&quot;max&quot;:391,&quot;startTimeUnixNano&quot;:1680198902339800000,&quot;timeUnixNano&quot;:1680198903512400100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/WorkloadProtection/HostScanning&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;job_definitions_by_profile&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:347,&quot;min&quot;:347,&quot;max&quot;:347,&quot;startTimeUnixNano&quot;:1680198902689400000,&quot;timeUnixNano&quot;:1680198903512400100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/WorkloadProtection/HostScanning&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;collectors&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:348,&quot;min&quot;:348,&quot;max&quot;:348,&quot;startTimeUnixNano&quot;:1680198902691400000,&quot;timeUnixNano&quot;:1680198903512400100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/WorkloadProtection/HostScanning&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;accounts&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:349,&quot;min&quot;:349,&quot;max&quot;:349,&quot;startTimeUnixNano&quot;:1680198902692300000,&quot;timeUnixNano&quot;:1680198903512400100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/WorkloadProtection/HostScanning&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}},{&quot;key&quot;:&quot;operationName&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;jobs_by_profile&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:171,&quot;min&quot;:171,&quot;max&quot;:171,&quot;startTimeUnixNano&quot;:1680198902864400100,&quot;timeUnixNano&quot;:1680198903512400100}]}}]},{&quot;scope&quot;:{&quot;name&quot;:&quot;sonrai.frontend.newroute&quot;,&quot;version&quot;:&quot;&quot;},&quot;metrics&quot;:[{&quot;name&quot;:&quot;newtab_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[]}},{&quot;name&quot;:&quot;newroute_duration_millis&quot;,&quot;description&quot;:&quot;&quot;,&quot;unit&quot;:&quot;&quot;,&quot;histogram&quot;:{&quot;aggregationTemporality&quot;:2,&quot;dataPoints&quot;:[{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneCheckup&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:184,&quot;min&quot;:184,&quot;max&quot;:184,&quot;startTimeUnixNano&quot;:1680198645606400000,&quot;timeUnixNano&quot;:1680198903512400100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ObjectivesManager&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,0,1,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:4524,&quot;min&quot;:4524,&quot;max&quot;:4524,&quot;startTimeUnixNano&quot;:1680198675857500000,&quot;timeUnixNano&quot;:1680198903512400100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/SwimlaneManagement&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:181,&quot;min&quot;:181,&quot;max&quot;:181,&quot;startTimeUnixNano&quot;:1680198686254200000,&quot;timeUnixNano&quot;:1680198903512400100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ControlCenter/Policies/ListPolicy&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,0,0,0,1,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:2663,&quot;min&quot;:2663,&quot;max&quot;:2663,&quot;startTimeUnixNano&quot;:1680198715295500000,&quot;timeUnixNano&quot;:1680198903512400100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/ControlCenter&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:328,&quot;min&quot;:328,&quot;max&quot;:328,&quot;startTimeUnixNano&quot;:1680198729194800000,&quot;timeUnixNano&quot;:1680198903512400100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Escalation&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:172,&quot;min&quot;:172,&quot;max&quot;:172,&quot;startTimeUnixNano&quot;:1680198748699600100,&quot;timeUnixNano&quot;:1680198903512400100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/DeployV2&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:136,&quot;min&quot;:136,&quot;max&quot;:136,&quot;startTimeUnixNano&quot;:1680198844809400000,&quot;timeUnixNano&quot;:1680198903512400100},{&quot;attributes&quot;:[{&quot;key&quot;:&quot;window.location.host&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;app.s.sonraisecurity.com&quot;}},{&quot;key&quot;:&quot;window.location.pathname&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;/App/Accounts&quot;}},{&quot;key&quot;:&quot;orgId&quot;,&quot;value&quot;:{&quot;stringValue&quot;:&quot;stage11733927&quot;}}],&quot;bucketCounts&quot;:[0,1,0,0,0,0,0,0,0,0,0,0],&quot;explicitBounds&quot;:[0,500,1000,2000,3000,5000,10000,20000,30000,60000,120000],&quot;count&quot;:1,&quot;sum&quot;:87,&quot;min&quot;:87,&quot;max&quot;:87,&quot;startTimeUnixNano&quot;:1680198859374500000,&quot;timeUnixNano&quot;:1680198903512400100}]}}]}]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v1/metrics</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${Token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Logout" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://login.s.sonraisecurity.com/v2/logout?0=%5Bobject%20Object%5D&amp;returnTo=https%3A%2F%2Fapp.s.sonraisecurity.com%2FLogin&amp;client_id=7fQzdcMRARuhzmfP3xoR7JAjfSlttq95&amp;auth0Client=eyJuYW1lIjoiYXV0aDAtc3BhLWpzIiwidmVyc2lvbiI6IjEuNi4zIn0%3D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="0" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">0</stringProp>
                  <stringProp name="Argument.value">[object Object]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="auth0Client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">auth0Client</stringProp>
                  <stringProp name="Argument.value">eyJuYW1lIjoiYXV0aDAtc3BhLWpzIiwidmVyc2lvbiI6IjEuNi4zIn0=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="returnTo" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">returnTo</stringProp>
                  <stringProp name="Argument.value">https://app.s.sonraisecurity.com/Login</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">7fQzdcMRARuhzmfP3xoR7JAjfSlttq95</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v2/logout</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">855359.0</stringProp>
              <stringProp name="ConstantTimer.delay">427679.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 855359 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://app.s.sonraisecurity.com/config.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">config.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://login.s.sonraisecurity.com/authorize?client_id=7fQzdcMRARuhzmfP3xoR7JAjfSlttq95&amp;redirect_uri=https%3A%2F%2Fapp.s.sonraisecurity.com%2FLogin&amp;audience=stage-graphql-server.s.sonraisecurity.com&amp;scope=openid%20profile%20email%20read%3Adata%20read%3Aplatform%20read%3Atoken&amp;response_type=code&amp;response_mode=query&amp;state=eFVfS1FjZkJpQmtTVn5pTklkQWVVVkRsZDREZFJoRV9NZnBCSHkydmF4ZA%3D%3D&amp;nonce=XWWb_Q01P3Fn9iS-_k9kbqYYpgVm6JQrXeNGvviIXN0&amp;code_challenge=M87hJn1pg36e8JIG4AygV_Tklv8YBV90ipSYiWiPfqw&amp;code_challenge_method=S256&amp;auth0Client=eyJuYW1lIjoiYXV0aDAtc3BhLWpzIiwidmVyc2lvbiI6IjEuNi4zIn0%3D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="audience" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">audience</stringProp>
                  <stringProp name="Argument.value">stage-graphql-server.s.sonraisecurity.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="auth0Client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">auth0Client</stringProp>
                  <stringProp name="Argument.value">eyJuYW1lIjoiYXV0aDAtc3BhLWpzIiwidmVyc2lvbiI6IjEuNi4zIn0=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="scope" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">scope</stringProp>
                  <stringProp name="Argument.value">openid profile email read:data read:platform read:token</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="response_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">response_type</stringProp>
                  <stringProp name="Argument.value">code</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="redirect_uri" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">redirect_uri</stringProp>
                  <stringProp name="Argument.value">https://app.s.sonraisecurity.com/Login</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="state" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">state</stringProp>
                  <stringProp name="Argument.value">eFVfS1FjZkJpQmtTVn5pTklkQWVVVkRsZDREZFJoRV9NZnBCSHkydmF4ZA==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="code_challenge_method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">code_challenge_method</stringProp>
                  <stringProp name="Argument.value">S256</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="nonce" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">nonce</stringProp>
                  <stringProp name="Argument.value">XWWb_Q01P3Fn9iS-_k9kbqYYpgVm6JQrXeNGvviIXN0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">7fQzdcMRARuhzmfP3xoR7JAjfSlttq95</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="code_challenge" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">code_challenge</stringProp>
                  <stringProp name="Argument.value">M87hJn1pg36e8JIG4AygV_Tklv8YBV90ipSYiWiPfqw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="response_mode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">response_mode</stringProp>
                  <stringProp name="Argument.value">query</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">authorize</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">1593.0</stringProp>
              <stringProp name="ConstantTimer.delay">796.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 1593 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <CompareAssertion guiclass="TestBeanGUI" testclass="CompareAssertion" testname="Compare Assertion" enabled="false">
        <boolProp name="compareContent">false</boolProp>
        <longProp name="compareTime">5000</longProp>
        <collectionProp name="stringsToSkip"/>
      </CompareAssertion>
      <hashTree/>
      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
        <collectionProp name="Asserion.test_strings"/>
        <stringProp name="Assertion.custom_message"></stringProp>
        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
        <boolProp name="Assertion.assume_success">false</boolProp>
        <intProp name="Assertion.test_type">16</intProp>
      </ResponseAssertion>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>true</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
